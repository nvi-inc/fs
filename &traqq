FTN4X   
      PROGRAM TRAQQ(3,80), AUTOMATIC POSITION FINDER          
C# LAST COMPC'ED  870309:14:48                                # 
C                                         <870309.1447> 
C 
C 
      DIMENSION LUS(5),TOFF(5), 
     + IREG(2),ODDPOW(5),TPOS(20) 
      EQUIVALENCE (REG,IREG)
      DATA TOFF/-10.,-4.0,4.0,10.,0.0/
C 
      CALL RMPAR(LUS) 
C     LUL=LUOPR(IDUM) 
C     LUT=LUTRU(LUL)
C     CALL DTACH(IDUM)
      LUT=LUOPR(IDUM) 
      LUMAT=28
      IHEAD=LUS(1)
      IPASS=LUS(2)
      IOFF0=LUS(3)
      HOFF=IOFF0
      NTIMES=LUS(4) 
      IOFF1=LUS(5)
      ODDBAS=0. 
C  PASS  is specified by >RU,TRAQQ,HEAD,PASS#,OFF0,NTIMES,FINAL OFFSET
250   DO 600 NT=1,NTIMES
      DO 400 IFND=1,4 
      ITRY=HOFF+TOFF(IFND)
C 
C  SCHEDULE HSX TO POSITION THE HEAD STACK
C 
      REG=EXEC(23,6HHSX   ,IHEAD,IPASS,ITRY)
C Read odd and even power levels
255   CALL HATOD(17,LUMAT,5,ISTAT,ODDPOW(IFND)) 
      ODDPOW(IFND)=ODDPOW(IFND)-ODDBAS
      IF(ODDPOW(IFND).GT.0.) GO TO 390
      ODDBAS=ODDPOW(IFND) 
      GO TO 255 
C 
C390  WRITE(LUT,1037) ODDPOW(IFND)  
390   CONTINUE
 1037 FORMAT(F5.2,"_")
400   CONTINUE
      ODDRAW=ODDPOW(1)
      IRAW=1
      DO 280 I=2,4
      IF(ODDPOW(I).LT.ODDRAW) GO TO 280 
      ODDRAW=ODDPOW(I)
      IRAW=I
280   CONTINUE
      IF(IRAW.EQ.2.OR.IRAW.EQ.3) GO TO 282
      ODDPOW(5)=ODDRAW
      ODDPK=TOFF(IRAW)
      GO TO 283 
282   SLOPX1=(ODDPOW(2)-ODDPOW(1))/(TOFF(2)-TOFF(1))
      SLOPX2=(ODDPOW(3)-ODDPOW(4))/(TOFF(4)-TOFF(3))
      SLOPX=0.5*(SLOPX1+SLOPX2) 
      XINT1=0.5*(TOFF(1)+TOFF(2)-(ODDPOW(1)+ODDPOW(2))/SLOPX) 
      XINT2=0.5*(TOFF(4)+TOFF(3)+(ODDPOW(4)+ODDPOW(3))/SLOPX) 
      ODDPK=0.5*(XINT1+XINT2) 
      IF(ODDPK.GT.100..OR.ODDPK.LT.-100.) ODDPK=0.
C     ODDPOW(5)=SLOPX*(ODDPK-XINT1) 
C 
C ON FIRST TRY, ADD IN A SQUARE-WEIGHTED SOLUTION 
C 
283   IF(NT.GT.2) GO TO 289 
      SQSUM=0.
      SQP=0.
      DO 285 ISQ=1,4
      SQ=ODDPOW(ISQ)**2 
      SQP=SQP+SQ*TOFF(ISQ)
285   SQSUM=SQSUM+SQ
      SQP=SQP/SQSUM 
      ODDPK=0.5*(ODDPK+SQP) 
289   ODDPK=ODDPK+HOFF
290   WRITE(LUT,1038) IHEAD,IPASS,ODDPK   
1038  FORMAT("  Head",I2," Pass",I3," Position=",F6.1)
      HNEW=ODDPK
      HOFF=HNEW   
      TPOS(NT)=HOFF 
600   CONTINUE
      IF(NTIMES.GT.1) GO TO 602 
      IFINAL=HOFF 
      GO TO 666 
602   POSN=0. 
      DO 605 I=2,NTIMES 
605   POSN=POSN+TPOS(I) 
      POSN=POSN/(NTIMES-1)
C 
C  SET FINAL POSITION 
C 
      IFINAL=POSN+IOFF1 
610   REG=EXEC(23,6HHSX   ,IHEAD,IPASS,IFINAL)
666   CONTINUE
      END 
      SUBROUTINE HATOD(LUT,LUI,ICHAN,ISTAT,DATA)
      DIMENSION IOUT(9),IRPORT(3),IN(5),IASC(2),ITEMP(2),IOFFOS(8)
      DIMENSION ICONV(3)
$INCLUDE #HPOS::-37 
$INCLUDE #FSCOM::FS 
      EQUIVALENCE (IN(2),IN2),(ITEMP(2),ITEMP2),(IOUT(9),IREAD),
     + (IOUT(2),IOUT2)
      DATA IASC/2,2H01/ 
      DATA IRPORT/2H#A,2H7=,2H?_/ 
      DATA IOUT/16,2H#A,2H7 ,2H=0,2H00,2H00,2H00,2H0$,2H__/ 
      DATA ICONV/2H%_,2H7=,2H% /
      DATA IOFFOS/2H#A,2H7 ,2H=0,2H00,2H10,2H00,2H0$,2H__/
      DATA ITEMP/2,2H00/
      DATA ITURN/020077B/ 
      IF(ICHAN.LT.8.AND.ICHAN.GT.-1) GO TO 10 
C Illegal channel means just report status
      CALL LURQ(10001B,LUI,1) 
      IF(IDEBUG.GT.1) WRITE(LUT,1020) IRPORT
1020  FORMAT("HATOD/ output = ",7A2,A1) 
      WRITE(LUI,1000) IRPORT
1000  FORMAT(8A2) 
      READ(LUI,1000) (IN(I),I=2,5)
      CALL LURQ(110000B,LUI,1)
      IF(IDEBUG.GT.1) WRITE(LUT,1030) (IN(I),I=2,5) 
1030  FORMAT("HATOD/ reply = ",4A2) 
      ISTAT=0 
      IF(IAND(IN2,177400B).EQ.1H8) ISTAT=1
      RETURN
C Request for data
10    CALL CODE 
      WRITE(ITEMP2,1010) ICHAN
1010  FORMAT(I2)
      CALL MOVQQ(ITEMP,2,IOUT,13,1) 
      CALL LURQ(10001B,LUI,1) 
      IF(IDEBUG.EQ.0) GO TO 20
      WRITE(LUT,1020) (IOUT(I),I=2,9) 
      WRITE(LUT,1020) IRPORT
C20   WRITE(LUI,1000) (IOUT(I),I=2,9) 
20    CALL EXEC(2,LUI,IOUT2,-15)
      CALL SUSP(1,5)  
      CALL EXEC(2,LUI,ICONV,1)  
      CALL SUSP(1,5)  
C     WRITE(LUI,1000) (IOUT(I),I=2,9) 
C     CALL EXEC(2,LUI,IREAD,1)
C     CALL EXEC(2,LUI,IRPORT,-5)
      CALL EXEC(3,1200B+LUI,ITURN)
      REG=REIO(1,3200B+LUI,IN2,4) 
C     Turn off LVDT oscillator
      CALL EXEC(2,LUI,IOFFOS,-15) 
      CALL SUSP(1,5)  
      CALL LURQ(110000B,LUI,1)
      CALL HEXI(IN(4),IDATA,4,IERR) 
      DATA=IDATA*0.004882804
      IF(IDEBUG.GT.1) WRITE(LUT,1040) (IN(I),I=2,5),DATA
1040  FORMAT("HATOD/ reply = ",4A2," DATA=",F10.3)
      END 
