FTN4,X
C@INOPR 
C 
        SUBROUTINE INOPR(NAMEI,NAMEC,IP,NAMUS,MCNTL,NCNTL,IERR,IBUF)
     .,C#881208:17:06    INIT OPRIN V=2.0#
C 
C     INOPR 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   INOPR
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL INOPR(NAMEI,NAMEC,IP,NAMUS,MCNTL,NCNTL) 
C 
C     INPUT VARIABLES:
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION NAMEI(14,1),NAMEC(32,1),IP(1),NCNTL(1),IBUF(60) 
C 
C       NAMEI   - INITALIZATION LIST FOR OPRIN (FOR DETAILS SEE &OPRIN) 
C 
C       NAMEC   - CONTROL LIST FOR OPRIN RESPONSE TO CNTL-CHARACTER 
C                 (SEE &OPRIN FOR DEATILS)
C 
C       IP      - INPUT PARAMETERS TO OPRIN 
C 
C     OUTPUT VARIABLES: 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION NAMUS(3)
C 
C       NAMUS  - THE NAME OF THIS PROGRAM FOR NON SUSPENDING TIME SCHEDULING
C 
        DIMENSION MCNTL(1)
C 
C       MCNTL  - THE CNTL BRANCH ARRAY FOR QUICK AND EFFICIENT ROUTING
C 
C       NCNTL   - THE NUMBER OF ENTRIES IN THE BRANCH ARRAY THAT HAVE BEEN USED 
C 
C       IBUF    - INTERNAL BUFFER FOR INPUT INFORMATION 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C 2.3.   DATA BASE ACCESSES 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: OPRIN
C 
C     CALLED SUBROUTINES: IGET, UPPGX, RMPAR, OPEN, ICHMV,
C                         PRSLN, CLOSE, EXEC[3,23,2]
C 
        INTEGER UPPGX,FSCLC 
C 
C 3.  LOCAL VARIABLES 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION IDCB(144),ILIST(3)
C 
C       IBUF   - INTERNAL BUFFER FOR INPUT INFORMATION
C 
C       IDCB    - INTERNAL DCB
C 
C       ILIST   - LIST FOR PARSING NAMEI INPUT LIST 
C 
C 
C       IRGA    - CONTENTS OF A REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
C       IRGB    - CONTENTS OF B-REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
        DIMENSION IREG(2) 
C 
C       IREG    - DUMMY REGISTER RETREIVAL AID
C 
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 4.  CONSTANTS USED
C 
        DATA ILIST/2HSM,2HCL,2HA /
C 
C       ILIST   - PARSING LIST FOR NAMEI INPUT
C 
C               THE SEQUEMCE IN THIS LIST STANDS AS FOLLOWS 
C 
C               S       - SEGMENT 
C               M       - FIELD SYSTEM MANAGER
C               C       - CHECKING SYSTEM MANAGER 
C               L       - LOGGING SYSTEM MANAGER
C               LA      - ASSISTANT LOGGING SYSTEM MANAGER
C 
        DATA NMCMX/20/
C 
C       NMCMX   - MAXIMUM NUMBER OF NAME ENTRIES IN NAMEC 
C 
        DATA NPGMS/10/
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  881208:17:06urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C               6.1  INITIALIZE VARIABLES 
C 
        IERR=0
        IFRR=0
        IRNPRC=0
        ICRPRC=0
C 
C               GET OUR NAME
C 
        IODAD=IGET(1717B) 
C 
        NAMUS=IGET(IODAD+12)
C 
        NAMUS(2)=IGET(IODAD+13) 
C 
        NAMUS(3)=IAND(IGET(IODAD+14),177400B)+40B 
C 
C               CHECK FOR DVF00 IN USE
C 
        ITYP=IDGDT(LUTRU(LU)) 
C 
C               SKIP OUT IF NOT DVF00 
C 
        IF(IAND(ITYP,100B) .NE. 0)GO TO 1000
C 
C               SEND MESSAGE
C 
        IERR=-1 
        CALL SDOUT(LU,-1,NAMUS,0,29H no DVF00 - OPRIN terminating,29) 
C 
C               EXIT
C 
        GO TO 99999 
C 
1000    CONTINUE
C 
C               SET TERMINAL TIME-OUT TO 30 SECONDS 
C 
        IOTO=ITO(LU,3000) 
C 
C               RESET NCNTL'S 
C 
        CALL IFILL(NCNTL(5),1,10,0) 
C 
C 
C               SET UP NCNTL
C 
        NCNTL(1)=NCNTL(3) 
        NCNTL(2)=NCNTL(3) 
C 
C 
C               CREATE CNTL LU
C 
        LU35=3500B+LU 
C 
C               CLEAR CLASS I/O USE BY FIELD SYSTEM 
C 
        NCLCL=FSCLC(2HFS) 
C 
C               CHECK FOR SAM (SYSTEM AVAILABLE MEMORY) 
C 
C   SAMLN DOES NOT WORK UNDER RTE-6, THIS VERSION OF SAMLN ANYWAY 
C 
C       CALL SAMLN(MAXBL,NWORD) 
        MAXBL=100 
        NWORD=500 
C 
        IF(             MAXBL .GE. 100
     C          .AND.   NWORD .GE. 500   )GO TO 2000
C 
C               SEND ERROR MESSAGE
C 
        IERR=-2 
      CALL SDOUT(LU,-2,NAMUS,0,32H SYSTEM AVAILABLE MEMORY problem,32)
C 
C               EXIT
C 
        GO TO 99999 
C 
2000    CONTINUE
C 
C               GET PROGRAM LIST
C 
C               SET I FOR READING NAMEI 
C 
        I=1 
C 
C               OPEN FILE (FSPGM
C 
        CALL OPEN(IDCB,IFRR,6H(FSPGM) 
C 
C               CHECK FOR OPEN ERROR
C 
        IF(IFRR .GE. 0)GO TO 3000 
C 
C               SEND ERROR
C 
        IERR=-3 
        CALL SDOUT(LU,-3,NAMUS,IFRR,21H FMGR error on (FSPGM,21)
C 
C               EXIT
        GO TO 99999 
C 
3000    CONTINUE
C 
4000    CONTINUE
C 
C               READ IN THE NEXT RECORD 
C 
        CALL READF(IDCB,IFRR,IBUF,60,LEN) 
C 
C               CHECK FOR EOF 
C 
        IF(LEN .LT. 0)GO TO 6100
C 
C               CHECK FOR READ ERROR
C 
        IF(IFRR .GE. 0)GO TO 4001 
C 
C               SEND ERROR
C 
        IERR=-4 
        CALL SDOUT(LU,-4,NAMUS,IFRR,26H FMGR error reading (FSPGM,26) 
C 
C               EXIT
C 
        GO TO 99999 
C 
4001    CONTINUE
C 
C 
C               CKECK FOR COMMENT RECORD
C 
        IF(ICHAR(IBUF,1) .EQ. 52B)GO TO 4000
C 
C               INITIALIZE FOR RECORD PARSING 
C 
        CALL IFILL(NAMEI(1,I),1,6,2H  ) 
        CALL IFILL(NAMEI(1,I),7,22,0) 
        ISP=0 
        IO1=0 
        IPRTY=0 
        ISOP=0
        IOOP=20B
        ICF=1 
        ICN=0 
        IGO=0 
        INP=0 
        IIST=0
        IEND=LEN+LEN
C 
4010    CONTINUE
C 
C               STEP TO NEXT PARM ENTRY 
C 
        IGO=IGO+1 
C 
C               CHECK FOR ENDING SEARCH 
C 
        IF(IGO .GT. 11)GO TO 4999 
C 
C               FIND THE NEXT COMMA 
C 
        ICN=ISCNC(IBUF,ICF,IEND,54B)-1
C 
C               IF NO MORE COMMA TRY NEXT BLANK 
C 
        IF(ICN .EQ. -1)ICN=ISCNC(IBUF,ICF,IEND,40B)-1 
C 
C               IF NEITHER BLANK NOR COMMA LEFT USE REST OF INPUT 
C 
        IF(             ICF .LE. IEND 
     C          .AND.   ICN .EQ. -1)ICN=IEND
C 
C               IF NONE OF THE ABOVE CASES QUIT NOW 
C 
        IF(ICN .EQ. -1)GO TO 4999 
C 
C               CHECK FOR NULL FIELD
C 
        IF(ICN .LT. ICF)GO TO 4900
C 
C               PICK ROUTE TO PARSE INFORMATION 
C 
        GO TO (4100,4200,4300,4300,4300,4300,4700),IGO
C 
4100    CONTINUE
C 
C               MOVE NAME IN
C 
        CALL ICHMV(NAMEI(1,I),1,IBUF,ICF,ICN-ICF+1) 
C 
C               GET IDSEG ADDRESS FOR LATER USES
C 
        IDAD=IGID(NAMEI(1,I)) 
C 
C 
C               CONTINUE SEARCH 
C 
        GO TO 4900
4200    CONTINUE
C 
C               GET THE CHARACTER 
C 
        ICH=ICHAR(IBUF,ICF) 
C 
C               MAP TO LIST 
C 
        ISP=ISCNC(ILIST,1,5,ICH)
C 
C               IF NO MATCH IGNORE
C 
        IF(ISP .EQ. 0)GO TO 4900
C 
C               CHECK FOR LA CASE 
C 
        IF(              ISP .EQ. 4 
     C          .AND.   (ICN .EQ. ICF+1 
     C          .AND.    ICHCM(IBUF,ICF,ILIST,4,2) .EQ. 0)) 
     C                  ISP=5 
C 
C               NOTE PROGRAM TYPE FOUND 
C 
        IF(ISP .GT. 1)NCNTL(4+ISP)=I
C 
C               GET NEXT
C 
        GO TO 4900
C 
4300    CONTINUE
C 
C               GET THE NUMERIC VALUE OF THE FIELD
C 
        REG=GBFAS(IBUF,ICF,ICN) 
C 
C               CHECK FOR NUMBER FOUND
C 
        IF(ICHAR(IRGB,1) .NE. 0)GO TO 4390
C 
C               SELECT FIELD FOR NUMBERS ASSIGNMENT 
C 
        GO TO (4330,4340,4350,4360),IGO-2 
C 
4330    CONTINUE
        IO1=IAND(IRGA,17B)
C 
C               OFF THE PROGRAM NOW 
C 
        CALL IDOFF(IDAD,IO1)
C 
        GO TO 4900
C 
4340    CONTINUE
        IPRTY=IRGA
        GO TO 4900
C 
4350    CONTINUE
        ISOP=IAND(IRGA,37B) 
        GO TO 4900
C 
4360    CONTINUE
        IOOP=IAND(IRGA,17B) 
        GO TO 4900
C 
4390    CONTINUE
C 
C               WRITE OUT ERROR MESSAGE 
C 
        CALL LOGIT(0,0,0,1,2,NAMUS,(I*100+IGO)) 
C 
        GO TO 4900
C 
4700    CONTINUE
C 
C               NOTE AN INPUT PARM FOUND
C 
        INP=INP+1 
C 
C               CHECK FOR INPUT PARM REFERENCE
C 
        IF(             ICHAR(IBUF,ICF) .NE. 76B
     C          .OR.    ICN .NE. ICF+1  )GO TO 4710 
C 
C               CONVERT SECOND CHARACTER FOR PARM ID
C 
        REG=GBFAS(IBUF,ICN,ICN) 
C 
C               CHECK FOR VALID PARM REFERENCE
C 
        IF(             ICHAR(IRGB,1) .NE. 0
     C          .OR.    IRGA .GT. 5             )GO TO 4710 
C 
C               MORE THE INPUT PARM INTO THIS FIELD 
C 
        NAMEI(IGO+2,I)=IP(IRGA) 
C 
        GO TO 4900
C 
4710    CONTINUE
C 
C               TRY FULL CONVERSION 
C 
        REG=GBFAS(IBUF,ICF,ICN) 
C 
C               IF NOT A NUMBER GO MOVE IN CHARACTERS 
C 
        IF(ICHAR(IRGB,1) .NE. 0)GO TO 4720
C 
C               SAVE THIS VALUE IN
C 
        NAMEI(IGO+2,I)=IRGA 
C 
        GO TO 4900
C 
4720    CONTINUE
C 
C               MOVE IN CHARACTERS
C 
        IMV=MIN0(2,ICN-ICF+1) 
C 
        CALL ICHMV(NAMEI(IGO+2,I),1,IBUF,ICF,IMV) 
C 
        GO TO 4900
C 
4900    CONTINUE
C 
C               STEP OVER LAST COMMA FOR LOOP BACK
C 
        ICF=ICN+2 
C 
C               LOOP BACK FOR NEXT PARM 
C 
        IF(ICF .LE. IEND)GO TO 4010 
C 
4999    CONTINUE
C 
C               NOTE IF PRESENT NOW 
C 
        IF(IDAD .NE. 0)IIST=40B 
C 
C               FINISH PARM CONSTRUCTION
C 
        NAMEI(7,I)=IO1*400B+IIST+ISOP 
        NAMEI(8,I)=ISP*400B+IOOP
        NAMEI(14,I)=INP 
C 
C 
C 
C               HAVE PROGRAM SET UP PROPERLY
C 
        IFRR=UPPGX(NAMEI(1,I),NAMEI(4,I),NAMEI(5,I))
C 
C               CHECK FOR ERROR LOADING NEEDED PROGRAM
C 
        IF(IFRR .GE. 0 .AND. IFRR .NE. 14)GO TO 6000
C 
C               RECORD ERROR
C 
        IERR=-5 
      CALL SDOUT(LU,-5,NAMUS,IFRR,29H line program fetch in (FSPGM,29)
C 
C               NOW EXIT
C 
        GO TO 90000 
C 
6000    CONTINUE
C 
C               SAVE CURRENT ENTRIES UP TO NOW
C 
        NCNTL(5)=I
C 
C               STEP TO NEXT VALUE
C 
        I=I+1 
C 
C               LOOP BACK FOR MORE ROOM 
C 
        IF(I .LE. NCNTL(4))GO TO 4000 
C 
6100    CONTINUE
C 
C               SAVE NUMBER OF ENTRIES FOUND
C 
        NCNTL(5)=I-1
C 
C               GET CONTROL PARAMETERS FOR REST 
C 
        NB=NCNTL(6) 
        NC=NCNTL(7) 
        NL=NCNTL(8) 
        NLA=NCNTL(9)
C 
C               SET OPERATOR CLASS FOR NEW ASSIGNMENT 
C 
        ICLOPR=0
C 
C               IF NO BOSS SKIP 
C 
        IF(NB .EQ. 0)GO TO 20300
C 
C               GET IRNPRC
C 
        CALL RNRQ(100010B,IRNPRC,ISTAT) 
C 
C               CHECK IRNPRC ALLOCATED
C 
       IERR=-8
        IF(ISTAT .NE. 1)GO TO 90000 
C 
C               SEND COMING UP MESSAGE
C 
      CALL EXEC(20,0,30H"BOSS INITIALIZATION COMPLETE",-30, 
     .2HFS,0,ICLOPR)
C 
C               RESET A & B REGS
C 
        REG=0 
C 
C               ACTIVATE BOSS WITH INPUT PARAMETERS 
C 
        REG=EXEC(23,NAMEI(1,NB),IP(1),IP(2),IP(3),IP(4),IP(5))
C 
C               GET RETURNED PARAMETERS IF PRESENT
C 
        CALL RMPAR(IP)
C 
C               CHECK TO SEE IF INFO RETURNED 
C 
        IF(IRGB .EQ. 0)GO TO 20000
C 
C               SIGNAL ERROR TO OPRIN 
C 
        IERR=-7 
C 
        GO TO 90000 
C 
20000   CONTINUE
C 
C               IF NOT DDOUT SKIP 
C 
        IF(NL .EQ. 0)GO TO 20300
C 
C               START DDOUT NOW 
C 
D     WRITE(16,9902) NL,(NAMEI(I,NL),I=1,10)
D9902 FORMAT("NL,NAMEI="I3,1X,3A2,1X,7O7) 
        CALL EXEC(IAND(NAMEI(7,NL),37B),NAMEI(1,NL),ICLBOX) 
C 
20300   CONTINUE
C 
C               CHECK BOSS IS ALIVE AN WELL 
C 
        IDBOS=IGID(NAMEI(1,NB)) 
C 
C               IF NOT PRESENT EXIT NOW 
C 
       IERR=-9
        IF(IDBOS .EQ. 0)GO TO 90000 
C 
C               IF NOT WELL EXIT NOW
C 
       IERR=-10 
        IF(IXGET(IDBOS+8) .EQ. 0)GO TO 90000
C 
C               IF NO CHECKER IGNORE NEXT 
C 
        IF(NC .EQ. 0)GO TO 20700
C 
C               START CHEKR NOW 
C 
        CALL EXEC(IAND(NAMEI(7,NC),37B),NAMEI(1,NC),NAMEI(9,NC) 
     .,NAMEI(10,NC),NAMEI(11,NC),NAMEI(12,NC),NAMEI(13,NC)) 
C 
C               SET MALRM TO ANSWER ALARMS ON ASCII TRANS LU
C 
C ***   CALL EXEC(3,2700B+LUMAT,IGID(6HMALRM )) 
C 
20700   CONTINUE
C 
C               6.2     READ IN CONTROL PROGRAM LIST
C 
        CALL OPEN(IDCB,IFRR,6H(OPPGM,0,0,ICRPRC)
C 
C               CHECK FILE OPENED O. K. 
C 
        IF(IFRR .GE. 0)GO TO 21000
C 
C               TELL OF ERROR AND ABORT 
C 
        IERR=-11
C 
        GO TO 90000 
C 
21000    CONTINUE 
C 
C               READ IN THE LIST
C 
        ILOC=1
C 
22000    CONTINUE 
C 
        CALL READF(IDCB,IFRR,IBUF,40,ILEN)
C 
C               CHECK FOR ERRORS
C 
        IF(IFRR .GE. 0)GO TO 23000
C 
C               TELL OF READ ERROR AND ABORT
C 
        IERR=-12
C 
        GO TO 90000 
C 
23000    CONTINUE 
C 
C               CHECK FOR COMMENT AND IGNORE IF IT IS 
C 
        IF(ICHAR(IBUF,1) .EQ. 52B)GO TO 22000 
C 
C               INITIALIZE NAMEC(12,ILOC) 
C 
        NAMEC(12,ILOC)=0
C 
C               IF EOF SKIP OUT 
C 
        IF(ILEN .LT. 0)GO TO 25000
C 
C               CONVERT AND SAVE FIRST CHARACTER
C 
        NCNTL=ICHMV(MCNTL,NCNTL,IBUF,1,1) 
C 
C               GET CHARACTER SIZE OF RECORD
C 
        ISZ=ILEN+ILEN 
C 
C               TEST FOR COMMENT INPUT IN THIS RECORD 
C 
        ICM=ISCNC(IBUF,3,ISZ,42B) 
C 
C               IF COMMA ONLY USE FIRST PART FOR PARSING
C 
        IF(ICM .GT. 0)ISZ=ICM-1 
C 
C               NOW PARSE REST OF INPUT STREAM
C 
        CALL PRSLN(IBUF(2),ISZ-2,NAMEC(1,ILOC)) 
C 
C               SAVE THE NUMBER OF PARAMETERS PRESENT 
C 
        NAMEC(11,ILOC)=MAX0(NAMEC(11,ILOC)-1,0) 
C 
C 
C               NOTE CURRENT STATUS OF PROGRAM
C 
        IF(IGID(NAMEC(1,ILOC)) .NE. 0)
     C          NAMEC(4,ILOC)=IOR(NAMEC(4,ILOC),100000B)
C 
C               TEST FOR COMMENT
C 
        IF(ICM .EQ. 0)GO TO 24000 
C 
C               GET MAX COMMENT SIZE
C 
        ICC=MIN0(ILEN+ILEN-ICM,40)
C 
C               SAVE SIZE FOR DISPLAY 
C 
        NAMEC(12,ILOC)=ICC
C 
C               MOVE COMMENT INTO SAVE AREA 
C 
        CALL ICHMV(NAMEC(13,ILOC),1,IBUF,ICM+1,ICC) 
C 
24000   CONTINUE
C 
C               STEP TO NEXT ENTRY AND READ ANOTHER RECORD
C 
        ILOC=ILOC+1 
C 
C               CHECK LIMIT NOT EXCEEDED
C 
        IF(ILOC .LE. NMCMX)GO TO 22000
C 
C               TELL LIMIT REACHED - TELL LIMIT 
C 
        CALL LOGIT(0,0,0,1,1,NAMUS,NMCMX) 
C 
25000    CONTINUE 
C 
C               RESET NCNTL TO ONLY NUMBER IN USE 
C 
        NCNTL=NCNTL-1 
C 
        ILOC=ILOC-1 
C 
C               NOW CLOSE DCB 
C 
        CALL CLOSE(IDCB,IFRR) 
C 
C               SET UP FOR SETTM LOOP 
C 
        ITRY=0
C 
27000   CONTINUE
C 
C               LOOK FOR S IN THE LIST implies SETTM
C 
        ISIS=ISCNC(MCNTL,1,NCNTL,123B)-NCNTL(2)+1 
C 
C               NOT FOUND IF NEGATIVE 
C 
        IF(ISIS .LE. 0)GO TO 30000
C 
C               GET THE COMPUTER CLOCK TIME 
C 
        CALL EXEC(11,IP,IP(6))
C 
C               CHECK FOR VALID TIME (HOPEFULLY !!!!) 
C 
        IF(             IP(6) .GE. 1982 ) GOTO 30000
C 
C               COMPUTER SAYS IT IS BEFORE THIS WAS WRITTEN 
C 
        IFRR=LPROP(NAMEC(1,ISIS),LU,1)
C 
C               IF RUNNING FAILED NOTE AND SKIP RETRY 
C 
        IF(IFRR .EQ. 0)GO TO 29000
C 
C               TELL OF PROBLEM 
C 
        CALL LOGIT(0,0,0,1,-15,NAMUS,IFRR)
C 
        GO TO 29900 
C 
29000   CONTINUE
C 
C               NOTE TRY
C 
        ITRY=ITRY+1 
C 
C               GO FOR TWO TRIES
C 
        IF(ITRY .LT. 2)GO TO 27000
C 
29900   CONTINUE
C 
C               TELL OF TROUBLE (with wrong date and time !%$#&)
C 
        CALL LOGIT(0,0,0,1,-14,NAMUS,IP(6)) 
C 
30000   CONTINUE
C 
C               ACTIVATE CNTL FUNCTIONS 
C 
        CALL EXEC(3,LU35,IODAD) 
C 
C               SET BREAK TO NOT SUSPEND
C 
        CALL EXEC(3,2700B+LU,77777B)
C 
C               TELL INIALIZATION ERROR FREE
C 
        IERR=0
C 
C               IF NO BOSS SKIP TO EXIT 
C 
        IF(NB .EQ. 0)GO TO 99999
C 
C               START BOSS ON THE INITIALIZATION PROCEDURE
C 
        CALL EXEC(20,0,5HINITI,-5,2HFS,0,ICLOPR)
C 
C               START BOSS WITH NEW PROCEDURE 
C 
        CALL EXEC(IAND(NAMEI(7,NB),37B),NAMEI(1,NB),NAMEI(9,NB) 
     .,NAMEI(10,NB),NAMEI(11,NB),NAMEI(12,NB),NAMEI(13,NB)) 
C 
        GO TO 99999 
C 
90000   CONTINUE
C 
C               WRITE OUT ERROR MESSAGE 
C 
        IF(IFRR .LT. 0)CALL LOGIT(0,0,0,1,IERR,NAMUS,IFRR)
  
        IF(IFRR .GE. 0)CALL LOGIT(0,0,0,0,IERR,NAMUS) 
C 
C 
99999   CONTINUE
C 
        RETURN
        END 
        END$
