FTN77,I,Y
$CDS ON
C@LOGEN 
      SUBROUTINE LOGEN(IBUF,NCH,LMESSG,NCHAR,LSOR,LPROCN, 
     .           IERR,LWHO,LWHAT),FORMAT LOG ENTRIES C#870407:12:14 # 
C 
C     LOGEN formats a buffer for the log file.
C     Character messages are displayed as is, errors are formatted
C     in a standard format. 
C     For normal Field System messages, only 6 parameters need be input.
C     For external messages, only 4 parameters are needed.
C     For error messages, all 8 (9 if LWHAT is present) parameters are
C     required although the message and procedure name are ignored for now. 
C 
C  INPUT: 
C 
      DIMENSION LMESSG(1) 
C      - the buffer holding the message 
C     NCHAR - length of the message, in characters
C     LSOR - source of the message, 1 character (determined by BOSS)
      DIMENSION LPROCN(1) 
C      - the procedure file from whence this message came, 12 chars 
C     IERR - error number, if this is an error
C     LWHO - source of the error, 2 chars, e.g. Qx for QUIKR or BO for BOSS.
C     LWHAT - what caused the error (usually a device name), 2 chars. 
C             If LWHAT is binary, it is converted to a 4-char ASCII number. 
C             Indicate LWHAT is binary by setting LPROCN>0. 
C             This parameter should be 0 if not relevant. 
C 
C  OUTPUT:
C 
      DIMENSION IBUF(1) 
C      - a buffer to hold the output entry
C     **NOTE** We assume that IBUF has at least enough room to
C              hold the message sent to us plus up to 16 more characters. 
C     NCH - number of characters in IBUF
C 
C  LOCAL: 
C 
      DIMENSION ITIME(5)
C      - to retrieve system time
C     NARGS - number of arguments passed to us
      DIMENSION LNAME(3)
C      - the calling program's name 
C 
C 
C     1. Get the number of parameters we were sent. 
C     Get the current time and put into our output buffer.
C 
      NARGS = PCOUNT()
      CALL EXEC(11,ITIME) 
      NCH = 1 + IB2AS(ITIME(5),IBUF,1,41000B+3) 
      NCH = NCH + IB2AS(ITIME(4),IBUF,NCH,41000B+2) 
      NCH = NCH + IB2AS(ITIME(3),IBUF,NCH,41000B+2) 
      NCH = NCH + IB2AS(ITIME(2),IBUF,NCH,41000B+2) 
C 
C 
C     2. If this is an error message, format it appropriately.
C 
C     IF (IERR.EQ.0.OR.NARGS.LT.8) GOTO 300 
      IF(NARGS.LT.8) GO TO 300
      IF(IERR.EQ.0) GO TO 300
      NCH = ICHMV(IBUF,NCH,7H?ERROR ,1,7) 
      NCH = ICHMV(IBUF,NCH,LWHO,1,2)
      NCH = ICHMV(IBUF,NCH,2H  ,1,1)
      NCH = NCH + IB2AS(IERR,IBUF,NCH,4)
C     IF (NARGS .LT. 9 .OR. LWHAT.EQ.0) GOTO 900
      IF(NARGS.LT.9) GOTO 900
      IF(LWHAT.EQ.0) GOTO 900
      NCH = ICHMV(IBUF,NCH,2H( ,1,1)
      IF (LPROCN.LE.0) NCH = ICHMV(IBUF,NCH,LWHAT,1,2)
      IF (LPROCN.GT.0) NCH = NCH+IB2AS(LWHAT,IBUF,NCH,4)
      NCH = ICHMV(IBUF,NCH,2H) ,1,1)
D     NW = (NCH+1)/2
D     WRITE(1,9901) NCH,(IBUF(I),I=1,NW)
D9901 FORMAT("NCH,IBUF="I5,1X,80A2) 
      GOTO 900
C 
C 
C     3. This section is for Field System messages. 
C     Move procedure name and message into output buffer. 
C     If the first character of the message source is $ or &
C     then the procedure name should be logged. 
C 
300   IF (NARGS.LT.5) GOTO 400
      NCH = ICHMV(IBUF,NCH,LSOR,1,1)
      IF (JCHAR(LSOR,1).NE.44B.AND.JCHAR(LSOR,1).NE.46B) GOTO 350 
      I = IFLCH(LPROCN,12)
C                   Find last non-blank character in proc name
      NCH = ICHMV(IBUF,NCH,LPROCN,1,I)
C                   Move proc name into output buffer 
      NCH = ICHMV(IBUF,NCH,2H/ ,1,1)
C                   Put a / after proc name 
350   NCH = ICHMV(IBUF,NCH,LMESSG,1,NCHAR)
C                   Finally move the log entry in 
      GOTO 900
C 
C 
C     4. This section is for non-Field System entries.
C     Get the calling program's name and put it into the entry. 
C     Identify this type of entry with the special character #. 
C 
400   CALL PNAME(LNAME) 
C                   Get our caller's name 
      NCH = ICHMV(IBUF,NCH,2H# ,1,1)
C                   Put the message type special character into the buffer
      I = IFLCH(LNAME,5)
C                   Search the name for trailing blanks 
      NCH = ICHMV(IBUF,NCH,LNAME,1,I) 
C                   Move the program name into the bufer
      NCH = ICHMV(IBUF,NCH,2H# ,1,1)
C                   Put a # after the program name
      NCH = ICHMV(IBUF,NCH,LMESSG,1,NCHAR)
C                   Finally, move in the message part itself
C 
C 
900   RETURN
      END 
