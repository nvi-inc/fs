FTN77,I,Y
$CDS ON
      FUNCTION IAT(ITRAN,NTR,LUMAT,KECHO,LU,IRECV,NRC,IERR)
C 
C   IAT handles communications with the MAT 
C 
C  WHO DATE    CHANGE 
C  NRV 810624 MODIFY FOR DVF00 TRIGGER CHAR IMMEDIATE TURNAROUND
C  NRV 811012 REMOVE SOME WVR-SPECIFIC CODE (AFTER RBM) 
C  MWH 870911 Modify for use with A400 8-channel MUX
C 
C     INPUT VARIABLES:
C 
C        NTR    - number of characters in ITRAN 
      DIMENSION ITRAN(1)
C               - buffer to be transmitted
C        LUMAT  - LU of MAT daisy chain 
      LOGICAL KECHO 
C              - true if MAT communications echo desired
C        LU     - LU for operator's terminal
C 
C     OUTPUT VARIABLES: 
C 
C        NRC    - number of characters in received buffer 
      DIMENSION IRECV(1)
C               - buffer received from AT 
C        IERR   - error code
C 
C     CALLING SUBROUTINES: MATCN,DATAT
C 
C     CALLED SUBROUTINES: character utilities, REIO(1and 2)s
C 
C LOCAL VARIABLES 
C 
C        ILEN   - max length available in ITRAN buffer, characters. 
C                ***NOTE*** THIS MUST CORRESPOND TO THE LENGTH
C                           OF IBUF2 IN MATCN, LESS 1 WORD. 
C        IFRECV - 1 if we expect response, 0 if none expected
C        IR     - which terminal character in IRSPN we find
C     MAXTRY - maximum number of times we will try to communicate
C     ITRY - count of attempts
      DIMENSION IREG(2)
C               - registers from REIO
C     NCTRAN - number of char to be transmitted
      DIMENSION NCHRC(8)
C               - number of characters received in responses
      DIMENSION IRSPN(4)
C               - terminal characters which generate a response
C        NRSPN  - number of responses possible
C
      INTEGER*2 WRDECH,MAXECH
      PARAMETER (WRDECH=40,MAXECH=WRDECH*2)
      INTEGER*2 IEBUF(WRDECH),IEBUF2(WRDECH)
C
      EQUIVALENCE (IREG(1),REG)
C
C   INITIALIZED VARIABLES
C
      DATA NCHRC/3,3,10,10,3,3,16,3/
      DATA IRSPN/2H$*,2H?/,2H>',002472B/
C                   Last word is <enq>:
      DATA ILEN/158/
      DATA NRSPN/8/
      DATA MAXTRY/2/
C
C
C     1. Set up the buffer to be sent to the MAT.
C     First initialize some things.
C
      IERR = 0
      ITRY = 0
      NRC = 0
      NCTRAN = NTR
C
C     1.1 Find the last character in the buffer to determine the
C     type of response.
C
      IF (ISCNC(ITRAN,1,NTR,72B).NE.0) THEN
        IR = 8
        IFRECV = 1
      ELSE
C                   A colon in the message means a response to the download 
        DO IR=1,NRSPN
          IF (JCHAR(ITRAN,NTR).EQ.JCHAR(IRSPN,IR)) THEN
            IFRECV = 1
            GOTO 200
          ENDIF
        ENDDO
        IFRECV = 0
      ENDIF
C                     Check each type of terminal character
C                     IR holds the index for the type of response
C
C
C     2. Write the buffer to the MAT, and read response if expected.
C     Set the time-out on the MAT depending on the response.
C
200   CONTINUE
      IF(IFRECV.NE.0.AND.LUMAT.NE.1) THEN
        CALL EXEC(3,2600B+LUMAT) !FLUSH ANY GARBAGE IN THE FIFO
      ENDIF
C     IF (KECHO) CALL REIO(2,LU,ITRAN,-(NCTRAN))
      IF (KECHO) THEN
         CALL ECHOE(ITRAN,IEBUF,NCTRAN,IECHO,MAXECH)
      ENDIF
C                   Write message on the screen if echo is on
      REG = REIO(2,2000B+LUMAT,ITRAN,-NCTRAN)
C                   Write the buffer to the MAT bus
      IF (IFRECV.EQ.0) THEN
        IAT = 0
        IF (KECHO) THEN
          CALL REIO(2,2000B+LU,IEBUF,-IECHO)
          CALL REIO(2,2000B+LU,006412B,1)   !CR-LF
        ENDIF
        RETURN    !  We're done now if there is to be no response.
      ENDIF
C
C     For actual communications, use 2000B in the read request.
C     For terminal tests, use 400B instead.
C       2000B = 0 0 0 0 1 0 0 0 0    followed by six bits of LU #
C               !       !   !   ! ASCII read
C               !       !   ! no echo
C               !       ! transmit special characters
C               ! buffered mode
C
      LUREQ = 0100B + LUMAT
      IF (LUMAT.EQ.1) LUREQ = 401B
      ILEN=NCHRC(IR)
      REG = REIO(1,LUREQ,IRECV,-ILEN)     !   Read from the MAT bus
      NRC = MIN0(ILEN,IREG(2))
C     WRITE(1,9001) NRC
C9001  FORMAT("NRC = ",I5)
C     IF (KECHO) CALL REIO(2,LU,IRECV,-NRC)
      IF (KECHO) THEN
         CALL ECHOE(IRECV,IEBUF2,NRC,IECHO2,MAXECH)
         CALL REIO(2,2000B+LU,IEBUF,-IECHO)
         CALL REIO(2,2000B+LU,IEBUF2,-IECHO2)
         CALL REIO(2,2000B+LU,006412B,1)   !CR-LF
      ENDIF
C                   If echo requested, write response on screen
      ITRY = ITRY + 1
C
C
C     8. Now check for errors.  If time-out or wrong number of characters,
C     try communications all over again.
C     If we got a 6B (ack) or 25B (nak) substitute readable ACK or NAK.
C
      IF (IAND(IREG,2B).NE.0) THEN          ! Timeout
        IF (ITRY.LT.MAXTRY) GOTO 200
        IERR = -4
      ELSE IF (NRC.NE.NCHRC(IR)) THEN    ! Wrong # of characters in response
        IF (ITRY.LT.MAXTRY) GOTO 200
        IERR = -5
      ELSE IF (JCHAR(IRECV,1).EQ.6B) THEN        ! ACK response
        IERR = +1
        NRC = ICHMV(IRECV,1,3HACK,1,3) - 1
      ELSE IF (JCHAR(IRECV,1).EQ.25B) THEN     ! NAK response
        IF (IR.EQ.5.AND.ITRY.LT.MAXTRY) GOTO 200
        IERR = +2
        NRC = ICHMV(IRECV,1,3HNAK,1,3) - 1
      ELSE
        IERR = 0
      ENDIF
      IAT = IERR
      RETURN
      END 
