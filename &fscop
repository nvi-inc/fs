FTN4,X
      PROGRAM FSCOP(3,99),FIELD SYSTEM DISK COPY C#870115:05:28#
C 
C     FSCOP is the Field System file copying program. 
C     It copies files from the floppy to hard disk and backs
C     up log files by copying from hard disk to floppy. 
C 
C  COMMON:
C 
      INCLUDE #FSCOM::FS
C 
C  INPUT: 
C 
C     RMPAR - (1) terminal LU 
C             (2) type of job, F or L 
C             (3) floppy LU 
C             (4) logs LU 
C             (5) procs LU
C     *NOTE* If the Field System is running, all of these 
C            parameters except 2 are defaulted in common. 
      DIMENSION IP(5) 
C 
C  LOCAL: 
C 
C     IPARM,PARM - parameter for GTPRM
C     IBUF - general buffer 
C     IBLEN - length of IBUF in words 
C     LNAMEF - name of file produced by FCPDL with directory of floppy
C     LNAMET - name of FMGR transfer file created by this program 
C     IDCB - DCB for files
C     LUUSR - terminal LU 
C     IFL - floppy disk LU
C     ILG - cartridge for logs
C     IPR - cartridge for procs 
C     LL - list of log files to be copies 
C     NLL - number of entries in LL,
C          if zero, indicates schedule/procs transfer 
C     MAXNLL - maximum entries in LL allowed
      DIMENSION IBUF(60),LL(10) 
      DIMENSION LNAMEF(3),IDCB(144) 
      DIMENSION LNAMET(3),IPARM(2)
      EQUIVALENCE (IPARM(1),PARM) 
C 
C  INITIALIZED: 
C 
      DATA IBLEN/60/
      DATA MAXNLL/10/ 
      DATA LNAMEF/2H#M,2HKI,2HII/ 
      DATA LNAMET/2HTM,2HKI,2HII/ 
C 
C  MODIFIED 850123 TO BE COMPATIBLE WITH SESSION ENVIRONMENT
C 
C     1. Get the input parameters set up.  If none are
C     specified, then get them from common. 
C 
      CALL RMPAR(IP)
      PARM = EXEC(14,1,IBUF,-IBLEN*2) 
      NCHAR = 0 
      IF (IPARM(1).EQ.0) NCHAR = IPARM(2) 
      LUUSR = IP(1) 
      IF (LUUSR.EQ.0) LUUSR = 1 
      LTYPE = IP(2) 
      IFL = IP(3) 
      ILG = IP(4) 
      IPR = IP(5) 
      NLL = 0 
      ICH = 1 
      DO 10 I=1,8 
        CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
D     WRITE(LUUSR,9921) ICH,NCHAR,IPARM 
D9921 FORMAT("ICH,NCHAR,IPARM="2I5,1X,2A2)
10      CONTINUE
90    IF (ICHAR(PARM,1).EQ.54B) GOTO 100
      IF (NLL+1.GT.MAXNLL) GOTO 100 
      NLL = NLL+1 
      LL(NLL) = IPARM 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      GOTO 90 
C 
100   IF (IPGST(6HBOSS  ).EQ.-1) GOTO 110 
D     WRITE(LUUSR,9922) (LL(I),I=1,NLL) 
D9922 FORMAT("LOGS:"10A2) 
C 
C     1.1 Set defaults from Field System common since BOSS is running.
C 
      IF (IFL.EQ.0) IFL = LUFLOP
      IF (IDTYP(IFL).EQ.33B) GOTO 101 
      WRITE(LUUSR,9100) IFL 
9100  FORMAT(I6" IS NOT A FLOPPY LOGICAL UNIT.")
      GOTO 900
101   IF (ILG.EQ.0) ILG = ICRPRC
      IF (IPR.EQ.0) IPR = ICRPRC
C 
C     1.2 Now prompt for the missing information. 
C 
110   IF (LTYPE.NE.0) GOTO 120  
111   WRITE(LUUSR,9111) 
9111  FORMAT("Copy floppy to hard disk (F) or back up logs to floppy (L)
     . ? _")
      CALL GTRSP(IBUF,IBLEN,LUUSR,NCH)
      IF (IBUF.EQ.2H::) GOTO 900
      IF (IBUF.NE.2HL .AND.IBUF.NE.2HF ) GOTO 110 
      LTYPE = IBUF  
C 
120   IF (NLL.NE.0.OR.LTYPE.EQ.2HF ) GOTO 130 
      WRITE(LUUSR,9121) 
9121  FORMAT("List of log files (separate by commas): _") 
      CALL GTRSP(IBUF,IBLEN,LUUSR,NCH)
      IF (IBUF.EQ.2H::) GOTO 900
      ICH = 1 
122   CALL GTPRM(IBUF,ICH,NCH,0,PARM) 
      IF (ICHAR(PARM,1).NE.54B) GOTO 123
      IF (NLL.EQ.0) GOTO 120
C                     Re-prompt until we've got something 
      GOTO 130
123   IF (NLL+1.GT.MAXNLL) GOTO 130 
      NLL = NLL+1 
      LL(NLL) = IPARM 
      GOTO 122
C 
130   IF (IFL.NE.0) GOTO 135
131   WRITE(LUUSR,9131) 
9131  FORMAT("Enter floppy LU (must be >0): _") 
      CALL GTRSP(IBUF,IBLEN,LUUSR,NCH)
      IF (IBUF.EQ.2H::) GOTO 900
      IFL = IAS2B(IBUF,1,NCH) 
135   IF (IFL.LT.0.OR.IDTYP(IFL).NE.33B) GOTO 131 
C 
140   IF (ILG.NE.0.OR.LTYPE.EQ.2HF ) GOTO 150 
141   WRITE(LUUSR,9141) 
9141  FORMAT("Cartridge (or negative LU) with log files? _")  
      CALL GTRSP(IBUF,IBLEN,LUUSR,NCH)
      IF (IBUF.EQ.2H::) GOTO 900
      ILG = IAS2B(IBUF,1,NCH) 
      IF (ILG.EQ.-32768) GOTO 141 
C 
150   IF (IPR.NE.0.OR.LTYPE.EQ.2HL ) GOTO 200 
151   WRITE(LUUSR,9151) 
9151  FORMAT("Restore files to which cartridge (or negative LU) ? _")     
      CALL GTRSP(IBUF,IBLEN,LUUSR,NCH)
      IF (IBUF.EQ.2H::) GOTO 900
      IPR = IAS2B(IBUF,1,NCH) 
      IF (IPR.EQ.-32768) GOTO 151 
C 
C 
C     2. Create the transfer file.  Purge any old version.
C     Fill it with the initial DC and MC commands.
C 
200   CONTINUE
D     WRITE(LUUSR,9802) NLL,(LL(I),I=1,NLL) 
D9802 FORMAT("#,LOGS="I5,1X,10A2) 
D     WRITE(LUUSR,9803) LNAMET,LNAMEF,IFL,IPR,ILG 
D9803 FORMAT("LNAMET,F,IFL,IPR,ILG="3A2,1X,3A2,1X,3I5)
      CALL CREAT(IDCB,IERR,LNAMET,3,3,0,IPR)
      IF (IERR.GE.0) GOTO 210 
      IF (IERR.NE.-2) GOTO 205
      CALL PURGE(IDCB,IERR,LNAMET,0,IPR)
      IF (IERR.GE.0) GOTO 200 
205   WRITE(LUUSR,9120) IERR
9120  FORMAT("ERROR "I5" FROM CREATE.  QUITTING.")
      GOTO 900
210   CALL IFILL(IBUF,1,40,40B) 
C     :DC,ifl (Dismount the floppy for safety.) 
      NCH = ICHMV(IBUF,1,4H:DC,,1,4)
      NCH = NCH + IB2AS(-IFL,IBUF,NCH,100000B+6)  
      NCH = ICHMV(IBUF,NCH,3H,RR,1,3) 
      CALL IFILL(IBUF,NCH,1,40B)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
C     :MC,ifl (Mount the floppy now.) 
      NCH = ICHMV(IBUF,1,4H:MC,,1,4)
      NCH = NCH + IB2AS(-IFL,IBUF,NCH,100000B+6)  
      CALL IFILL(IBUF,NCH,1,40B)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
C     :EX (exit)
      NCH = ICHMV(IBUF,1,4H:EX ,1,4)
      CALL WRITF(IDCB,IERR,IBUF,2)
      CALL CLOSE(IDCB)
C 
C 
C     2. If this is a schedule/procs transfer, get the directory of 
C     the floppy made.
C     First, mount the floppy using the transfer file already made. 
C 
      IF (NLL.NE.0) GOTO 300  
      CALL RUFMG(LNAMET,IPR,LUUSR,IBUF) 
      NLFL = IB2AS(IPR,IBUF,1,100000B+5)
C                     Convert proc LU to a string 
      CALL FCPDL(-IFL,IBUF,NLFL,LNAMEF,IPR,IERR)  
C                     Get the directory file made 
      IF (IERR.GE.0) GOTO 400 
      WRITE(LUUSR,9301) IERR
9301  FORMAT("ERROR "I5" FROM FCPDL.  QUITTING.") 
      GOTO 900
C 
C 
C     3. Create the file having the log copy commands for FCOPY.
C 
300   CALL CREAT(IDCB,IERR,LNAMEF,3,3,0,IPR)
      IF (IERR.GE.0) GOTO 310 
      IF (IERR.NE.-2) GOTO 305
      CALL PURGE(IDCB,IERR,LNAMEF,0,IPR)
      IF (IERR.GE.0) GOTO 300 
305   WRITE(LUUSR,9120) IERR
      GOTO 900
310   DO 320 I=1,NLL
        CALL IFILL(IBUF,1,40,40B) 
        NCH = ICHMV(IBUF,1,4H[LOG,1,4)
        NCH = ICHMV(IBUF,NCH,LL(I),1,2) 
        NCH = ICHMV(IBUF,NCH,2H::,1,2)
        NCH = NCH + IB2AS(ILG,IBUF,NCH,100000B+4) 
        NCH = ICHMV(IBUF,NCH,3H,::,1,3) 
        NCH = NCH + IB2AS(-IFL,IBUF,NCH,100000B+6)  
        CALL IFILL(IBUF,NCH,1,40B)
        CALL WRITF(IDCB,IERR,IBUF,NCH/2)
320     CONTINUE
      CALL CLOSE(IDCB)
C 
C 
C     5. Fill up the file with FMGR commands. 
C     The first two are already there.
C 
400   CALL OPEN(IDCB,IERR,LNAMET,0,0,IPR) 
      IF (NLL.NE.0) CALL POSNT(IDCB,IERR,2) 
C                   Position past the DC,MC,EX commands 
C     :RU,FCOPY,,CU,#MKIII::ipr (schedule FCOPY using the directory file) 
      NCH = ICHMV(IBUF,1,22H:RU,FCOPY,,CU,#MKIII::,1,22)
      NCH = NCH + IB2AS(IPR,IBUF,NCH,100000B+4) 
      CALL IFILL(IBUF,NCH,1,40B)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
C     :DC,ifl (Dismount the floppy) 
      NCH = ICHMV(IBUF,1,4H:DC,,1,4)
      NCH = NCH + IB2AS(-IFL,IBUF,NCH,100000B+6)  
      NCH = ICHMV(IBUF,NCH,3H,RR,1,3) 
      CALL IFILL(IBUF,NCH,1,40B)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
C     Send a message indicating end of job
      NCH = ICHMV(IBUF,1,38H:AN,END OF FIELD SYSTEM FILE TRANSFER ,1,38)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
C     :EX (exit from FMGR)
      NCH = ICHMV(IBUF,1,4H:EX ,1,4)
      CALL WRITF(IDCB,IERR,IBUF,NCH/2)
      CALL CLOSE(IDCB)
C 
C 
C     6. Schedule FMGR to execute the commands. 
C 
      CALL RUFMG(LNAMET,IPR,LUUSR,IBUF) 
C 
C 
900   CONTINUE
      END 
