FTN4,X
  
C@LXSUM 
C 
      PROGRAM LXSUM(5),SUMMARY COMMAND C#870115:05:32#
C 
C 
C LXSUM - The SUMMARY command produces a one line listing for each
C         observation consisting of the start time & footage count, 
C         the tape number, stop time & footage count, ONSOURCE status,
C         & whether any serious CHEKR errors were encountered.
C 
C MODIFICATIONS:
C 
C    DATE     WHO  DESCRIPTION
C    820326   KNM  SUBROUTINE CREATED 
C 
C    820416   KNM  THE SUMMARY COMMAND HAS THE CAPABILITY TO BE WRITTEN 
C                  INTO AN OUTPUT FILE IF A FILE NAME WAS SPECIFIED IN
C                  THE OUTPUT COMMAND.
C 
C    820513   KNM  A NEW SUMMARY COMMAND WAS IMPLEMENTED.  THIS COMMAND 
C                  READS THE $SKED SECTION OF A SCHEDULE FILE & MAKES 
C                  SURE THAT EVERY OBSERVATION APPEARS IN THE LOG.  IF
C                  AN OBSERVATION IS MISSING FROM THE LOG, THEN LOGEX 
C                  OUTPUTS A SUMMARY LINE THAT INDICATES THAT ALL THE 
C                  INFORMATION IS MISSING.
C 
C    820607   CAK  LXSUM HAS BEEN CHANGED FROM A SUBROUTINE TO A
C                  SEGMENT PROGRAM OF LOGEX. ALL CALLING ARGUMENTS
C                  HAVE BEEN PLACED INTO COMMON.
C 
C    820818   KNM  ALL SUMMARY OUTPUT IS WRITTEN OUT BY CALLING LXWRT.
C 
C INPUT VARIABLES:
C 
C OUTPUT VARIABLES: 
C 
      DIMENSION LNEWSO(4) 
C       - Contains the new source name. 
C 
C 
C COMMON BLOCKS USED: 
C 
      INCLUDE #FSCOM::M3
C 
      INCLUDE #LXCOM::M3
C 
C DATA BASE ACCESSES: 
C 
C EXTERNAL INPUT/OUTPUT:
C 
C SUBROUTINE INTERFACES:
C 
C    CALLING SUBROUTINES: 
C 
C      LOGEX - Main program.
C 
C    CALLED SUBROUTINES:
C 
C      File manager package routines. 
C      LNFCH utilities. 
C      LXOPN - Open file. 
C      REDSK - Read the schedule file until the $SKED section is
C              reached. 
C      READT - Get next observation from $SKED section. 
C      READL - Get SUMMARY data from next observation from log file.
C      LXSCM - Compare schedule & log file sources & start times. 
C      LXWRT - Writes out LOGEX data. 
C 
C LOCAL VARIABLES:
C 
      LOGICAL KMATCH
C        - A flag that indicates whether we have a matching schedule &
C          log observation. 
C 
      LOGICAL KHUH
C      - true if the log run-id is screwy 
C 
      DIMENSION IBUFSK(80)
C        - Buffer for schedule file.
C 
      DIMENSION IREG(2),IPARM(2),IVAL(2)
C        - Registers for reading; parameters from GTPRM 
C        - REG, PARM - two word variables equiv 
C 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)),(VALUE,IVAL(1)) 
C 
      DIMENSION LSN(4)
C        - Contains the schedule source name. 
C 
      QDATA LSUM"*SUMMARY OF        FOR                "
      QDATA LRUN"*RUN-ID    SOURCE    TAPE #  FEET     START       STOP 
     .  FEET  STATUS  " 
      QDATA STAR"*" 
C 
C INITIALIZED VARIABLES:
C 
      DATA ISKBW/80/
      DATA LNEWSN/2H$$/ 
      DATA NSUM/78/ 
C 
C 
C  ************************************************************** 
C 
C  1. Initialize SUMMARY variables. 
C 
C  ************************************************************** 
C 
C 
      CALL IFILL(LSOURN,1,8,2H  ) 
      CALL IFILL(LNEWSO,1,8,2H  ) 
      CALL IFILL(LSFT,1,4,2H  ) 
      CALL IFILL(LEFT,1,4,2H  ) 
      CALL IFILL(LSOUON,1,8,2H  ) 
      CALL IFILL(LTAPEN,1,8,2H  ) 
      CALL IFILL(LTAPEN,3,1,55B)
      CALL IFILL(LSN,1,8,2H  )
      CALL IFILL(IBUFSK,1,160,40B)
      CALL IFILL(JBUF,1,100,40B)
      IF(IKEY.EQ.12) CALL RWNDF(IDCBSK,IERR)
      KMATCH=.TRUE. 
      KHUH=.FALSE.
      LNEWSN=2H$$ 
      IOUT=0
      ILEN=0
C 
C 
C *********************************************************** 
C 
C 2. Check to see if the SKED SUMMARY has been specified. 
C    If so, read down to $SKED section. 
C 
C *********************************************************** 
C 
C 
      LCH=ICHAR(LOGNA,5)
      LSTID=LCH*400B+40B
      IF(IKEY.EQ.9) GOTO 200
      CALL REDSK(IBUFSK,ISKBW)
      IF(ICODE.EQ.-1) GOTO 600
C 
C 
C ********************************************************************* 
C 
C 3. Write out the SUMMARY headers. Obtain the source, run id, start
C    time, station id, etc. that the station participates in by 
C    reading the schedule file. 
C 
C ********************************************************************* 
C 
C 
200   CALL ICHMV(LSUM(2),13,LOGNA,1,6)
      CALL ICHMV(LSUM(2),24,LSTATN,1,8) 
      CALL LXWRT(LSUM(2),LSUM(1)) 
      CALL LXWRT(STAR(2),STAR(1)) 
      CALL LXWRT(LRUN(2),LRUN(1)) 
      CALL LXWRT(STAR(2),STAR(1)) 
      L6=1H 
300   IF(IKEY.EQ.9) GOTO 400
C 
C     Get next schedule entry 
C 
      CALL READT(IBUFSK,ISKBW,LSTID,LSN,IYR,IDAYR,IHR,MIN,ISC,IDUR,NSTN)
      IF(ICODE.EQ.-1) GOTO 600
C 
D     WRITE(LUUSR,21) IYR,IDAYR,IHR,MIN,ISC 
D21   FORMAT("FROM READT: IYR="I6,1X,"IDAYR="I6,1X,"IHR="I6,1X, 
D    ."MIN="I6,1X,"ISC="I6) 
C 
C ****************************************************************
C 
C 4. Get the SUMMARY data for the next observation from the log.
C 
C ****************************************************************
C 
C 
      IF(ILEN.EQ.-1) GOTO 420 
400   IF(KMATCH) 410,420
410   CALL READL(LNEWSO,LNEWSN,LSTID) 
      IF(ICODE.EQ.-1.OR.LSTEND.EQ.-1) GOTO 600
D     WRITE(LUUSR,9902) LSOURN,ISLHR,ISLMIN,ISLSEC,IELHR,IELMIN,IELSEC
D9902 FORMAT("READL: SOUR,START,STOP"/
D    .       "      "4A2,1X,3I2,1X,3I2) 
      IF(IKEY.EQ.9) GOTO 430
420   CALL LXSCM(LSN,IDAYR,IHR,MIN,ISC,IDUR,KMATCH,KHUH)
      IF (KHUH.AND.ILEN.NE.-1) GOTO 410 
D     WRITE(LUUSR,9903) KMATCH  ,KHUH 
D9903 FORMAT("FROM LXSCM: MATCH,HUH="2L1) 
C 
C 
C *************************************************************** 
C 
C 5. Here the SUMMARY output is written. Check to see if the
C    observation was missing.  If it was missing fill in
C    the variables to indicate a missing schedule observation 
C    from the log.
C 
C *************************************************************** 
C 
C 
430   CALL IFILL(JBUF,1,100,40B)
      IF(IKEY.NE.12) GOTO 500 
      CALL IB2AS(IDAYR,JBUF,1,40000B+400B*2+3)
      CALL IFILL(JBUF,4,1,55B)
      CALL IB2AS(IHR,JBUF,5,40000B+400B+2)
      CALL IB2AS(MIN,JBUF,7,40000B+400B+2)
      GOTO 510
500   IF(ITCNTL.EQ.-1) GOTO 505 
      CALL IB2AS(ILRDAY,JBUF,1,40000B+400B*2+3) 
      CALL IFILL(JBUF,4,1,55B)
      CALL IB2AS(ILRHRS,JBUF,5,40000B+400B+2) 
      CALL IB2AS(ILRMIN,JBUF,7,40000B+400B+2) 
      GOTO 510
505   CALL IFILL(JBUF,4,1,55B)
510   IF(KMATCH) 520,530
520   CALL ICHMV(JBUF,11,LSOURN,1,8)
      CALL ICHMV(JBUF,21,LTAPEN,1,8)
      CALL ICHMV(JBUF,30,LSFT,1,4)
      IF(ISLD.NE.0) GOTO 521
      CALL IFILL(JBUF,41,1,55B) 
      GOTO 522
521   CALL IB2AS(ISLD,JBUF,35,40000B+400B+3)
      CALL IFILL(JBUF,38,1,55B) 
      CALL IB2AS(ISLHR,JBUF,39,40000B+400B+2) 
      CALL IFILL(JBUF,41,1,72B) 
      CALL IB2AS(ISLMIN,JBUF,42,40000B+400B+2)
      CALL IFILL(JBUF,44,1,72B) 
      CALL IB2AS(ISLSEC,JBUF,45,40000B+400B+2)
522   IF(IELD.NE.0) GOTO 523
      CALL IFILL(JBUF,52,1,55B) 
      GOTO 524
523   CALL IB2AS(IELHR,JBUF,49,40000B+400B+2) 
      CALL IFILL(JBUF,51,1,72B) 
      CALL IB2AS(IELMIN,JBUF,52,40000B+400B+2)
      CALL IFILL(JBUF,54,1,72B) 
      CALL IB2AS(IELSEC,JBUF,55,40000B+400B+2)
524   CALL ICHMV(JBUF,58,LEFT,1,4)
      CALL ICHMV(JBUF,64,LSTAT,1,6) 
      GOTO 540
530   CALL IFILL(JBUF,23,1,55B) 
      CALL ICHMV(JBUF,11,LSN,1,8) 
      CALL IFILL(JBUF,31,1,55B) 
      CALL IFILL(JBUF,41,1,55B) 
      CALL IFILL(JBUF,52,1,55B) 
      CALL IFILL(JBUF,59,1,55B) 
      CALL IFILL(JBUF,66,1,55B) 
540   CALL LXWRT(JBUF,NSUM) 
      NLOUT=NLOUT+1 
      IF(IKEY.EQ.9.AND.ILEN.EQ.-1) GOTO 600 
      IF(IKEY.NE.12) GOTO 300 
      IF(ILEN.GE.0) GOTO 300
      ILRDAY=999
      ILRHRS=99 
      ILRMIN=99 
      GOTO 300
C 
C 
C ***************************************************************** 
C 
C 6. Return to LOGEX. 
C 
C ***************************************************************** 
C 
C 
600   ILXGET=0
      GO TO IRTN5 
      END 
