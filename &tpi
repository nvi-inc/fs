FTN4,X
C@TPI 
C 
      SUBROUTINE TPI(IP,ISUB),SAMPLE TPIS C#870115:04:44# 
C 
C   TPI gets the total power integrator readings and stores 
C     them in common. 
C 
C     DATE   WHO CHANGES
C     810909 NRV Added VC zero capability 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C               - parameters from SLOWP 
C        IP(1)  - class number of input parameter buffer
C        IP(2-5)- not used
C        ISUB   - which sub-function, 3=TPI, 4=TPICAL, 7=TPZERO 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # RECS 
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C     CALLED SUBROUTINES: GTPRM,ICHAR 
C 
C 3.  LOCAL VARIABLES 
C 
      DIMENSION ITPIS(16) 
C      - which TPIs to read back
      DIMENSION ICHOLD(18)
C      - hold old values of ICHECK
C     ICHIFD - 1=IFD has been unchecked by TPI command
C        ICH    - character counter 
C     NCHAR  - character count
      DIMENSION IBUF(60)
C               - class buffer, holding command 
C        ILEN   - length of IBUF, chars 
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      DIMENSION LVCN(15)
C               - VC names
C 
      EQUIVALENCE (REG,IREG(1)) 
C 
C 4.  CONSTANTS USED
C 
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/120/
      DATA LVCN   /2HV1,2HV2,2HV3,2HV4,2HV5,2HV6,2HV7,2HV8,2HV9,2HVA, 
     /             2HVB,2HVC,2HVD,2HVE,2HVF/
C 
C 
C     PROGRAM STRUCTURE 
C 
C     1. Call TPLIS to parse the command for us.  Check for errors. 
C     If none, we have the requested TPI readings in ITPIS. 
C 
D     WRITE(LU,9901) IP,ISUB
D9901 FORMAT("CALLING TPLIS:"6I8) 
      ICLCM = IP(1) 
C                     Retain class for later response 
      CALL TPLIS(IP,ITPIS)
      IERR = IP(3)
      ICLASS = 0
      NREC = 0
      IF (IERR.NE.0) GOTO 990 
C 
D     WRITE(LU,9911) ITPIS
D9911 FORMAT("ITPIS FROM TPLIS="16I5) 
C 
C     2. Now we are ready to send the big message to MATCN. 
C     For each TPI requested, send the appropriate strobe.
C     After all have been strobed, sample all users with ^. 
C     If this is a ZERO command, set IFD to max first, unset at end.
C 
300   ICLASS = 0
      NREC = 0
      ICHIFD = 0
      IF (ISUB.NE.7) GOTO 310 
      IBUF(1) = 0 
      IBUF(2) = 2HIF
      CALL IF2MA(IBUF(3),63,63,INP1IF,INP2IF) 
C                   Request maximum settings, same inputs 
      ICHOLD(16) = ICHECK(16) 
C                   Save old value of CHEKR's info
      ICHECK(16) = 0
C                   Un-check the IFD for now
      CALL EXEC(20,0,IBUF,-12,2HFS,0,ICLASS)
      CALL EXEC(23,6HMATCN ,ICLASS,1) 
      CALL RMPAR(IP)
C                   Set up the IF distributor with max atten. 
      IF (IP(3).LT.0) GOTO 999
      IF (IP(1).EQ.0) GOTO 305
      CALL EXEC(21,IP(1),IBUF,1)
305   CALL SUSP(2,3)
C                   Let the TPIs settle down for 3 seconds
C 
310   IBUF(1) = 8 
      NREC = 0
      ICLASS = 0
      DO 311 I=1,16 
        IF (ITPIS(I).EQ.0) GOTO 311 
        IF (I.GT.14) GOTO 306 
        IBUF(2) = LVCN(I) 
        IBUF(3) = 2H% 
        ICHOLD(I) = ICHECK(I) 
        ICHECK(I) = 0 
        GOTO 309
306     IF (IBUF(2).EQ.2HIF) GOTO 311 
        IBUF(2) = 2HIF
        IBUF(3) = 2H! 
        IF (ISUB.EQ.7) GOTO 309 
C                     If ZERO already unchecked the IFD, don't do it again
        ICHOLD(16) = ICHECK(16) 
        ICHECK(16) = 0
        ICHIFD = 1
C                     Indicate TPI has unchecked IFD
309     CALL EXEC(20,0,IBUF,-5,2HFS,0,ICLASS) 
        NREC = NREC + 1 
311     CONTINUE
C 
      IBUF(1) = 5 
      IBUF(2) = 2H^ 
      CALL EXEC(20,0,IBUF,-3,2HFS,0,ICLASS) 
      NREC = NREC + 1 
C 
D     WRITE(LU,9902) NREC 
D9902 FORMAT("SENDING MATCN "I3" MESSAGES") 
      CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
C                   Schedule MATCN now.  There is no response from these
C                   messages, except for the possible IFD message 
      IF (IP(3).NE.0) GOTO 999
C                   If an error occurred, stop now
      CALL SUSP(1,100)
C                   Suspend ourselves for 1 second to allow 
C                   the TPIs to sample themselves.
C 
C     4. Now format and send the messages requesting read-back
C     of the values just sampled. 
C 
      NREC = 0
      ICLASS = 0
      IBUF(3) = 2H/ 
      IBUF(1) = 8 
      DO 320 I=1,16 
        IF (ITPIS(I).EQ.0) GOTO 320 
        IF (I.GT.14) GOTO 325 
        IBUF(2) = LVCN(I) 
        GOTO 319
325     IF (IBUF(2).EQ.2HIF) GOTO 320 
        IBUF(2) = 2HIF
319     CALL EXEC(20,0,IBUF,-5,2HFS,0,ICLASS) 
        NREC = NREC + 1 
320     CONTINUE
C 
      CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
      IF (IP(3).LT.0) GOTO 999
C 
C 
C     5. Send the results to TPPUT for putting into COMMON. 
C     Send back the response. 
C     If this was a ZERO command, re-set the IFD. 
C 
      REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
      IF (IEQ.EQ.0) IEQ=NCHAR+1 
      NCH = ICHMV(IBUF,IEQ,2H/ ,1,1)
C                     Get the command part of the response set up 
      CALL TPPUT(IP,ITPIS,ISUB,IBUF,NCH,ILEN) 
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
      NREC = 1
C     Re-check the VCs
      DO 510 I=1,14 
        IF (ITPIS(I).EQ.0) GOTO 510 
        ICHECK(I) = ICHOLD(I) 
510     CONTINUE
      IF (ICHIFD.EQ.1) ICHECK(16) = ICHOLD(16)
C 
      IF (ISUB.NE.7) GOTO 990 
      IBUF(1) = 0 
      IBUF(2) = 2HIF
      ICL = 0 
      CALL IF2MA(IBUF(3),IAT1IF,IAT2IF,INP1IF,INP2IF) 
C                     Reset the IFD to its original values
      CALL EXEC(20,0,IBUF,-12,2HFS,0,ICL) 
      CALL EXEC(23,6HMATCN ,ICL,1)
      CALL RMPAR(IP)
      ICHECK(16) = ICHOLD(16) 
C                     Re-set CHEKR
      IF (IP(3).LT.0) GOTO 999
      IF (IP(1).NE.0) CALL EXEC(21,IP(1),IBUF,1)
C 
990   IP(1) = ICLASS
      IP(2) = NREC
      IP(3) = IERR
      IP(4) = 2HQK
999   RETURN
      END 
