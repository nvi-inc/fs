FTN4,X
C@CHECK 
C 
      SUBROUTINE CHK(IP),CHECK COMMAND C#870115:04:37#
C 
C   CHK parses the list of module mnemonics to be checked.
C************************* NOTE **************************
C The check/nocheck command has been changed. 
C Modules are automatically checked UNLESS then are specifically
C requested in the NOCHECK command to be ignored. 
C This routine interprets the same mnemonics as before. 
C 
C  COMMON:
C 
      INCLUDE #FSCOM::FS
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C               - parameters from SLOWP 
C        IP(1)  - class number of input parameter buffer
C        IP(2-5)- not used
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - class response 
C        IP(2) - number of records
C        IP(3) - ERROR RETURN 
C        IP(4) - who we are 
C 
C     CALLED SUBROUTINES: GTPRM,ICHAR 
C 
C   LOCAL VARIABLES 
C 
      LOGICAL KMINUS
C               - true if parameter is preceded by a minus sign 
      DIMENSION ICK(20) 
C      - parameters to this command 
C        ICH    - character counter 
C     ILIST - counter through parameter list
C     NCHAR  - character count
      DIMENSION IBUF(50)
C               - class buffer, holding command 
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C   INITIALIZED VARIABLES 
C 
      DATA ILEN/100/
C 
C  PROGRAMMER: NRV
C     LAST MODIFIED:  840308 by MWH  - changed from NOCHECK to CHECK, added * option
C                     840703 MWH - added RX to list of checkable modules
C 
C 
C     1. If class buffer contains command name with "=" then we have
C     parameters to get the modules.  If only the command name is present,
C     then list the modules being checked.
C 
      IERR = 0
      ICLASS = 0
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
      IERR = -1 
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
C                   Scan for "="
      IF (IEQ.EQ.0) GOTO 500
C                   If no parameters, go report current list
C 
C 
C     2. Step through buffer getting each parameter and decoding it.
C     Command from user looks like: 
C                   CHECK=<list>
C     where the parameters may be:
C                   ALL - all modules 
C                   V1 to V15 - video converters
C                   IF - IF distributor 
C                   FM - formatter
C                   TP - tape 
C                   VC - all video converters (1 to 15) 
C                   EVEN - video converters 2,4,6,8,10,12,14
C                   ODD - video converters 1,3,5,7,9,11,13
C 
C 
      DO 200 I=1,20 
        ICK(I) = 0
200     CONTINUE
C                   Turn off all of the parameters to start 
      ICH = 1+IEQ 
      ILIST = 0 
C  Handle * if present
      IF(ICHAR(IBUF,ICH).NE.52B)GOTO 201
        DO 202 I=1,18 
          IF(ICHECK(I).GT.0)ICK(I)=1
202     CONTINUE
        IF(ICHK19.GT.0) ICK(19) = 1 
        IF(ICHK20.GT.0) ICK(20) = 1 
        ICH=ICH+2 
C  Handle minus sign if present 
201   KMINUS=.FALSE.
      IF(ICHAR(IBUF,ICH).NE.55B)GOTO 203
        ICH=ICH+1 
        KMINUS=.TRUE. 
203   CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      ILIST = ILIST + 1 
C                   Pick up each parameter as characters
      IF (ICHAR(PARM,1).EQ.54B) GOTO 300
C                           , 
C                   we must be finished.
C  Get 2-character mnemonic 
C    First check for RX (MDNAM doesn't recognize RX)
      IF(IPARM.NE.2HRX) GOTO 205  
        ICK(19) = 1 
        IF(KMINUS) ICK(19) = 0
        GOTO 201
C     Now check for HD
205   IF(IPARM.NE.2HHD) GOTO 207
        ICK(20) = 1 
        IF(KMINUS) ICK(20) = 0
        GOTO 201
207   LPRM=MDNAM(IPARM) 
      IF(LPRM.EQ.0)GOTO 299 
C 
C     2.1 First check for ALL.
C 
210   IF (LPRM.NE.2HAL) GOTO 240  
      DO 211 I=1,18 
        ICK(I) = 1
        IF(KMINUS) ICK(I) = 0 
211     CONTINUE
        ICK(19) = 1 
        IF(KMINUS) ICK(19) = 0
        ICK(20) = 1 
        IF(KMINUS) ICK(20) = 0
      GOTO 201
C 
C 
C     2.4 Try for EVEN. 
C 
240   IF (LPRM.NE.2HEV) GOTO 250  
      DO 241 I=2,14,2 
        ICK(I) = 1
        IF(KMINUS)ICK(I) = 0
241     CONTINUE
      GOTO 201
C 
C 
C     2.5 Might be ODD. 
C 
250   IF (LPRM.NE.2HOD) GOTO 260  
      DO 251 I=1,13,2 
        ICK(I) = 1
        IF(KMINUS) ICK(I) = 0 
251     CONTINUE
      GOTO 201
C 
C 
C     2.6 One of the video converters.
C 
260   IF (ICHAR(LPRM,1).NE.126B) GOTO 270 
C                            V
      II=ICHAR(LPRM,2)-60B
      IF(II.GT.9)II=II-7
      IF (II.GT.0.AND.II.LE.15) GOTO 261
      IERR = -201 
      GOTO 990
261   ICK(II) = 1 
      IF(KMINUS) ICK(II) = 0
      GOTO 201
C 
C 
C     2.7 IF distributor
C 
270   IF (LPRM.NE.2HIF) GOTO 280  
      ICK(16) = 1 
      IF(KMINUS) ICK(16) = 0
      GOTO 201
C 
C 
C     2.8 Formatter 
C 
280   IF (LPRM.NE.2HFM) GOTO 290  
      ICK(17) = 1 
      IF(KMINUS) ICK(17) = 0
      GOTO 201
C 
C 
C     2.90 Tape 
C 
290   IF (LPRM.NE.2HTP) GOTO 299  
      ICK(18) = 1 
      IF(KMINUS) ICK(18) = 0
      GOTO 201
C 
C 
C     2.99 None of the above
C 
299   IERR = -201 
      GOTO 990
C 
C 
C     3. We are finished with the parsing.
C     Stash the check array into COMMON.
C 
300   DO 301 I=1,18 
        IF (ICK(I).EQ.0.AND.ICHECK(I).GT.0) ICHECK(I) = -1
C                   If the module was set up, don't check it now
        IF (ICK(I).EQ.1.AND.ICHECK(I).LT.0) ICHECK(I) = +1
C                   If the module was previously ignored, check it now
301     CONTINUE
        IF(ICK(19).EQ.0.AND.ICHK19.GT.0) ICHK19 = -1
        IF(ICK(19).EQ.1.AND.ICHK19.LT.0) ICHK19 = +1
        IF(ICK(20).EQ.0.AND.ICHK20.GT.0) ICHK20 = -1
        IF(ICK(20).EQ.1.AND.ICHK20.LT.0) ICHK20 = +1
C 
      GOTO 990
C 
C 
C     5. Report the modules currently being checked.
C 
500   CONTINUE
      NCH = ICHMV(IBUF,NCHAR+1,2H/ ,1,1)
      DO 590 I=1,18 
        IF (ICHECK(I).NE.1) GOTO 590  
        IF (I.GT.15) GOTO 510 
        NCH = ICHMV(IBUF,NCH,2HV ,1,1)
        NCH = NCH + IB2AS(I,IBUF,NCH,100000B+2) 
        GOTO 580
510     IF (I.EQ.16) NCH = ICHMV(IBUF,NCH,2HIF,1,2) 
        IF (I.EQ.17) NCH = ICHMV(IBUF,NCH,2HFM,1,2) 
        IF (I.EQ.18) NCH = ICHMV(IBUF,NCH,2HTP,1,2) 
580     NCH = MCOMA(IBUF,NCH) 
590     CONTINUE
C 
      IF(ICHK19.NE.1) GOTO 595
        NCH = ICHMV(IBUF,NCH,4HRX, ,1,3)
C 
595   CONTINUE
      IF(ICHK20.NE.1) GOTO 599
        NCH = ICHMV(IBUF,NCH+2,2HHD,1,2)
C 
599   CONTINUE
      NCH=NCH-1 
      IF(ICHCM(IBUF,NCH,2H, ,1,1).EQ.0) NCH=NCH-1 
      IF(ICHCM(IBUF,NCH,2H/ ,1,1).EQ.0) 
     +  NCH=ICHMV(IBUF,NCH+1,8HDISABLED,1,8)-1
C 
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
      NREC = 1
      GOTO 990
C 
C 
990   IP(1) = ICLASS
      IP(2) = NREC
      IP(3) = IERR
      IP(4) = 2HQN
      RETURN
      END 
