FTN4,X
C@WVPNT 
      SUBROUTINE WVPNT(IP),WVR POINTING CONTROL C#870115:04:46# 
C 
C   WVPNT sets the azimuth and elevation for WVR pointing 
C 
C   INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C             -Parameters from QUIKR
C      IP(1)  -Class number of input buffer 
C      IP(2-5)-Not used 
C 
C   OUTPUT VARIABLES: 
C 
C      IP(1) - Class number 
C      IP(2) - Number of records
C      IP(3) - Error number 
C      IP(4) - Who we are 
C 
C  COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C   SUBROUTINE INTERFACE
C 
C   CALLING SUBROUTINE: QUIKR 
C   CALLED SUBROUTINES: CHARACTER STRING UTILITIES
C                       PT2WV - format pointing command 
C                       WVHOR - adjust az,el for horizon mask 
C                       WVGPT - get pointing data from WVR
C 
C   LOCAL VARIABLES 
C 
      DIMENSION IBUF(20)
C               - INPUT Class buffer
C     ILEN - length of IBUF, in chars 
      DIMENSION IREG(2) 
C               - Registers from EXEX calls 
      EQUIVALENCE (REG,IREG(1)) 
C 
C   INITIALIZED VARIABLES 
C 
      DATA ILEN/40/ 
C 
C   PROGRAMMER (ARIES)RBM 
C   LAST MODIFIED 810403 BY NRV 
C                 830908 BY NRV - changed limits check for elev.
C 
C 
C     1. If class buffer contains command with "=", then process
C     the commanded azimuth and elevation. If only command name 
C     is present, then read the current WVR az and el from common.
C 
      ICLCM=IP(1) 
      IF(ICLCM.NE.0)GO TO 110 
      IERR=-1 
      GO TO 990 
  110 REG=EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR=MIN0(IREG(2),ILEN)
      IEQ=ISCNC(IBUF,1,NCHAR,75B) 
C                  Scan for "=" 
      IF(IEQ.EQ.0)GO TO 500 
C                   If no parameters present, go read WVR az and el 
      IF(ICHAR(IBUF,IEQ+1).NE.77B)GO TO 200 
      IP(4)=77B 
      CALL WVPDS(IP,ICLCM)
C                   If "?" display last commanded az,el 
      RETURN
C 
C 
C     2. Step through the buffer getting each parameter and decoding it.
C     Command from the user has these parameters: 
C                 WVPOINT=<AZIMUTH>,<ELEVATION> in decimal degrees
C 
C     2.1 First azimuth 
C 
200   ICH=IEQ+1 
      CALL GTPRM(IBUF,ICH,NCHAR,2,PARM,IERR)  
C                   Get azimuth 
      IF(ICHAR(PARM,1).NE.52B.AND.ICHAR(PARM,1).NE.54B)GO TO 210
      IF(ICHAR(PARM,1).NE.52B)GO TO 205 
C                   Check for "*" indicating no change in azimuth 
      AZ=AZCMWV 
C                   Pick up last commanded az 
      GO TO 250 
205   CALL UPDAT
      AZ=AZIM*180.0/PI
C                   Default is commanded antenna azimuth
      GO TO 250 
  210 AZ=PARM 
      IF (IERR.NE.0) GOTO 211 
      IF(AZ.GE.0.0.AND.AZ.LE.360.)GO TO 250 
C                   Commanded azimuth within limits?
211   IERR=-202 
      GO TO 990 
C 
C     2.2 Now get elevation 
C 
  250 CALL GTPRM(IBUF,ICH,NCHAR,2,PARM,IERR)  
      IF(ICHAR(PARM,1).NE.52B.AND.ICHAR(PARM,1).NE.54B)GO TO 260
      IF(ICHAR(PARM,1).NE.52B)GO TO 255 
C                   Check for "*" indicating no change in elevation 
      EL=ELCMWV 
C                   Pick up last commanded el 
      GO TO 300 
255   CALL UPDAT
      EL=ELEV*180.0/PI
C                   Default is antenna elevation
      GO TO 300 
  260 EL=PARM 
      IF (IERR.NE.0) GOTO 261 
      IF (EL.GT.0.AND.EL.LE.180) GOTO 300 
C                   Commanded elevation within limits?
261   IERR=-203 
      GO TO 990 
C 
C 
C     3. Format the pointing command for the WVR controller.
C 
300   CALL PT2WV(IBUF,ILEN,AZ,EL,ICLASS,NREC) 
C 
C 
C     4. Plant the final values for commanded az and el into common.
C 
      AZCMWV=AZ 
      ELCMWV=EL 
      GO TO 800 
C 
C 
C     5. Format the message requesting pointing status from the WVR.
C 
  500 CALL WVGPT(IBUF,ILEN,ICLASS,NREC) 
C 
C 
C     8. All MATCN requests are scheduled here, then WVPDS is called
C 
800   CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
      CALL WVPDS(IP,ICLCM)
      RETURN
C 
C     9. Error exit 
C 
  990 IP(1)=0 
      IP(2)=0 
      IP(3)=IERR
      IP(4)=2HQW
      RETURN
      END 
