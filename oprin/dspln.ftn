FTN77,I,Y
$CDS ON
        FUNCTION DSPLN(IBUFF,IBFC,NRY,NSZ,NF1,NF2,NF3,NF4,NF5 
     .,NF6,NF7,NF8),C#870328:18:46    DISPLAY LINE V=1# 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   DSPLN
C               THIS ROUTINE DISPLAYS THE VECTOR NRY OF SIZE NSZ ACCORDING
C       TO THE FORMAT SPECIFIED IN NFx WHERE X=(1,2,3,4,5,6,7,8) OR UNTIL 
C       THE SIZE OF NRY HAS BEEN SPECIFIED.  SEE BELOW FOR FORMATING OPTIONS
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL DSPLN(NRY,NSZ,NF1,..,NF8) 
C 
C     INPUT VARIABLES:
        DIMENSION IBUFF(60),NRY(32)
C       IBUFF   - BUFFER TO BE FILLED WITH INFORMATION
C       IBFC    - FIRST CHARACTER TO INSERT IN BUFFER 
C       NRY     - THE VECTOR TO BE DISPLAYED BY THIS ROUTINE
C       NSZ     - THE NUMBER OF ENTRIES IN THE VECTOR TO BE DISPLAYED 
C       NFx     - FOR 0<X<9 THIS IS THE FORMAT SPECIFICATION STATEMENT
C                 FOR THE ENTRY TAKEN IN SUCCESSION.  THE FORMAT OF EACH
C                 ENTRY IS A ONE WORD VARIABLE ASSUMED TO BE OF THE FORM:
C               2Hnt
C 
C               WHERE n IS THE REPEAT FACTOR FOR THIS TYPE AND IS COUNTED 
C               IN THE FOLLOWING SEQUENCE 1 2 3 4 5 6 7 8 9 A B C D E F 
C               G H I J K L M N O P Q R S T U V W X Y Z (I. E. BASE 36) 
C 
C               WHERE t IS THE TYPE FIELD AND INVOKES THE FOLLOWING OPTIONS 
C 
C               t = A    ASCII WITH NO SEPERATORS BETWEEN REPEATED ENTRIES
C                        (I. E. 2H1A,2H1A WILL PUT A COMMA BETWEEN ENTRIES
C                        WHERE 2H2A WILL NOT HAVE AN INTERVENING COMMA)
C                   I    INTEGER CONVERSION WITH A COMMA BETWEEN ENTRIES
C                        WITH NO SPACES (6 DIGITS MAXIMUM ALLOWED OF COURSE)
C                  U    IF THIS ENTRY =2Hlu IT WILL BE PRINTED AS THAT
C                       ELSE IT WILL BE TREATED AS AN I FORMAT AND PRINTED
C                       AS THOUGH I HAD BEEN SPECIFIED
C 
C     OUTPUT VARIABLES: 
C       DSPLN=IRGA,IRGB 
C 
C       IRGA    - LAST CHARACTER PUT IN BUFFER FROM THIS CALL 
C 
C               * NOTE * IRGA GIVES THE LAST CHARACTER IN THE BUFFER THAT 
C                       WAS REQUESTED FOR THIS CALL, BUT THE NEXT CHARACTER 
C                       WILL BE COMMA - SO IT THE USER WISHES TO RECALL THIS
C                       THIS ROUTINE FOR MORE INFORMATION ADD 2 TO IRGA 
C                       FOR THE RECALL START LOCATION 
C 
C 3.  LOCAL VARIABLES 
C       IRGA    - CONTENTS OF A REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C       IRGB    - CONTENTS OF B-REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
        DIMENSION IREG(2) 
C       IREG    - DUMMY REGISTER RETREIVAL AID
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C 
C     PROGRAM STRUCTURE 
C 
C               6.1  INITIALIZE VARIABLES 
C 
      NPS = PCOUNT()
      ILOC = IBFC                             !  Set pointer.
      IWORD = 1                               !  Set input word pointer.
C 
C               6.2     RECOVER FORMAT WORD 
C 
      DO IFORM=3,NPS
        IF (IFORM.EQ.3) THEN
          NFWD = NF1
        ELSE IF (IFORM.EQ.4) THEN
          NFWD = NF2
        ELSE IF (IFORM.EQ.5) THEN
          NFWD = NF3
        ELSE IF (IFORM.EQ.6) THEN
          NFWD = NF4
        ELSE IF (IFORM.EQ.7) THEN
          NFWD = NF5
        ELSE IF (IFORM.EQ.8) THEN
          NFWD = NF6
        ELSE IF (IFORM.EQ.9) THEN
          NFWD = NF7
        ELSE
          NFWD = NF8
        ENDIF
C 
C               GET FORMATTING INFORMATION
C 
        ICNT = JCHAR(NFWD,1)-60B
        IF (ICNT.GT.9) ICNT = ICNT-7          !  CORRECT LETTERS TO BASE 36
        ITYPE = JCHAR(NFWD,2) 
C 
5000    CONTINUE
C 
C               GET ITYPE FOR LOOP USE
C 
      LTYPE = ITYPE
      IF (LTYPE.EQ.125B) THEN                          !  U FORMATTING
        IF (NRY(IWORD).EQ.66165B) THEN                 !  MOVE lu TO OUTPUT
          ILOC = ICHMV(IBUFF,ILOC,2Hlu,1,2)
        ELSE                                           !  NO lu; TREAT AS I
          ILOC = IB2AS(NRY(IWORD),IBUFF,ILOC,100006B) + ILOC
        ENDIF
      ELSE IF (LTYPE.EQ.103B) THEN                     !  C FORMAT
C               MOVE IN CNTL INFO 
        ILOC = ICHMV(IBUFF,ILOC,5HCNTL-,1,5)
C               NOW MOVE IN THE CHARACTER 
        ILOC = ICHMV(IBUFF,ILOC,100B+NRY(IWORD),2,1)
      ELSE IF (LTYPE.EQ.105B) THEN                     !  E FORMAT
C               MOVE IN ESC INFO
        ILOC = ICHMV(IBUFF,ILOC,4HESC ,1,4) 
C               NOW MOVE IN THE CHARACTER 
        ILOC = ICHMV(IBUFF,ILOC,NRY(IWORD),2,1) 
      ELSE IF (LTYPE.EQ.101B) THEN                     !  ASCII FORMAT
C               MOVE IN THE CHARACTERS SOUGHT 
        ILOC = ICHMV(IBUFF,ILOC,NRY(IWORD),1,2*ICNT)
C               MUST CORRECT ICNT FOR LARGER THAN ONE SIZE
        IWORD = IWORD+ICNT-1
C               RESET ICNT ALSO 
        ICNT = 1
      ELSE IF (LTYPE.EQ.111B) THEN                     !  I FORMAT
C               CONVERT UP TO SIX DIGITS AND LEFT JUSTIFY 
        ILOC = IB2AS(NRY(IWORD),IBUFF,ILOC,100006B)+ILOC
      ELSE                                           !  INVALID REQUEST
        ILOC = ICHMV(IBUFF,ILOC,2H**,1,2) 
      ENDIF
      ILOC = ICHMV(IBUFF,ILOC,2H, ,1,1)                  !  INSERT COMMA
C               STEP TO NEXT WORD IN INPUT
        IWORD = IWORD+1 
C               IF ALL WORDS USED EXIT NOW
        IF (IWORD .GT. NSZ)GO TO 80000 
C               REDUCE ICNT 
        ICNT = ICNT-1 
C               IF MORE THIS TYPE LOOP BACK FOR IT
        IF (ICNT .GT. 0)GO TO 5000 
      ENDDO
80000    CONTINUE 
C               ALL FORMATTING REQUESTS DONE NOW; RETURN INFORMATION
      IRGA = ILOC-2
      DSPLN = REG
      RETURN
      END
