diff -u -r readline-2.0/ChangeLog readline-2.0.1/ChangeLog
--- readline-2.0/ChangeLog	Thu Mar 25 21:57:52 1993
+++ readline-2.0.1/ChangeLog	Fri Apr 28 12:31:16 1995
@@ -1,3 +1,21 @@
+Fri Apr 28 12:30:21 1995  Ari Mujunen  <amn@bigbang.nfra.nl>
+
+	* Makefile.in (CFLAGS, LDFLAGS): Optimizer on.
+
+Wed Apr 26 15:36:37 1995  Ari Mujunen  <amn@bigbang.nfra.nl>
+
+	* examples/fileman.c (fileman_completion): Bring comment in line
+	with how the code works and how it is documented.
+
+	* complete.c (rl_complete_internal): Add support for a user-selectable
+	character rl_completion_append_character that gets appended
+	when inserting a single matching completion at the end of a line.
+
+	* readline.h: rl_completion_append_character.
+
+	* doc/rltech.texinfo (Subsection Completion Variables):
+	rl_completion_append_character.
+
 Tue Mar 23 14:36:51 1993  Brian Fox  (bfox@eos.crseo.ucsb.edu)
 
 	* readline.c (rl_copy): Changed name to rl_copy_text.
diff -u -r readline-2.0/Makefile.in readline-2.0.1/Makefile.in
--- readline-2.0/Makefile.in	Wed Jul 20 20:35:13 1994
+++ readline-2.0.1/Makefile.in	Fri Apr 28 12:30:15 1995
@@ -37,8 +37,8 @@
 MV = mv
 
 DEFS = @DEFS@
-CFLAGS = -g
-LDFLAGS = -g
+CFLAGS = -pipe -O2 -fomit-frame-pointer
+LDFLAGS = 
 
 # For libraries which include headers from other libraries.
 INCLUDES = -I. -I$(srcdir)
diff -u -r readline-2.0/complete.c readline-2.0.1/complete.c
--- readline-2.0/complete.c	Wed Aug  3 15:25:56 1994
+++ readline-2.0.1/complete.c	Wed Apr 26 12:18:21 1995
@@ -213,6 +213,11 @@
    unless they also appear within this list. */
 char *rl_completer_quote_characters = (char *)NULL;
 
+/* Character to add after a single completion alternative matches
+   at the end of line.  By default this is a space.
+   Nothing is added if this is '\0'. */
+char rl_completion_append_character = ' ';
+
 /* List of characters that are word break characters, but should be left
    in TEXT when it is passed to the completion function.  The shell uses
    this to help determine what kind of completing to do. */
@@ -711,7 +716,8 @@
 	     If this was the only match, and we are hacking files,
 	     check the file to see if it was a directory.  If so,
 	     add a '/' to the name.  If not, and we are at the end
-	     of the line, then add a space. */
+	     of the line, then add a rl_completion_append_character,
+	     usually a space. */
 	  if (matches[1])
 	    {
 	      if (what_to_do == '!')
@@ -727,7 +733,11 @@
 	      if (quote_char)
 		temp_string[temp_string_index++] = quote_char;
 
-	      temp_string[temp_string_index++] = delimiter ? delimiter : ' ';
+	      if (delimiter)
+		temp_string[temp_string_index++] = delimiter;
+	      else
+		if (rl_completion_append_character)
+		  temp_string[temp_string_index++] = rl_completion_append_character;
 	      temp_string[temp_string_index++] = '\0';
 
 	      if (rl_filename_completion_desired)
diff -u -r readline-2.0/doc/rltech.texinfo readline-2.0.1/doc/rltech.texinfo
--- readline-2.0/doc/rltech.texinfo	Wed Aug  3 14:51:16 1994
+++ readline-2.0.1/doc/rltech.texinfo	Wed Apr 26 15:22:41 1995
@@ -916,6 +916,16 @@
 unless they also appear within this list.
 @end deftypevar
 
+@deftypevar {char} rl_completion_append_character
+When a single completion alternative matches at the end of the command
+line, this character is appended to the inserted completion text.  The
+default is a space character (@samp{ }).  Setting this to the null
+character (@samp{\0}) prevents anything being appended automatically.
+You can change this character in your custom completion functions to
+provide ``the most sensible word separator character'' according to your
+own command line syntax specification.
+@end deftypevar
+
 
 @node A Short Completion Example
 @subsection A Short Completion Example
@@ -1124,10 +1134,11 @@
   rl_attempted_completion_function = (CPPFunction *)fileman_completion;
 @}
 
-/* Attempt to complete on the contents of TEXT.  START and END show the
-   region of TEXT that contains the word to complete.  We can use the
-   entire line in case we want to do some simple parsing.  Return the
-   array of matches, or NULL if there aren't any. */
+/* Attempt to complete on the contents of TEXT.  START and END are
+   indices in rl_line_buffer saying what the boundaries of TEXT are.
+   TEXT contains the word to complete.  We can use the entire
+   line rl_line_buffer in case we want to do some simple parsing.
+   Return the array of matches, or NULL if there aren't any. */
 char **
 fileman_completion (text, start, end)
      char *text;
diff -u -r readline-2.0/examples/fileman.c readline-2.0.1/examples/fileman.c
--- readline-2.0/examples/fileman.c	Wed Aug  3 15:27:53 1994
+++ readline-2.0.1/examples/fileman.c	Wed Apr 26 15:02:21 1995
@@ -194,10 +194,11 @@
   rl_attempted_completion_function = (CPPFunction *)fileman_completion;
 }
 
-/* Attempt to complete on the contents of TEXT.  START and END show the
-   region of TEXT that contains the word to complete.  We can use the
-   entire line in case we want to do some simple parsing.  Return the
-   array of matches, or NULL if there aren't any. */
+/* Attempt to complete on the contents of TEXT.  START and END are
+   indices in rl_line_buffer saying what the boundaries of TEXT are.
+   TEXT contains the word to complete.  We can use the entire
+   line rl_line_buffer in case we want to do some simple parsing.
+   Return the array of matches, or NULL if there aren't any. */
 char **
 fileman_completion (text, start, end)
      char *text;
diff -u -r readline-2.0/readline.h readline-2.0.1/readline.h
--- readline-2.0/readline.h	Wed Aug  3 15:25:57 1994
+++ readline-2.0.1/readline.h	Wed Apr 26 12:11:20 1995
@@ -167,6 +167,11 @@
    unless they also appear within this list. */
 extern char *rl_completer_quote_characters;
 
+/* Character to add after a single completion alternative matches
+   at the end of line.  By default this is a space.
+   Nothing is added if this is '\0'. */
+extern char rl_completion_append_character;
+
 /* List of characters that are word break characters, but should be left
    in TEXT when it is passed to the completion function.  The shell uses
    this to help determine what kind of completing to do. */
