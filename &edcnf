FTN4
$PARM /$CART1$/2/             CARTRIDGE FOR EDEDED SCRATCH FILE 
$PARM /$CART2$/10/            CARTRIDGE FOR DEDEDE SCRATCH FILE 
$PARM /$LU1$/1/               TERMINAL 1 WITH REVERSE VIDEO   
$PARM /$LU2$/0/               TERMINAL 2 WITH REVERSE VIDEO 
C AI2CM 
C SPECIAL EDITOR
C 
      PROGRAM EDCN (3,50) 
C MAIN PROGRAM TO RP AND CALL SEGMENTS - SINGLE COPY VERSION
C# LAST COMPC'ED  820318:16:34
      INCLUDE &COMED::UT  
      COMMON /SEG/ JRP
      DIMENSION LEDCM1(3),LEDCM2(3) 
      DIMENSION IMPAR(5),IREG(2)
      EQUIVALENCE (REG,IREG)
      DATA LEDCM1 /2HED,2HCM,2H1 /, LEDCM2 /2HED,2HCM,2H2 / 
      CALL RMPAR(IMPAR) 
      REG=EXEC(14,1,LINB,-80) 
      LINB=IREG(2)
      LU=LOGLU(IDUM)
      LUO=LU
C PARSE RU LINE FOR POSSIBLE INPUT NAMR 
      ISTRC=1 
      DO 10 I=1,3 
10    IDUM=NAMR(LKB,LINB(2),IREG(2),ISTRC)
      IF(IAND(LKB(4),3).NE.3) GO TO 15
      NAMU(2)=LKB(1)
      NAMU(3)=LKB(2)
      NAMU(4)=LKB(3)
      ISECU=LKB(5)
      JLU=LKB(6)
      IF(NAMU(2).EQ.2H/ ) ISECU=-32767
C SPLIT REST OF LINE AS POSSIBLE COMMAND
      CALL SEGQ(LINB,ISTRC,LINB,LKB)
      CALL LTRMQ(LKB) 
      CALL TRIMQ(LKB) 
C CHANGE CHARACTER COUNT FOR FLAG TO INCOM
      LKB=-LKB
      GO TO 20
15    CONTINUE
      ICRED=IMPAR(2)
      ICRDE=IMPAR(3)
C SET SCRATCH FILES TO ASSIGNED LU'S
20    IF(ICRED.EQ.0) ICRED=$CART1$
      IF(ICRDE.EQ.0) ICRDE=$CART2$
 100  IF(IRP(LEDCM1,0,JRP,-1).NE.0.AND.JRP.NE.23) GO TO 900 
      IF(IRP(LEDCM2,0,JRP,-1).NE.0.AND.JRP.NE.23) GO TO 900 
C200  CALL INIT(LEDCM1,LEDCM2,ICRED,ICRDE)
200   CALL LINCA(LEDCM1,6HINIT  ,LEDCM1,LEDCM2,ICRED,ICRDE) 
C300  CALL EDCMX(LEDCM1,LEDCM2,ICRED,ICRDE) 
300   CALL LINCA(LEDCM2,6HEDCMX ,LEDCM1,LEDCM2,ICRED,ICRDE) 
C400  CALL ENDED(KEND,ICRED,ICRDE)
400   CALL LINCA(LEDCM1,6HENDED ,KEND,ICRED,ICRDE)
      IF(KEND.EQ.1) GO TO 300 
 500  IF(JRP.EQ.23) GO TO 900 
      CALL IOF(LEDCM1,JOF,0)
      CALL IOF(LEDCM2,JOF,0)
900   CONTINUE
      END 
      PROGRAM EDCM1,5 
      EXTERNAL INIT,ENDED 
      QDATA LS /INIT  ENDED / 
      CALL LINCB(LS,INIT,ENDED) 
      END 
      PROGRAM EDCM2,5 
      EXTERNAL EDCMX
      QDATA LS /EDCMX / 
      CALL LINCB(LS,EDCMX)
      END 
      SUBROUTINE INIT(LEDCM1,LEDCM2,ICRED,ICRDE)
C# LAST COMPC'ED  820318:16:34
      INCLUDE &COMED::UT
      COMMON /SEG/ JRP
      DIMENSION LEDCM1(3),LEDCM2(3) 
      DIMENSION ISIZE(2),NAM(11),IPBUF(10)
      DIMENSION MIN1(7),MIN2(15),MIN3(20),MIN4(12),MIN5(12) 
      DATA JSEC /0/ 
      DATA MIN1   /  11,2HFI,2HLE,2H N,2HAM,2HE ,2H_ /
      DATA MIN2   /  28,2HER,2HRO,2HR ,2H  ,2H  ,2HOP,2HEN,2HIN,2HG , 
     /             2HIN,2HPU,2HT ,2HFI,2HLE/
      DATA MIN3   /  37,2HER,2HRO,2HR ,2H  ,2H  ,2H  ,2H  ,2H C,2HRE, 
     /             2HAT,2HIN,2HG ,2HSC,2HRA,2HTC,2HH ,2HFI,2HLE,2HS / 
      DATA MIN4   /  21,2HRE,2HCO,2HRD,2H L,2HEN,2HGT,2HH ,2HIL,2HLE, 
     /             2HGA,2HL / 
      DATA MIN5   /  22,2HSC,2HRA,2HTC,2HH ,2HFI,2HLE,2H(S,2H) ,2HLO, 
     /             2HCK,2HED/ 
C CHECK IF NAME FROM RU LINE
      IF(NAMU(2).NE.2H/ ) GO TO 18
      IF(ISECU.EQ.-32767) GO TO 31
C GET USER FILE NAME AND OPEN FILE
15    CALL WRITQ(LU,MIN1) 
      CALL READQ(LU,NAM,20,IERR)
C EXIT IF END MARK
      IF(NAM(2).EQ.2H::) GO TO 48 
      CALL TRIMQ(NAM) 
C IF NULL, USE / FILE AS INITIALIZED
      IF(NAM.EQ.0) GO TO 31 
      ISCR=1
      CALL NAMR(IPBUF,NAM(2),NAM,ISCR)
      NAMU(2)=IPBUF(1)
      NAMU(3)=IPBUF(2)
      NAMU(4)=IPBUF(3)
      ISECU=IPBUF(5)
      JLU=IPBUF(6)
18    CALL OPEN(IDCBZ,IERR,NAMU(2),0,ISECU,JLU,IDCBX) 
      IF(IERR.LT.0) 20,30 
20    ISTRC=6 
      CALL KSTRQ(IERR,MIN2,4,ISTRC) 
      CALL WRITQ(LU,MIN2) 
C EXIT IF COMMAND FILE FROM RUN LINE
      IF(LKB.LT.0) GO TO 48 
      GO TO 15
C FIND LU AND SIZE
30    CALL LOCF(IDCBZ,IERR,IREC,IRB,IOFF,JSEC,JLUX,JTY,JREC)
C SET LU NEGATIVE FOR USE IN FMP CALLS
      IF(JLU.EQ.0) JLU=-JLUX
C IF NEGATIVE SCRATCH LU'S GIVEN, OPEN - FOR CRASH RECOVERY 
31    IF(ICRED.LT.0.AND.ICRDE.LT.0) 32,34 
32    CALL OPEN(IDCBI,IER1,NAMI,0,0,ICRED,IDCBX)
      CALL OPEN(IDCBO,IER2,NAMO,0,0,ICRDE,IDCBX)
      IF(IER1.LT.0.OR.IER2.LT.0) 40,50
C SET SIZE OF SCRATCH FILES ROUNDED UP TO NEAREST 6 BLOCKS
34    ISIZE(1)=((JSEC/2+6)/6)*6+90
C CREATE INPUT AND OUTPUT FILES, THEN RE-OPEN FOR NON-UPDATE
      CALL CREAT(IDCBI,IER1,NAMI,ISIZE,3,0,ICRED,IDCBX) 
      CALL CREAT(IDCBO,IER2,NAMO,ISIZE,3,0,ICRDE,IDCBX) 
      IF(IER1.LT.0.OR.IER2.LT.0) 40,50
40    ISTRC=6 
      CALL KSTRQ(IER1,MIN3,4,ISTRC) 
      ISTRC=10
      CALL KSTRQ(IER2,MIN3,4,ISTRC) 
      CALL WRITQ(LU,MIN3) 
      CALL PURGE(IDCBI,IER3,NAMI,0,ICRED) 
      CALL PURGE(IDCBO,IER4,NAMO,0,ICRDE) 
      IF(IER3.NE.-8.AND.IER4.NE.-8) GO TO 36
      CALL WRITQ(LU,MIN5) 
      CALL WERR(2,IER3+IER4)
36    IF(IER1.EQ.-2.AND.IER2.EQ.-2) GO TO 34
      CALL CLOSE(IDCBZ) 
C IOF SEGMENTS
48    IF(JRP.EQ.23) GO TO 49
      CALL IOF(LEDCM1,JOF,0)
      CALL IOF(LEDCM2,JOF,0)
49    CALL EXEC(6)
50    CONTINUE
      CALL LOCF(IDCBI,IERR,IREC,IRB,IOFF,JSEC,JILU) 
      CALL LOCF(IDCBO,IERR,IREC,IRB,IOFF,JSEC,JOLU) 
C SKIP RE-OPEN AND COPY FROM USER FILE IF CRASH RECOVERY
      IF(ICRED.LT.0.AND.ICRDE.LT.0) GO TO 320 
      CALL OPEN(IDCBI,IERR,NAMI,0,0,-JILU,IDCBX)  
      CALL OPEN(IDCBO,IERR,NAMO,0,0,-JOLU,IDCBX)  
C COPY USER FILE TO INPUT FILE IF PRESENT 
      IF(NAMU(2).EQ.2H/ ) GO TO 399 
      DO 319 IR=1,32767 
      CALL READF(IDCBZ,IER1,LINB,75,LEN)
      IF(IER1.EQ.-5) CALL WRITQ(LU,MIN4)
C STOP IF ERROR 
      IF(IER1.GE.0.OR.IER1.EQ.-5) GO TO 310 
305   CALL PURGE(IDCBI,IERR,NAMI,0,ICRED) 
      CALL PURGE(IDCBO,IERR,NAMO,0,ICRDE) 
      CALL WERR(1,IER1+IER2)
310   IF(LEN.EQ.-1) GO TO 320 
      CALL WRITF(IDCBI,IER2,LINB,LEN) 
C STOP IF ERROR 
      IF(IER2.LT.0) GO TO 305 
      IF(IER1.EQ.-5) GO TO 320
319   CONTINUE
320   CONTINUE
C CLOSE USER FILE AND REWIND INPUT FILE 
      CALL CLOSE(IDCBZ) 
      CALL RWNDF(IDCBI) 
399   RETURN
      END 
      SUBROUTINE ABORT(LEDCM1,LEDCM2,ICRED,ICRDE) 
C# LAST COMPC'ED  820318:16:34
      INCLUDE &COMED::UT  
      COMMON /SEG/ JRP
      DIMENSION LEDCM1(3),LEDCM2(3) 
      DIMENSION MAB1(7) 
      DATA MAB1   /  12,2HED,2HCN,2H A,2HBO,2HRT,2HED/
C CLOSE ALL FILES 
C     CALL WRITF(IDCBI,IERR,2HXX,1) 
C     CALL WRITF(IDCBO,IERR,2HXX,1) 
      CALL CLOSE(IDCBI) 
      CALL CLOSE(IDCBO) 
      CALL CLOSE(IDCBZ) 
C PURGE SCRATCH FILES 
      CALL PURGE(IDCBI,IERR,NAMI,0,ICRED) 
      CALL PURGE(IDCBO,IERR,NAMO,0,ICRDE) 
      CALL PURGE(IDCBZ,IERR,NAMCO,0,JLU)
C TERMINATE AFTER IOF ON SEGMENTS 
      IF(JRP.EQ.23) GO TO 800 
      CALL IOF(LEDCM1,JOF,0)
      CALL IOF(LEDCM2,JOF,0)
800   CALL WRITQ(LU,MAB1) 
      CALL EXEC(6)
      END 
      SUBROUTINE IWVQ(LU,LBB) 
C SUBROUTINE TO ECHO DELETED CHARACTERS WITH MARKERS
      DIMENSION LBB(1)
      DIMENSION LV1(3),LV2(3),LBS(2)
      DATA LV1 /4,2H&,2HdB/, LV2 /4,2H&,2Hd@/, LBS /1,2H\ / 
C REVERSE VIDEO TERMINALS 
      IF(LU.EQ.$LU1$.OR.LU.EQ.$LU2$) 100,200
100   CALL MERGQ(LBB,LV1,LBB,LV2) 
      GO TO 300 
200   CALL MERGQ(LBB,LBS,LBB) 
      IF(LBB.GT.2) CALL MERGQ(LBB,LBB,LBS)
300   CALL IWBQ(LU,LBB) 
      RETURN
      END 
      BLOCK DATA EDCOM
      INCLUDE &COMED::UT  
      COMMON /SEG/ JRP
C DEFAULT INPUT FILE
      DATA NAMU /6,2H/ ,2*2H  /, ISECU /0/, JLU /0/ 
C SCRATCH FILES 
      DATA NAMI /3*2HED/, NAMO /3*2HDE/, NAMCO /3*2HCO/ 
C INTIALIZED POINTERS AND FLAGS 
      DATA IDCBX /272/, NIN /1/, NOUT /1/, NADD /0/, KLIN /2/, KCA /0/
      DATA KCALL /1/, NBEG /0/, KEOF /0/, IHW1 /1/, IHW2 /150/
      DATA KBR /0/, KNU /0/ 
C LINE HOLDING BUFFERS
      DATA NHMAX /3/, LH /228*0/
C TAB 
      DATA LTAB /1,2H] /, ITAB /7,11,15,19,23,27,31,35,39,43/ 
C PAGE MODE 
      DATA KPAGE /-1/, KEOP /0/, LPAGE /9,3*2H  ,2HEN,2HD / 
C INITIAL RP CONDITION
      DATA JRP /0/
      END 
