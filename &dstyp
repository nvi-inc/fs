FTN4,X
C@DSTYP 
C 
        SUBROUTINE DSTYP(ISDLU),C#870115:05:50    # 
C 
C     DSTYP 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   DSTYP
C 
C               THIS PROGRAM DETERMINES THE 264X TERMINAL TYPE AND
C       SETS THE BITS IN ISDLU ACCORDINGLY FOR THE STATE OF THE DEVICE
C       THIS ROUTINE WILL READ THE STATUS BYTES AS AVAILABLE INTO 
C       THE EXTENDED PART OF ISDLU IF IT IS PRESENT, AS INDICATED 
C       BY THE X BIT IN ISDLU 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL DSTYP(ISDLU)
C 
C     INPUT VARIABLES:
C 
C       GLOBAL DEFS REFERENCED: "ISDLU
C 
C     INCLUDE "ISDLU::FS
C 
C     OUTPUT VARIABLES: 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C 2.2.   COMMON BLOCKS USED 
C 
C 2.3.   DATA BASE ACCESSES 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: THIS IS A UTILITY
C 
C     CALLED SUBROUTINES: SUB1, SUB2, ... (includes segments scheduled) 
C 
C 3.  LOCAL VARIABLES 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION IBUFF(5)
C 
C       IBUFF   - BUFFER FOR PRIMARY STATUS BITS
C 
        DIMENSION IBUFF2(5) 
C 
C       IBUFF2  - BUFFER FOR SECONDARY STATUS BITS
C 
C 
C       IRGA    - CONTENTS OF A REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
C       IRGB    - CONTENTS OF B-REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
        DIMENSION IREG(2) 
C 
        DIMENSION ITPRM(2),ITSEC(2) 
C 
C       IREG    - DUMMY REGISTER RETREIVAL AID
C 
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 4.  CONSTANTS USED
C 
        DATA ITPRM/15536B,57400B/ 
C 
C       ITPRM   - REQUEST PRIMARY TERMINAL STATUS 
C                 THE CHARACTERS ARE
C 
C               ESC ^   - REQUEST PRIMARY STATUS
C 
C               _       - SEND NO CR(LF)
C 
        DATA ITSEC/15576B,57400B/ 
C 
C       ITSEC   - REQUEST SECONDARY TERMINAL STATUS 
C                 THE CHARACTERS ARE
C 
C               ESC     - REQUEST SECONDARY STATUS 
C 
C               _       - SEND NO CR(LF)
C 
C 
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  870115:05:50urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C       6.1 INITIALIZE VARIABLES
C 
        LU=IAND(ISDLU,77B)
C 
        IITYP=ICHAR(ISDLU,1)/20B
C 
C               SET ITYP TO ZERO INITIALLY
C 
        ITYP=0
C 
C       6.2 READ IN STATUS BYTES (PRIMARY)
C 
C               SEND REQUEST FOR STATUS BYTES 
C 
        CALL EXEC(2,LU,ITPRM,-3)
C 
C               READ RESPONSE OF TERMINAL 
C 
        REG=EXEC(1,LU+300B,IBUFF,-10,600) 
C 
C               GET LENGTH IN NUMBER OF STATUS BYTES
C 
        LEN=IRGB-2
C 
C               CHECK FOR A TIMEOUT OF THE DEVICE 
C 
        IF(IAND(IRGA,10B) .EQ. 0)GO TO 1000 
C 
C               THE TERMINAL HAS NOT RESPONDED TO A RESOANABLE
C       REQUEST.  IT IS NOW NECESSARY TO PROGRESSIVELY PROVOKE THE
C       TERMINAL UNTIL A RESPONSE IS OBTAINED EVEN IF A MASTER RESET
C       OF THE TERMINAL IS NECESARY.
C 
C               EXIT WITH NOTHING CHANGED NO RESPONSE COULD BE
C       OBTAINED FROM THE TERMINAL
C 
        GO TO 99999 
C 
1000    CONTINUE
C 
C               IF TYPE IS GIVEN ONLY RETURN NEW STATUS BYTES 
C 
        IF(IITYP .NE. 0)GO TO 80000 
C 
C               IF LESS THAN 7 MUST HAVE 2640 
C 
        IF(LEN .GT. 6)GO TO 5000
C 
C               THIS IS A 2640 TERMINAL 
C 
        ITYP=1
C 
C               GO TO COMMON STATUS BYTE HANDLER
C 
        GO TO 80000 
C 
5000    CONTINUE
C 
C               CHECK FOR 2645 CLASS DEVICES
C 
        ITB=ICHAR(IBUFF,6)
C 
        IF(IAND(ITB,10B) .NE. 0)GO TO 10000 
C 
C               MUST BE A 2644 TERMINAL 
C 
        ITYP=2
C 
C               GO TO COMMON STATUS BIT HANDLER 
C 
        GO TO 80000 
C 
10000   CONTINUE
C 
C               SET TYPE FOR ALL 2645 AND ABOVE DEVICES 
C 
        ITYP=3
C 
C               SET IRTO FOR SHORT READ ASSUME 9600 10 CHARACTERS 
C 
        IRTO=50 
C 
11000   CONTINUE
C 
C               REQUEST SECONDARY STATUS BYTES
C 
        CALL EXEC(2,LU,ITSEC,-3)
C 
C               READ IN SECONDARY STATUS BYTES
C 
        REG=EXEC(1,LU+300B,IBUFF2,-10,IRTO) 
C 
C               IF TIMEOUT ASSUME 2621
C 
        IF(IAND(IRGA,10B) .EQ. 0 .AND. IRGB .NE. 0)GO TO 15000
C 
C               FOR NO RESPONSE ASSUME 2621 
C 
        IF(IRGB .EQ. 0)GO TO 14000
C 
C               FOR  ONLY TIME OUT CHANGE TIMEOUT AND TRY AGAIN 
C 
        IRTO=MIN0(600,2*IRTO) 
C 
C               TRY AGAIN 
C 
        GO TO 11000 
C 
14000   CONTINUE
C 
C               NOTE 2621 
C 
        ITYP=4
C 
C               GO TO EXTENDED PROBLEM
C 
        GO TO 80000 
C 
15000   CONTINUE
C 
C               NOTE IF FIRMWARE IS PRESENT 
C 
        ITFWR=ICHAR(IBUFF2,4) 
C 
        IF(IAND(ITFWR,1) .NE. 0)ITYP=IOR(ITYP,4)
C 
C               NOTE IF GRAPHICS FIRMWARE PRESENT(2648 TYPE)
C 
        IF(IAND(ITFWR,4) .NE. 0)ITYP=IOR(ITYP,10B)
C 
C               NOW HANDLE EXTENDED OPTION IF PRESENT 
C 
        GO TO 80000 
C 
80000   CONTINUE
C 
C               IF EXTENDED OPTION ABSENT EXIT
C 
        IF(IAND(ISDLU,100B) .EQ. 0)GO TO 99999
C 
C               GET PRIMARY STATUS BYTES
C 
        CALL ICHMV(ISDLU,3,IBUFF,3,7) 
C 
C               RESET LAST BYTE AND EXIT IF 2640
C 
        IF(ITYP .NE. 1)GO TO 82000
C 
C               CLEAR LAST BYTE 
C 
        CALL ICHMV(ISDLU,9,0,1,1) 
C 
        GO TO 99999 
C 
82000   CONTINUE
C 
C               EXIT IF 2644
C 
        IF(ITYP .NE. 3)GO TO 99999
C 
C               MOVE IN SECONDARY BYTES 
C 
        CALL ICHMV(ISDLU,10,IBUFF2,3,7) 
C 
        GO TO 99999 
C 
99999   CONTINUE
C 
C               CONSTRUCT NEW ISDLU 
C 
        ISDLU=ITYP*10000B+IAND(ISDLU,7777B) 
C 
      RETURN
      END 
      END$
