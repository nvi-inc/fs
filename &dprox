FTN4,X
C@DPROX 
      SUBROUTINE DPROX(LUOP,IDEBUG,IDATA,ILOG,IBLK,IBUF,NBYTES,IPAR,
     . ICRCC,LTIME,ISCHAR,KSPLIT),PROCESS DATA BUFFER DATA C#870115:05:16#
C 
C     ROUTINE TO GET TIME AND CHECK SYNC WORD FROM RAW DATA BLOCK 
C     IF APPROPRIATE
C 
C     ON ENTRY--
C       LUOP,    OPERATOR LU
C       IDATA,   BUFFER OF DATA TO BE PROCESSED 
C       ILOG,    #CHARS IN IDATA
C       IBLK,    BLOCK# ASSOCIATED WITH IDATA 
C       IBUF,    SCRATCH BUFFER OF MINIMUM LENGTH 625 WORDS 
C 
C     ON RETURN-- 
C       NBYTES,  #BYTES 
C       IPAR,    #PARITY ERROR DETECTED IN IDATA
C       ICRCC,   SYNC-BLOCK CRCC ERROR FLAG 
C                 1 - SYNC BLOCK PRESENT WITH NO CRCC ERROR 
C                 0 - NO SYNC BLOCK IN DATA 
C                -1 - CRCC ERROR IN SYNC BLOCK
C       LTIME    8-WORD ASCII ARRAY CONTAINING DECODED PRINTABLE TIME,
C                IF AVAILABLE.
C       ISCHAR,  CHARACTER # WITHIN IDATA AT WHICH SYNC BLOCK BEGINS, 
C                IF SYNC BLOCK FULLY CONTAINED WITHIN IDATA (I.E. ICRCC<>0) 
C 
C     ARW 790724  MODIFIED NRV 800222 
C     MODIFIED MAH DEC '81
C 
      LOGICAL KSPLIT
      INTEGER IDATA(1),LTIME(1),ITABL(256),ISYNC(10), 
     .        IBUF(1) 
C 
      NBYTES=0
      IPAR=0
      IF (ILOG .LE. 0) RETURN 
C 
      IF (.NOT.KSPLIT) GOTO 99
      CALL BSPLT(IDATA,ILOG)
      GOTO 180
C 
99    ABIT=IBLK*4096. 
C     COMPUTE BIT# (IN IDATA) OF FIRST FULL BYTE IN IDATA (STARTING AT BIT#0) 
      IBIT=9.-AMOD(ABIT,9.) 
      IF (IBIT .EQ. 9) IBIT=0 
C     COMPUTE FRAME# (WITHIN DATA BUFFER) IN WHICH THIS BIT OCCURS
      IFRAME=(ABIT+IBIT)/22500. 
C     COMPUTE BYTE# WITHIN FRAME
      IBYTE=AMOD((ABIT+IBIT)/9.,2500.)
      NBYTES=(ILOG*8-IBIT)/9
      IF(IDEBUG.GT.1)WRITE(LUOP,100) ABIT,IBLK,IBIT,IFRAME,IBYTE,NBYTES 
 100  FORMAT(/"ABIT,IBLK,IBIT,IFRAME,IBYTE,NBYTES=",/,F12.1,5I6)
C 
C 
C     CHECK IF COMPLETE SYNC BLOCK IS PRESENT WITHIN IDATA
      ICRCC=0 
      ISCHAR = 0
      IF ((IBYTE.EQ.0 .OR. IBYTE+NBYTES.GE.2520) .AND. NBYTES.GE.20)
     .                                                         150,180
150   CALL TABGN(ITABL) 
C     SQUEEZE OUT PARITY BITS AND COUNT PARITY ERRORS 
      IWBIT=IBIT+1
      JWBYT=1 
      CALL SQISH(IDATA,IWBIT,IBUF,JWBYT,NBYTES,IPAR,ITABL)
      IF (IDEBUG.LT.2) GOTO 120 
      WRITE(LUOP,9100)NBYTES,IPAR 
9100  FORMAT("SQUISHED DATA, NBYTES="I5", #PE="I5)
      DO 101 I=1,NBYTES 
      L=IH22A(ICHAR(IDATA,I)) 
C                   Convert from hex bits to ASCII for printing 
      WRITE(LUOP,110) L 
110   FORMAT(A2" _")
101   CONTINUE
C 
120   CONTINUE
      JBYT=MOD(2500-IBYTE,2500) 
      ISCHAR=JBYT+1 
C     MOVE SYNC BLOCK TO SEPARATE BUFFER
      CALL ICHMV(ISYNC,1,IBUF,ISCHAR,20)
C     DECODE TIME 
      DO 151 I=1,8
        LTIME(I)=IH22A(ICHAR(ISYNC,I+12)) 
151     CONTINUE
      LTIME(7)=IAND(LTIME(7),177400B) 
      LTIME(8)=0
      N=12
      MASK=7003B
      ISTATE=0
      IDBIT=1 
      NBITS=148 
      CALL CRCC(N,MASK,ISTATE,ISYNC,IDBIT,NBITS,IDUM,0) 
C     REVERSE ORDER OF BITS IN ISTATE TO GET CRC CHARACTER
      DO 160 I=5,16 
160   CALL PUTB(JSTATE,I,IGETB(ISTATE,21-I))
C     COMPARE WITH CRC CHARACTER IN ISYNC 
      ICRCC=1 
      IF (IAND(ISYNC(10),7777B) .NE. IAND(JSTATE,7777B)) ICRCC=-1 
      IF(IDEBUG.GT.0) WRITE(LUOP,170) ISCHAR,ICRCC
170   FORMAT(/"ISCHAR,ICRCC=",2I6)
      CALL IFILL(IBUF,1,NBYTES,377B)
      CALL IFILL(IBUF,ISCHAR,20,0)
180   CONTINUE
C 
      END 
