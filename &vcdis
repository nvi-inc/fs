FTN4,X
C@VCDIS 
C 
      SUBROUTINE VCDIS(IP,IVCN,ICLCM),VC DISPLAY C#870115:04:33#
C 
C 1.1.   VCDIS gets data from a Video Converter and displays it 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of buffer from MATCN 
C        IP(2)  - # records in class
C        IP(3)  - error return from MATCN 
C        IP(4)  - who, or 77B (?) 
C        IP(5)  - class with command
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - error
C        IP(2) - class
C        IP(3) - number of records
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLED SUBROUTINES: character utilities 
C 
C 3.  LOCAL VARIABLES 
C 
      DIMENSION IBUFV1(20),IBUFV2(20),IBUF2(30) 
C               - input class buffers, output display buffer
C        ILEN   - length of buffers, chars
C        IBW    - bandwidth index 
C        ITP    - total power index 
C        IVCN   - which VC
C        NCH    - character counter 
C        IATU,IATL
C               - attenuator settings 
C        IREM,ILOK
C               - remote, lock indicators 
      DIMENSION LVC(14) 
C               - string equivalents of VC numbers
      LOGICAL KCOM,KDATA
      DIMENSION LFR(3)
      DIMENSION IREG(2) 
C               - registers from EXEC 
      EQUIVALENCE (REG,IREG(1)) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA LVC/2H01,2H02,2H03,2H04,2H05,2H06,2H07,2H08,2H09,2H10,2H11,
     .         2H12,2H13,2H14/
      DATA ILEN/40/,ILEN2/60/ 
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED:   790216 
C# LAST COMPC'ED  870115:04:33 #
C 
C     PROGRAM STRUCTURE 
C 
C     1. Determine whether parameters from COMMON wanted and skip to
C     response section. 
C     Get RMPAR parameters and check for errors from our I/O request. 
C 
      KCOM = IP(4).EQ.77B 
C 
      ICLASS = IP(1)
      NCREC = IP(2) 
      IERR = IP(3)
C 
      IF (KCOM) GOTO 200
      IF (IERR.LT.0) GOTO 990 
      IF (ICLASS.EQ.0.OR.ICLCM.EQ.0) GOTO 990 
C 
C 
C     2. Get class buffer with command in it.  Set up first part
C     of output buffer.  Get first buffer from MATCN. 
C 
200   REG = EXEC(21,ICLCM,IBUF2,-ILEN2) 
C 
      NCHAR = IREG(2) 
      NCH = ISCNC(IBUF2,1,NCHAR,75B)
C                   Scan for "="
      KDATA = NCH.EQ.0
C                   If our command was only "device" we are waiting for 
C                   data and know what to expect. 
      IF (NCH.EQ.0) NCH = NCHAR+1 
C                   If no "=" found, position after last character
      NCH = ICHMV(IBUF2,NCH,2H/ ,1,1) 
C                   Put / to indicate a response
C 
      IF (KCOM) GOTO 310
      IF (KDATA) GOTO 230 
C 
      DO 220 I=1,NCREC
        IF (I.NE.1) NCH=MCOMA(IBUF2,NCH)
C                   If not first parm, put comma before 
        REG = EXEC(21,ICLASS,IBUFV1,-ILEN)
        NCHAR = IREG(2) 
        NCH = ICHMV(IBUF2,NCH,IBUFV1(2),1,NCHAR-2)
C                   Move buffer contents into output list 
220     CONTINUE
      GOTO 500
C 
230   REG = EXEC(21,ICLASS,IBUFV1,-ILEN)
      REG = EXEC(21,ICLASS,IBUFV2,-ILEN)
C                   Get the two buffers with data 
C 
C 
C     3. Now the buffer contains: VCnn/, and we want to add the data. 
C 
300   CALL MA2VC(IBUFV1,IBUFV2,LFR,IBW,ITP,IATU,IATL,IREMVC(IVCN),
     .     ILOKVC(IVCN),TPIVC(IVCN),IAL)
      GOTO 320
310   CALL ICHMV(LFR,1,LFREQV(1,IVCN),1,6)
      IBW = IBWVC(IVCN) 
      ITP = ITPIVC(IVCN)
      IATU = IATUVC(IVCN) 
      IATL = IATLVC(IVCN) 
C 
320   IERR = 0
      NCH = ICHMV(IBUF2,NCH,LFR,1,6)
C                   Move in frequency 
      IF (ICHCM(LFR,1,LFREQV(1,IVCN),1,6).NE.0) IERR = -301 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IVCED(-1,IBW,IBUF2,NCH,ILEN2) 
C                   Convert real number bandwidth to characters 
      IF (IBW.NE.IBWVC(IVCN)) IERR = -302 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IVCED(-2,ITP,IBUF2,NCH,ILEN2) 
C                   Total power selection, ASCII letters
      IF (ITP.NE.ITPIVC(IVCN)) IERR = -303
      NCH = MCOMA(IBUF2,NCH)
C 
      NCX = IB2AS(IATU,IBUF2,NCH,100000B+2) 
      IF (IATU.NE.IATUVC(IVCN)) IERR = -304 
      NCH = MCOMA(IBUF2,NCH+NCX)
      NCX = IB2AS(IATL,IBUF2,NCH,100000B+2) 
      IF (IATL.NE.IATLVC(IVCN)) IERR = -305 
C 
      NCH = NCH + NCX 
      IF (KCOM) GOTO 500
C 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IVCED(-3,IREMVC(IVCN),IBUF2,NCH,ILEN2)
C                   Remote setting
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IVCED(-4,ILOKVC(IVCN),IBUF2,NCH,ILEN2)
C                   Oscillator locked or not
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = NCH + IR2AS(TPIVC(IVCN),IBUF2,NCH,6,0)
C                   Total power reading, binary 
C 
C 
C     5. Now send the buffer to SAM and schedule PPT. 
C 
500   ICLASS = 0
      NCH = NCH - 1 
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)  
C                   Send buffer starting with VC= for display.
      IF (.NOT.KCHECK) IERR = 0 
C 
980   IP(1) = ICLASS
      IP(2) = 1 
      IP(3) = IERR
      IP(4) = 2HQV
      IP(5) = 0 
990   RETURN
      END 
