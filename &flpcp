FTN4X 
      PROGRAM FLPCP(3,99),C#780803:08:53.FLOPPY COPY (CAK)
      IMPLICIT INTEGER*2 (A-Z)
      REAL*4 REG
C 
C     PROGRAM TO COPY FLOPPIES
C     VERSION 82140 WILL COPY ONTO A FLOPPY WITH FEWER GOOD 
C     TRACKS THAN THE MASTER AS LONG AS THE NUMBER OF USED TRACKS 
C     ON THE MASTER WILL FIT (RELOCATES DIRECTORY TRACKS) 
C 
      DIMENSION IPAR(5),IDCB (3856),ISIZE(2),IREC(3840),IREG(2) 
      EQUIVALENCE (REG,IREG)
C 
      LDATA INAME $#FLPCP$
      LDATA IDOT $._$ 
      LDATA IDDD $D_$ 
C 
      DATA ISIZE /2010,3840/
C 
      CALL RMPAR (IPAR) 
      LU=IPAR(1)
      IF (LU.LT.4) LU=1 
      ICR=IPAR(2) 
      IF(ICR.EQ.0) ICR=-10
C 
C     CREATE SCRATCH FILE 
C 
1     CONTINUE
      CALL PURGE (IDCB,IERR,INAME,0,ICR)  
      CALL CREAT (IDCB,IERR,INAME,ISIZE,2,0,ICR,3840) 
      IF (IERR.LT.0) STOP 3 
      CALL OPEN (IDCB,IERR,INAME,3,0,ICR,3840)  
      IF (IERR.LT.0) STOP 4 
C 
999   CONTINUE
      WRITE (LU,100)
100   FORMAT(" FLPCP ver. 82140",/, 
     .       " Insert source floppy.",/,
     .       " Enter LU (positive number) to continue."/
     .       " Enter 0 to quit.",/,"?_")
      LUIN=0
      READ (LU,*) LUIN
C 
C     MUST BE 30 OR 31 (GSFC) 
C 
      IF (LUIN.EQ.0) STOP 1 
      IF(IDTYP(LUIN).NE.33B) STOP 1 
C 
C     GET NUMBER OF GOOD TRACKS WITH DUMMY READ 
C 
      REG=EXEC(1,LUIN,IREC,3856,70,0) 
      WRITE (LU,101) IREG(2)
101   FORMAT(" Master disk has ",I2," good tracks.")
      NTRAK=IREG(2) 
C 
C     READ CARTRIDGE DIRECTORY TO FIND FIRST AVAILABLE TRACK, 
C     LOWEST DIRECTORY TRACK, AND NUMBER OF DIRECTORY TRACKS
C 
      REG=EXEC(1,LUIN,IREC,128,NTRAK-1,0) 
      IREC(1)=IAND(IREC(1),077777B) 
      FDRTRK=IREC(8)
      NDRTRK=-IREC(9) 
      NEXFMP=IREC(10) 
      WRITE (LU,113) (IREC(K),K=1,4),NEXFMP,FDRTRK,NDRTRK 
113   FORMAT (" Disk ",3A2," CR ",I5," NEXTR ",I2," DIR TRK ",I2, 
     .        " # DIR ",I2) 
C 
C     READ THE RECORDED PORTION OF THE DISK AND STORE IN SCRATCH FILE 
C 
      DO 2 ITRK=0,NEXFMP  
      REG=EXEC(1,LUIN,IREC,3840,ITRK,0) 
C 
C     CHECK STATUS AFTER READ 
C 
      CALL EXEC (13,LUIN,IEQT5,IEQT4) 
      IF (IAND(IEQT5,000377B).NE.0) GO TO 550 
      CALL WRITF (IDCB,IERR,IREC,3840,ITRK+1) 
      IF (IERR.LT.0) GO TO 500
      CALL EXEC (2,LU,IDOT,1) 
      IF (MOD(ITRK,10).EQ.0.AND.ITRK.NE.0) WRITE (LU,102) ITRK
102   FORMAT(I2)
2     CONTINUE
16    FORMAT(/) 
C 
C     READ DIRECTORY TRACKS 
C 
      DO 3 ITRK=FDRTRK,FDRTRK+NDRTRK-1
      REG=EXEC(1,LUIN,IREC,3840,ITRK,0) 
      CALL EXEC (13,LUIN,IEQT5,IEQT4) 
      IF (IAND(IEQT5,000377B).NE.0) GO TO 550 
      CALL WRITF (IDCB,IERR,IREC,3840,ITRK+1) 
      IF (IERR.LT.0) GO TO 500
      CALL EXEC (2,LU,IDDD,1) 
3     CONTINUE
      WRITE (LU,16) 
C 
C     WRITE COPIES
C 
99    CONTINUE
      WRITE (LU,105)
105   FORMAT(" Insert destination floppy.",/, 
     .       " THIS DISK WILL BE COMPLETELY REWRITTEN.",/,
     .       " Enter LU (positive number) for output disk.",/,
     .       " Enter 0 to quit.",/,"?_")
      LUOUT=0 
      READ (LU,*) LUOUT 
      IF (LUOUT.EQ.0) GO TO 400 
      IF (IDTYP(LUOUT).NE.33B) GOTO 400 
C 
C     CHECK THAT THERE ARE ENOUGH OUTPUT TRACKS 
C 
      REG=EXEC (1,LUOUT,IREC,3840,70,0) 
      NTRAKO=IREG(2)  
      WRITE (LU,106) NTRAKO 
106   FORMAT(" Output disk has ",I2," good tracks.")
C 
C     IF THE NUMBER OF GOOD TRACKS IS SUFFICIENT TO HOLD THE
C     INPUT DATA AND DIRECTORY, CONTINUE
C 
      NTUSD=(NEXFMP+1)+NDRTRK 
      IF (NTRAKO.GE.NTUSD) GO TO 10 
      WRITE (LU,110)
110   FORMAT(" Insufficient good tracks for copy.") 
      GO TO 99
10    CONTINUE
C 
C     TRACK 0 IS SPECIAL CASE (CANT OVERWRITE FLOPLK) 
C 
      CALL READF (IDCB,IERR,IREC,3840,LEN,1)
      IF (IERR.LT.0) GO TO 500
      REG=EXEC(2,LUOUT,IREC(129),3712,0,2)  
C 
C     CHECK STATUS AFTER WRITE
C 
      CALL EXEC (13,LUOUT,IEQT5,IEQT4)
      IF (IAND(IEQT5,000377B).NE.0) GO TO 560 
      CALL EXEC (2,LU,IDOT,1) 
C 
C     DO THE REST 
C 
      DO 11 ITRK=1,NEXFMP   
      CALL READF (IDCB,IERR,IREC,3840,LEN,ITRK+1) 
      IF (IERR.LT.0) GO TO 500
      REG=EXEC(2,LUOUT,IREC,3840,ITRK,0)
C 
C     CHECK STATUS AFTER WRITE
C 
      CALL EXEC (13,LUOUT,IEQT5,IEQT4)
      IF (IAND(IEQT5,000377B).NE.0) GO TO 560 
      CALL EXEC (2,LU,IDOT,1) 
      IF (MOD(ITRK,10).EQ.0) WRITE (LU,120) ITRK
120   FORMAT(I2)
11    CONTINUE
C 
C     RESTORE DIRECTORY TRACKS
C     DIRECTORY MAY BE RELOCATED IF DESTINATION DISK HAS MORE OR
C     LESS GOOD TRACKS THAN SOURCE DISK 
C 
      DO 12 ITRK=FDRTRK,FDRTRK+NDRTRK-1 
      JTRK=ITRK+NTRAKO-NTRAK
      CALL READF (IDCB,IERR,IREC,3840,LEN,ITRK+1) 
      IF (IERR.LT.0) GO TO 500
C 
C     MODIFY CARTRIDGE SPECIFICATION ENTRY TO REFLECT THE LOCATION
C     OF THE RELOCATED DIRECTORY TRACKS 
C 
      IF ((ITRK+1).EQ.NTRAK) IREC(8)=NTRAKO-NDRTRK
      REG=EXEC(2,LUOUT,IREC,3840,JTRK,0)
      CALL EXEC (13,LUOUT,IEQT5,IEQT4)
      IF (IAND(IEQT5,000377B).NE.0) GO TO 560 
      CALL EXEC (2,LU,IDDD,1) 
12    CONTINUE
      WRITE (LU,16) 
      GO TO 99
550   CONTINUE
      WRITE (LU,5500) IEQT5,ITRK
5500  FORMAT(" Error ",O6," reading track ",I2) 
      GO TO 999 
560   CONTINUE
      WRITE (LU,5600) IEQT5,ITRK
5600  FORMAT(" Error ",O6," writing track ",I2,/, 
     .       " Copy aborted.")
      GO TO 99
500   CONTINUE
      WRITE (LU,5000) IERR
5000  FORMAT(" Error ",I3," in READF/WRITF. ")
400   CONTINUE
      CALL CLOSE (IDCB,IERR)
      CALL PURGE (IDCB,IERR,INAME,0,ICR)  
      END 
