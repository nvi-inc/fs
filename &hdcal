FTN4,X
      SUBROUTINE HDCAL(IP),TAPE HEAD SPEED CALIBRATION
C 
C  HDCAL measures the tape positioner speeds
C 
C  INPUT VARIABLES: 
      DIMENSION IP(1) 
C        IP(1) - class # of input parameter buffer
C 
C  OUTPUT VARIABLES:
C        IP(1) - class #
C        IP(2) - # of records 
C        IP(3) - error return 
C        IP(4) - who we are 
C 
C  COMMON BLOCKS USED:
      INCLUDE #FSCOM::FS
C 
C  CALLED SUBROUTINES: HDPOS,THDCL
C 
C  LOCAL VARIABLES: 
      DIMENSION IPARM(2),IREG(2),IBUF(40) 
      LOGICAL KCAL
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C  INITIALIZED VARIABLES: 
      DATA ILEN /40/
C 
C  HISTORY: 
C  DATE  WHO  WHAT
C 841226 WEH  CREATED 
C 880615 NRV  MODIFIED PER LAR'S CHANGES FOR NEW TAPE FORMAT  
C 
C 
C  1. Get class buffer and decide whether we have to move the heads,
C      or just monitor their position.
C 
      ICHOLD = -99
      NREC = 0
      ICLASS = 0
      ICHOLD = -99
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
        IERR = -1 
        GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
      IF (IEQ.EQ.0) GOTO 600
      IF (ICHAR(IBUF,IEQ+1).EQ.77B) GOTO 600
C 
C  2. Step through buffer, getting each parameter and decoding it.
C 
200   ICH = IEQ+1 
      IHD=0 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF(ICHCM(PARM,1,2HB ,1,1).NE.0) GO TO 201 
         IHD=3
         GO TO 220
C 
201   CONTINUE
      IF(ICHCM(PARM,1,2HR ,1,1).NE.0) GO TO 202 
         IHD=2
         GO TO 220
C 
202   CONTINUE
      IF(ICHCM(PARM,1,2HW ,1,1).NE.0) GO TO 203 
         IHD=1
         GO TO 220
C 
203   CONTINUE
      IF (ICHAR(PARM,1).EQ.54B) IHD = 3 
220   CONTINUE
      IF (IHD.GE.1.AND.IHD.LE.3) GOTO 300 
        IERR = -201 
C 
C  3. Now handle head positioning, one head at a time.
C 
300   CONTINUE
      IPSMID = 1
      DO 301 I=1,100
        IF (ITAPOF(I).GT.-4000.AND.ABS(ITAPOF(I)).LT. 
     <  ABS(ITAPOF(IPSMID))) IPSMID=I 
301   CONTINUE
      INDX=6
      KCAL=.TRUE. 
      ICHOLD = ICHK20 
      ICHK20 = 0
302   IHEAD = IHD 
      IHDNDX = INDX 
D     WRITE(LU,9001) IHEAD,IHDNDX 
D9001 FORMAT("IHEAD,IHDNDX IN HEAD = "2I5)
      DO 390 I=1,2
        IPS = IPSMID
        IF(KCAL) GO TO 380
        IPS = IPASHD(I) 
C 
380     CONTINUE
        IF (IHEAD.NE.3.AND.IHEAD.NE.I) GOTO 390 
        CALL HDPOS(I,IPS,IP)  
        IF(IP(3).LT.0) GO TO 999
390   CONTINUE
      IF(.NOT.KCAL) GO TO 500 
      CALL THDCL(IP,IHD,FASTFW,SLOWFW,FASTRV, 
     +                SLOWRV) 
C 
        IF (IP(3).LT.0) GOTO 999
D     WRITE(LU,9003)
D9003 FORMAT("SETTING INDX = 1")
        KCAL=.FALSE.
        GOTO 302
C 
C  5. Here we turn off the LVDT oscillator
C 
500   CONTINUE
      CALL LVDOF(IP)  
      IF(IP(3).LT.0) GO TO 999
C 
C  6. Now we must prepare a response. 
C 
600   IF (ICHOLD.NE.-99) ICHK20 = ICHOLD
      IF (ICHOLD.GE.0) ICHK20 = 1 
      NCH = IEQ 
      IF (NCH.EQ.0) NCH = NCHAR+1 
      NCH = ICHMV(IBUF,NCH,2H/ ,1,1)
C 
      DO 640 I=1,2
        NCH = NCH+IR2AS(FASTFW(I),IBUF,NCH,8,1) 
        NCH = MCOMA(IBUF,NCH) 
C 
        NCH = NCH+IR2AS(SLOWFW(I),IBUF,NCH,8,1) 
        NCH = MCOMA(IBUF,NCH) 
C 
        NCH = NCH+IR2AS(FASTRV(I),IBUF,NCH,8,1) 
        NCH = MCOMA(IBUF,NCH) 
C 
        NCH = NCH+IR2AS(SLOWRV(I),IBUF,NCH,8,1) 
        NCH = MCOMA(IBUF,NCH) 
640     CONTINUE
C 
      NCH = NCH-2 
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
      IERR = 0
C 
C  9. That's all for now. 
C 
990   IP(1) = ICLASS
      IP(2) = NREC
      IP(3) = IERR
      IP(4) = 2HQ>
999   CONTINUE
      RETURN
      END 
