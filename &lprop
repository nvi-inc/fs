FTN4,A
C@LPROP 
C 
        FUNCTION LPROP(NAME,LU,I) 
     .,C#870328:18:45    LD-PRM-RU,OF V=1.0#
C 
C     LPROP 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   LPROP
C               LOAD PARAMETERIZE, RUN AND IF NOT THE MONITOR OFF THE 
C       REQUESTED PROGRAM FOR THE CALLER
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL LPROP(NAME,IP,LU,I) 
C 
C     INPUT VARIABLES:
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION NAME(1) 
C 
C     OUTPUT VARIABLES: 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C 2.2.   COMMON BLOCKS USED 
C 
C 2.3.   DATA BASE ACCESSES 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: SUB1, SUB2, ... (not required for utilities) 
C 
C     CALLED SUBROUTINES: SUB1, SUB2, ... (includes segments scheduled) 
C 
        INTEGER UPPGX 
C 
C 3.  LOCAL VARIABLES 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION IP(5),IRUNN(7)
C 
C       IRUNN   - RUNNING MESSAGE TEXT
C 
C 
C 
C       IRGA    - CONTENTS OF A REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
C       IRGB    - CONTENTS OF B-REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
        DIMENSION IREG(2) 
C 
C       IREG    - DUMMY REGISTER RETREIVAL AID
C 
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
        EQUIVALENCE (IP(2),IP2),(IP(3),IP3),(IP(4),IP4),(IP(5),IP5) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
        DATA IRUNN/2HRU,2HNN,2HIN,2HG:,2H  /
C 
C       IRUNN   - TEXT FOR "RUNNING: "MESSAGE HEADER
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  870328:18:45urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C               6.1  INITIALIZE VARIABLES 
C 
        IERR=0
C 
C               CHECK ID SEGMENT PRESENT
C 
        ILID=IGID(NAME) 
C 
C               LOAD PROGRAM INTO REGION IF NEEDED
C 
        IF(ILID .EQ. 0)IERR=UPPGX(NAME,NAME(4),NAME(5)) 
C 
C               IF AN ERROR SKIP OUT THROUGH ERROR EXIT 
C 
        IF(IERR .LT. 0 .OR. IERR .EQ. 14)GO TO 90000
C 
C               IF PRESENT TELL RUNNING 
C 
        IF(ILID .EQ. 0)GO TO 5000 
C 
C               BUILD FUNNING MESSAGE 
C 
        CALL ICHMV(IRUNN,10,NAME,1,5) 
C 
C               SEND MESSAGE TO USER
C 
        CALL EXEC(2,LU,IRUNN,-14) 
C 
5000    CONTINUE
C 
C               CLEAR PARAMETERS
C 
        CALL IFILL(IP,1,10,0) 
C 
C               CREATE PARAMETERS FOR THIS RUN
C 
        CALL IGPRM(IP,NAME(6),NAME(11),LU)
C 
C               NOW RUN IT WITH THESE PARAMETERS
C 
        CALL EXEC(23,NAME,IP,IP2,IP3,IP4,IP5) 
C 
C               OFF PROGRAM IF NOT ORIGINALLY PRESENT OR
C               STATUS IS NON-ZERO
C 
C               GET PROGRAM STATUS
C 
        ISTAT=IPGST(NAME) 
C 
        IF(ILID .EQ. 0 .AND. ISTAT .EQ. 0)
     .CALL IOF(NAME,IERR,LU)  
C 
C               IF ERROR USE ERROR EXIT 
C 
        IF(IERR .LT. 0)GO TO 90000
C 
C               SET RETURN ERROR FREE AND RETURN TO CALLER
C 
        LPROP=0 
C 
        GO TO 99999 
C 
90000   CONTINUE
C 
C               SET ERROR RETURN AND EXIT NOW 
C 
        LPROP=IERR
C 
C 
99999   CONTINUE
C 
        RETURN
        END 
        END$
