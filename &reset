FTN4,X
C@RESET 
C 
      SUBROUTINE RESET(IP),MAT RESET C#870115:04:41#
C 
C 1.1.   RESET resets the MAT interface 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # RECORDS
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C 
C     CALLED SUBROUTINES: GTPRM,ICHAR 
C 
C 3.  LOCAL VARIABLES 
C 
C        NCHAR  - number of characters in buffer
C        ICH    - character counter 
      DIMENSION IBUF(20)
C               - class buffer
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      DIMENSION IRATE(7),IRIND(7) 
C               - baud rate selections, and DVB00 indices corresponding 
C     IB - selected baud rate, in bits
C     IBIND - selected baud rate, DVB00 index 
C 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/40/ 
      DATA NRATES/7/
      DATA IRATE/110,300,600,1200,2400,4800,9600/ 
      DATA IRIND/3,6,7,9,11,13,15/
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED:  800316
C# LAST COMPC'ED  870115:04:41 #
C 
C     PROGRAM STRUCTURE 
C 
C     1. If we have a class buffer, then we are to set the baud rate. 
C     If no class buffer, this is an error. 
C 
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
100   IERR = -1 
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = IREG(2) 
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
C                   Scan for "="
      IF (IEQ.EQ.0) GOTO 100
C                   If no parameters, ERROR 
      IF (IEQ.NE.NCHAR.AND.ICHAR(IBUF,IEQ+1).EQ.77B) GOTO 500 
C 
C 
C     2. Step through buffer getting each parameter and decoding it.
C     Command from user has these parameters: 
C                   RESET=<baud>
C 
210   ICH = 1+IEQ 
      CALL GTPRM(IBUF,ICH,NCHAR,1,PARM) 
      IF (ICHAR(PARM,1).NE.52B.AND.ICHAR(PARM,1).NE.54B) GOTO 211 
      IF (ICHAR(PARM,1).EQ.52B) IB = IBMAT
      IF (ICHAR(PARM,1).EQ.54B) IB = 2400 
C                   Default is 2400 baud
      GOTO 300
211   DO 215 I=1,NRATES 
        IF (IPARM(1).EQ.IRATE(I)) GOTO 216
C                   Check for legal speed request 
215     CONTINUE
      IERR = -201 
      GOTO 990
216   IBMAT = IRATE(I)
      IBIND = IRIND(I)
C 
C 
C     3. These values have been planted in COMMON.  Reset MAT interface.
C 
300   CALL EXEC(3,3000B+LUMAT)
C                   Reset the interface line
      CALL EXEC(3,2100B+LUMAT)
C                   Disable this LU as a terminal 
      CALL EXEC(3,3200B+LUMAT,16B)
C                   Set up even parity
      CALL EXEC(3,3300B+LUMAT,1)
C                   Change to *50* baud 
      IBUF(1) = 5 
C                   Mode 5: This is a direct message to the MATs
      IBUF(2) = 0 
C                   Send a null, which comes through as BREAK 
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-3,2HFS,0,ICLASS) 
      CALL EXEC(23,6HMATCN ,ICLASS,1) 
      CALL RMPAR(IP)
C 
C 
      CALL EXEC(3,3300B+LUMAT,IBIND)
C                   Change baud rate to our requested value 
      IF (IBMAT.EQ.110.OR.IBMAT.EQ.9600.OR.IBMAT.EQ.4800) 
     .   CALL EXEC(3,3200B+LUMAT,56B) 
C                   For 110 and 9600 use two stop bits 
C                   AND FOR 4800 ???? 
      ICLASS = 0
      IBUF(1) = 5 
      CALL IFILL(IBUF(2),1,38,2HUU) 
C                   Fill up the buffer with UUUUUUUUUUU's 
C                   Send string of U's to synch up
      CALL EXEC(20,0,IBUF,-40,2HFS,0,ICLASS)  
      CALL EXEC(23,6HMATCN ,ICLASS,1) 
      CALL RMPAR(IP)
      RETURN
C 
C 
C     5. Return current baud rate setting.
C 
500   NCH = ICHMV(IBUF,IEQ,2H/ ,1,1)
      NCH = NCH + IB2AS(IBMAT,IBUF,NCH,100000B+4) -1
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
      IP(1) = ICLASS
      IP(2) = 1 
      IP(3) = 0 
      IP(4) = 2HQM
      RETURN
C 
C 
990   IP(1) = 0 
      IP(2) = 0 
      IP(3) = IERR
      IP(4) = 2HQM
      RETURN
      END 
