FTN77,I,Y  
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@LXSUM
C
      SUBROUTINE LXSUM
c
c         SUMMARY COMMAND C#870115:05:32#
C
C LXSUM - The SUMMARY command produces a one line listing for each
C         observation consisting of the start time & footage count,
C         the tape number, stop time & footage count, ONSOURCE status,
C         & whether any serious CHEKR errors were encountered.
C
C MODIFICATIONS:
C
C    DATE     WHO  DESCRIPTION
C    820326   KNM  SUBROUTINE CREATED
C
C    820416   KNM  THE SUMMARY COMMAND HAS THE CAPABILITY TO BE WRITTEN
C                  INTO AN OUTPUT FILE IF A FILE NAME WAS SPECIFIED IN
C                  THE OUTPUT COMMAND.
C
C    820513   KNM  A NEW SUMMARY COMMAND WAS IMPLEMENTED.  THIS COMMAND
C                  READS THE $SKED SECTION OF A SCHEDULE FILE & MAKES
C                  SURE THAT EVERY OBSERVATION APPEARS IN THE LOG.  IF
C                  AN OBSERVATION IS MISSING FROM THE LOG, THEN LOGEX
C                  OUTPUTS A SUMMARY LINE THAT INDICATES THAT ALL THE
C                  INFORMATION IS MISSING.
C
C    820607   CAK  LXSUM HAS BEEN CHANGED FROM A SUBROUTINE TO A
C                  SEGMENT PROGRAM OF LOGEX. ALL CALLING ARGUMENTS
C                  HAVE BEEN PLACED INTO COMMON.
C
C    820818   KNM  ALL SUMMARY OUTPUT IS WRITTEN OUT BY CALLING LXWRT.
c
c    871130   LEF  Changed back to subroutine and added CDS.
C
C INPUT VARIABLES:
C
C OUTPUT VARIABLES:
C
      DIMENSION LNEWSO(4)
C       - Contains the new source name.
C
C
C COMMON BLOCKS USED:
C
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
      INCLUDE LXCOM.FTNI
C
C DATA BASE ACCESSES:
C
C EXTERNAL INPUT/OUTPUT:
C
C SUBROUTINE INTERFACES:
C
C    CALLING SUBROUTINES:
C
C      LOGEX - Main program.
C
C    CALLED SUBROUTINES:
C
C      File manager package routines.
C      LNFCH utilities.
C      LXOPN - Open file.
C      REDSK - Read the schedule file until the $SKED section is
C              reached.
C      READT - Get next observation from $SKED section.
C      READL - Get SUMMARY data from next observation from log file.
C      LXSCM - Compare schedule & log file sources & start times.
C      LXWRT - Writes out LOGEX data.
C
C LOCAL VARIABLES:
C
      LOGICAL KMATCH
C        - A flag that indicates whether we have a matching schedule &
C          log observation.
C
      LOGICAL KHUH
C      - true if the log run-id is screwy
C
      DIMENSION IBUFSK(80)
C        - Buffer for schedule file.
C
      DIMENSION IREG(2),IPARM(2),IVAL(2)
C        - Registers for reading; parameters from GTPRM
C        - REG, PARM - two word variables equiv
C
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)),(VALUE,IVAL(1))
C
      DIMENSION LSN(4)
C        - Contains the schedule source name.
C
      DIMENSION LSUM(25), LRUN(39)
      INTEGER STAR(2)
      DATA LSUM/48,'*SUMMARY OF                  FOR                '/
      DATA LRUN/75,'*RUN-ID    SOURCE    TAPE #  FEET     START       ',
     .'STOP      FEET  STATUS  '/
      DATA STAR/1,'*'/
C
C INITIALIZED VARIABLES:
C
      DATA ISKBW/80/
      DATA LNEWSN/2H$$/
      DATA NSUM/78/
C
C
C  **************************************************************
C
C  1. Initialize SUMMARY variables.
C
C  **************************************************************
C
C
      CALL IFILL(LSOURN,1,8,2H  )
      CALL IFILL(LNEWSO,1,8,2H  )
      CALL IFILL(LSFT,1,5,2H  )
      CALL IFILL(LEFT,1,5,2H  )
      CALL IFILL(LSOUON,1,8,2H  )
      CALL IFILL(LTAPEN,1,8,2H  )
      CALL IFILL(LTAPEN,3,1,55B)
      CALL IFILL(LSN,1,8,2H  )
      CALL IFILL(IBUFSK,1,160,40B)
      CALL IFILL(JBUF,1,100,40B)
      IF(IKEY.EQ.12) ID = FmpRewind(IDCBSK,IERR)
      KMATCH=.TRUE.
      KHUH=.FALSE.
      LNEWSN=2H$$
      IOUT=0
      ILEN=0
C
C
C ***********************************************************
C
C 2. Check to see if the SKED SUMMARY has been specified.
C    If so, read down to $SKED section.
C
C ***********************************************************
C
C
      ILC = IFLCH(LOGNA,20)
      IC = ISCNC(LOGNA,1,ILC,56B)-1
      IF (IC.LT.0) IC = ILC
      LCH=JCHAR(LOGNA,IC)
      LSTID=LCH*400B+40B
      IF(IKEY.EQ.9) GOTO 200
      CALL REDSK(IBUFSK,ISKBW)
      IF(ICODE.EQ.-1) GOTO 600
C
C
C *********************************************************************
C
C 3. Write out the SUMMARY headers. Obtain the source, run id, start
C    time, station id, etc. that the station participates in by
C    reading the schedule file.
C
C *********************************************************************
C
C
200   CALL ICHMV(LSUM(2),13,LOGNA,1,16)
      CALL ICHMV(LSUM(2),34,LSTATN,1,8)
      CALL LXWRT(LSUM(2),LSUM(1))
      CALL LXWRT(STAR(2),STAR(1))
      CALL LXWRT(LRUN(2),LRUN(1))
      CALL LXWRT(STAR(2),STAR(1))
      L6=1H
300   IF(IKEY.EQ.9) GOTO 400
C
C     Get next schedule entry
C
      CALL READT(IBUFSK,ISKBW,LSTID,LSN,IYR,IDAYR,IHR,MIN,ISC,IDUR,NSTN)
      IF(ICODE.EQ.-1) GOTO 600
C
C
C ****************************************************************
C
C 4. Get the SUMMARY data for the next observation from the log.
C
C ****************************************************************
C
C
      IF(ILEN.EQ.-1) GOTO 420
400   IF(KMATCH) 410,420
410   CALL READL(LNEWSO,LNEWSN,LSTID)
      IF(ICODE.EQ.-1.OR.LSTEND.EQ.-1) GOTO 600
      IF(IKEY.EQ.9) GOTO 430
420   CALL LXSCM(LSN,IDAYR,IHR,MIN,ISC,IDUR,KMATCH,KHUH)
      IF (KHUH.AND.ILEN.NE.-1) GOTO 410
C
C
C ***************************************************************
C
C 5. Here the SUMMARY output is written. Check to see if the
C    observation was missing.  If it was missing fill in
C    the variables to indicate a missing schedule observation
C    from the log.
C
C ***************************************************************
C
C
430   CALL IFILL(JBUF,1,100,40B)
      IF(IKEY.NE.12) GOTO 500
      CALL IB2AS(IDAYR,JBUF,1,40000B+400B*2+3)
      CALL IFILL(JBUF,4,1,55B)
      CALL IB2AS(IHR,JBUF,5,40000B+400B+2)
      CALL IB2AS(MIN,JBUF,7,40000B+400B+2)
      GOTO 510
500   IF(ITCNTL.EQ.-1) GOTO 505
      CALL IB2AS(ILRDAY,JBUF,1,40000B+400B*2+3)
      CALL IFILL(JBUF,4,1,55B)
      CALL IB2AS(ILRHRS,JBUF,5,40000B+400B+2)
      CALL IB2AS(ILRMIN,JBUF,7,40000B+400B+2)
      GOTO 510
505   CALL IFILL(JBUF,4,1,55B)
510   IF(KMATCH) 520,530
520   CALL ICHMV(JBUF,11,LSOURN,1,8)
      CALL ICHMV(JBUF,21,LTAPEN,1,8)
      CALL IB2AS(LSFT,JBUF,30,40000B+400B*5+5)
      IF(ISLD.NE.0) GOTO 521
      CALL IFILL(JBUF,41,1,55B)
      GOTO 522
521   CALL IB2AS(ISLD,JBUF,36,40000B+400B+3)
      CALL IFILL(JBUF,39,1,55B)
      CALL IB2AS(ISLHR,JBUF,40,40000B+400B+2)
      CALL IFILL(JBUF,42,1,72B)
      CALL IB2AS(ISLMIN,JBUF,43,40000B+400B+2)
      CALL IFILL(JBUF,45,1,72B)
      CALL IB2AS(ISLSEC,JBUF,46,40000B+400B+2)
522   IF(IELD.NE.0) GOTO 523
      CALL IFILL(JBUF,53,1,55B)
      GOTO 524
523   CALL IB2AS(IELHR,JBUF,50,40000B+400B+2)
      CALL IFILL(JBUF,52,1,72B)
      CALL IB2AS(IELMIN,JBUF,53,40000B+400B+2)
      CALL IFILL(JBUF,55,1,72B)
      CALL IB2AS(IELSEC,JBUF,56,40000B+400B+2)
524   CALL IB2AS(LEFT,JBUF,59,40000B+400B*5+5)
      CALL ICHMV(JBUF,65,LSTAT,1,6)
      GOTO 540
530   CALL IFILL(JBUF,23,1,55B)
      CALL ICHMV(JBUF,11,LSN,1,8)
      CALL IFILL(JBUF,31,1,55B)
      CALL IFILL(JBUF,41,1,55B)
      CALL IFILL(JBUF,52,1,55B)
      CALL IFILL(JBUF,59,1,55B)
      CALL IFILL(JBUF,66,1,55B)
540   CALL LXWRT(JBUF,NSUM)
      NLOUT=NLOUT+1
      IF(IKEY.EQ.9.AND.ILEN.EQ.-1) GOTO 600
      IF(IKEY.NE.12) GOTO 300
      IF(ILEN.GE.0) GOTO 300
      ILRDAY=999
      ILRHRS=99
      ILRMIN=99
      GOTO 300
C
C
C *****************************************************************
C
C 6. Return to LOGEX.
C
C *****************************************************************
C
C
600   ILXGET=0
      RETURN
      END
