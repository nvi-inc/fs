FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@LOGEX 
C 
      PROGRAM LOGEX(3),EXAMINE FIELD SYSTEM LOGS C#870115:05:32#
C 
C  LOGEX - A PROGRAM TO EXAMINE THE FIELD SYSTEM LOGS 
C 
C  MODIFICATIONS: 
C 
C     DATE     WHO  DESCRIPTION 
C     800910   KNM  SUMMARY AND STRING COMMAND ADDED
C 
C     810204   KNM  LOGEX WAS DIVIDED UP INTO A MAIN PROGRAM LOGEX, 
C                   PRCCM, AND MCOM.
C 
C     810724   KNM  SUMMARY COMMAND WAS MODIFIED. THE COMMAND NOW 
C                   CONSISTS OF THE SOURCE NAME, START, & STOP TIME 
C                   OF THE OBSERVATION, AND THE TAPE NUMBER.  A 
C                   HEADER LABEL WAS ADDED TO THE SUMMARY COMMAND 
C                   WHICH INDICATES THE LOG NAME AND STATION.  A
C                   HEADER LABEL WAS ADDED WHICH GIVES THE LOG NAME 
C                   AND STATION WHEN A SUCCESSFUL OPEN IS PERFORMED 
C                   ON THE LOG FILE.  SUBROUTINE LXDAY WAS CREATED TO 
C                   TO DETERMINE WHETHER THE LOG DAY HAS CHANGED. 
C                   IF THE LOG DAY HAS CHANGED, A HEADER LABEL IS 
C                   WRITTEN INDICATING THIS.
C 
C     810803   KNM  TYPE COMMAND WAS ADDED TO PRCCM.
C 
C     810810   KNM  THE <COMMAND>=? WAS CHANGED TO <COMMAND>
C 
C     811001   KLI  Add non-interactive mode for SUMMARY command
C                   The correct schedule sequence is :
C                   RU,LOGEX,<user LU>,<output LU>,<2-char log namr>, 
C                            <cart>,<output namr>,<cart>,<SU>,<1-char 
C                            station code>
C 
C     820114   KNM  The non-interactive mode for the SUMMARY command
C                   was further modified.  The Goddard SUMMARY version
C                   utilizes the output file.  The list of CHEKR errors 
C                   was appended to the Goddard SUMMARY.  The day of
C                   log is pick up in the start & stop times of each
C                   observation.  Subroutine LXDAY is no longer 
C                   required.  The Haystack SUMMARY version remains 
C                   intact.  The correct schedule sequence is:
C                   RU,LOGEX,<user LU>,<output LU>,<2-char log namr>, 
C                            <cart>,<output namr>,<cart>,<SU or SH>,
C                            <1-char station code>
C 
C                            SU - Goddard SUMMARY version 
C                            SH - Haystack SUMMARY version
C 
C     820405   KNM  The main program LOGEX was divided up into
C                   subroutines.  The functions that the main program 
C                   performed previously are now done by LXOPN, LXTIM,
C                   LXGET, & LXIST, LXSUM, & LXPLT. The non-interactive 
C                   mode correct schedule sequence is:
C 
C                   RU,LOGEX,<user LU>,<output LU>,<2-char log namr>, 
C                            <log cart>,<SU>,<output file name> 
C 
C                   SU - SUMMARY Command
C 
C                   A test was added to determine whether the Field 
C                   System was running. 
C 
C     820416   KNM  The OUTPUT command replaced the LU commmand.  The 
C                   user may specify any logical unit for the output
C                   to be displayed or an output file name in the form
C                   of <Name>:<secu. code>:<cartridge>
C 
C     820513   KNM  The SCHEDULE SUMMARY command was implemented. This
C                   command reads the $SKED section of a schedule file
C                   & makes sure that every observation appears in the
C                   log. If an observation is missing from the log, 
C                   then LOGEX outputs a SUMMARY line that indicates
C                   that condition. 
C 
C     820607   CAK  The recent modifications to LOGEX have significantly
C                   increased its size. Consequently, LOGEX has been
C                   divided into 4 segments. All calling arguments have 
C                   been put into common. 
C 
C     820909   KNM  LOGEX run string has been changed to the following:
C
C                   RU,LOGEX,<user LU>,<command file namr>
C
C                   Subroutine LXCMD has been added to handle the read-
C                   ing of the command file.  A command file may be used
C                   non-interactively or interactively by using the
C                   CFILE command.
C
C     901228   GAG  Changed IPGST call to KBOSS call to see if BOSS
C                   is running.
C
C  RESTRICTIONS: Only capable of reading and plotting log entries
C                generated within the Field System.
C
C  REFERENCES: LOGEX: Examining the Logs/Mark III Field System
C                     Documentation
C
C  INPUT VARIABLES:
C
      DIMENSION IRBUF(33)
C     - IRBUF - parse string from run command sequence
C
C
C  OUTPUT VARIABLES:
C
C  COMMON BLOCKS USED:
C
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
C     FROM:
C        ICRLOG   - cartridge for log file
C        LLOG     - last two characters of the log name.
C
      INCLUDE LXCOM.FTNI
C
C
C  DATA BASE ACESSES:
C
C     None
C
C  EXTERNAL INPUT/OUTPUT:
C
C     INPUT VARIABLES:
C 
C     TERMINAL   - IBUF 
C 
C  OUTPUT VARIABLES:
C 
C     TERMINAL   - LINE 
C 
C  SUBROUTINE INTERFACE:
C 
C     CALLED SUBROUTINES & SEGMENTS:
C 
C     File manager package routines 
C     LNFCH routines
C     GETST - Gets a RUN string.
C     PARSE - Allows a program to parse a string into separate
C             parameters. 
C     LXOPN - Open log file.
C     LXCMD - Reads command file.
C     IGTCM - returns command number after checking name in IBUF.
C     LXTIM - Decode specified times.
C     LXIST - LIST command.
C     LXPLT - PLOT command.
C     LXSUM - SUMMARY command.
C     LXPRC - Handles the static commands for LOGEX.
C     LXWRT - Writes out LOGEX data.
C
C
C  LOCAL VARIABLES:
C
      INTEGER*2 fblnk
      LOGICAL KBOSS
      DIMENSION IREG(2),IPARM(2),IVAL(2)
C        - Registers for reading; parameters from GTPRM
C        - REG, PARM - two word variables equiv
C
      EQUIVALENCE (REG,IREG(1)), (PARM,IPARM(1)), (VALUE,IVAL(1))
C
C
C            Command Name       IKEY Number
C
C               OUTPUT              1
C               COMMAND             2
C                 LOG               3
C                LIST               4
C                HELP               5
C               TPLOT               6
C                PARM               7
C                SCALE              8
C               SUMMARY             9
C               STRING             10 
C                TYPE              11 
C              SKSUMMARY           12 
C                PLOT              13 
C                SKED              14 
C               CFILE              15 
C                SIZE              16 
C 
C  INITIALIZED VARIABLES: 
C 
C 
C  **************************************************************** 
C 
C  1. Get the Run string and test for interactive/non-interactive 
C     mode. 
C 
C  **************************************************************** 
C 
C 
      ASSIGN 8004 TO IRTN4
      ASSIGN 8005 TO IRTN5
      ASSIGN 8006 TO IRTN6
C 
C
      LUUSR=LUOPR(IDUM)
      CALL LIBER(LUUSR)
      LUDSP=LUUSR
      CALL GETST(IBUF,-40,ICON)
      CALL PARSE(IBUF,ICON,IRBUF)
C
C If only one parameter was specified, we are in interactive mode.
C
      IF(IRBUF(1).EQ.0.OR.IRBUF(1).EQ.1) GOTO 25
      WRITE(LUUSR,9000)
9000  FORMAT(/,"RUN STRING IS: RU,LOGEX,<user LU>,<Command file namr>"/)
      GOTO 500
25    IF(IRBUF(33).EQ.1.or.irbuf(33).eq.0) GOTO 75
C
C Obtain the command file namr.
C
      NINTV=1
      ISTART=1
      NCH=ISCNC(IBUF,ISTART,ICON,54B)
      ISTART=NCH+1
      ID = ICHMV(NAMCM,1,IBUF,ISTART,ICON-ISTART+1)
50    CALL FmpOpen(IDCBCM,IERR,NAMCMC(1:ICON-ISTART+1),'ros',1)
      IF(IERR.GE.0) GOTO 75
      WRITE(LUUSR,9200) IERR,(NAMCM(I),I=1,10)
9200  FORMAT("LOGEX20 - FMGR Error"I5" opening command file "10A2)
      GOTO 100
C
C Check to see if the Field System is running.
C
75    IF(.NOT.KBOSS()) GOTO 90
      LOGNC=LLOG
      CALL LXOPN
90    CONTINUE
      IF(NINTV.EQ.1) GOTO 150
C
C  ****************************************************************
C
C  2. If we are in the interactive mode, issue the prompt to get a
C     command from the user. This is the return point after the
C     execution of a command in the interactive mode.
C
C  ****************************************************************
C
C
100   CALL EXEC(2,LUUSR,2H?_,-2)
      NINTV=0
      ICMD=0
      ICODE=0
      LSTEND=0
      CALL FmpClose(IDCBCM,IERR)
      CALL IFILL(IBUF,1,IBLEN*2,40B)
      REG = EXEC(1,400B+LUUSR,IBUF,-IBLEN*2)
      NCHAR = IREG(2)
      IF (NCHAR.EQ.0) GOTO 100
      CALL UPPER(IBUF,1,NCHAR)
      nchar=FBLNK(IBUF,1,NCHAR)
C
C LOGEX is terminated if an EX or :: is typed
C
      IF (IBUF.EQ.2HEX.OR.IBUF.EQ.2H::) GOTO 500
C
C
C  ****************************************************************
C
C  3. Read the command file if we are in non-interactive mode or
C     the CFILE command was issued. This is the return point
C     after the execution of command file entry.
C 
C  **************************************************************** 
C 
C 
150   IF(NINTV.EQ.1.OR.ICMD.EQ.1) CALL LXCMD
      IF(NINTV.EQ.1.AND.IL.LT.0) GOTO 500 
      IF(ICMD.EQ.1.AND.IL.LT.0) GOTO 100
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
      IF (IEQ.EQ.0) IEQ = NCHAR+1 
C 
C 
C  **************************************************************** 
C 
C  4. Call IGTCM to return command number and store it into IKEY
C 
C  **************************************************************** 
C 
C 
      IKEY = IGTCM(1,IEQ-1) 
      IF(IKEY.GT.0) GOTO 200
      IF(IKEY.EQ.0) WRITE(LUUSR,9300) 
9300  FORMAT("LOGEX30 - Unrecognized Command")
      IF(IKEY.EQ.-1) WRITE(LUUSR,9400)
9400  FORMAT("LOGEX40 - Ambiguous Command") 
      GOTO 100
C 
C 
C  **************************************************************** 
C 
C  5. LOGEX tests the IKEY number to determine whether it is an 
C     active or static command.  The active commands are the LIST,
C     PLOT, and SUMMARY commands.  The remaining commands are 
C     considered static commands. 
C 
C  **************************************************************** 
C 
C 
200   GOTO(300,300,300,210,300,210,300,300,210,300,300,210,210,300,300, 
     .300),IKEY 
210   CALL LXTIM
      IF(ICODE.EQ.-1) GOTO 100
220   GOTO(100,100,100,230,100,250,100,100,260,100,100,260,250,100),IKEY
230   CALL LXIST
      GO TO 270 
C 
C Call LXPLT segment for PLOT or TPLOT command
C 
250   CALL LXPLT
8004  CONTINUE
      GO TO 270 
C 
C Call LXSUM segment for SKSUMMARY or SUMMARY Command 
C 
260   CALL LXSUM
8005  CONTINUE
270   IF(LSTEND.NE.-1) GOTO 280 
      WRITE(LUUSR,9500) 
9500  FORMAT(" *END OF LISTING")
280   IF(ICMD.EQ.1.OR.NINTV.EQ.1) GOTO 150
      IF(ILEN.GE.0.OR.ICODE.EQ.-1.OR.LSTEND.EQ.-1) GOTO 100 
      WRITE(LUUSR,9600) LOGNA 
9600  FORMAT(" *LOGEX50 - End of log file "10A2) 
      GOTO 100
C 
C Call LXPRC for static processing commands.
C 
300   CALL LXPRC
8006  CONTINUE
      IF(ICMD.EQ.1.OR.NINTV.EQ.1) GOTO 150
      GOTO 100
C
C
C  ****************************************************************
C
C  6. Close all files. Off all segments.
C
C  *****************************************************************
C
C
500   CALL FmpClose(IDCB,IERR)
      CALL FmpClose(JDCB,IERR)
      CALL FmpClose(IDCBSK,IERR)
      CALL FmpClose(IDCBCM,IERR)
      WRITE(LUUSR,9999)
9999  FORMAT("LOGEX DONE")
      END
