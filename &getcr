FTN4,X
C@GETCR 
C 
      FUNCTION GETCR(IX,IY,ISDLU),C#870115:05:50 GET CURSOR  V=1.2  # 
C 
C     GETCR 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1   GETCR           THIS ROUTINE GETS THE POSITION OF THE CURSOR
C               ON THE SCREEN AND RETURNS BOTH THE ABSOLUTE AND RELATIVE
C               POSITION TO THE USER. 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C       1. 2645 A DISPLAY STATION REFERENCE MANUAL #02645-90005 
C       2. RTE DRIVER DVR05 FOR HP 264X TERMINALS  #92001-90015 
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: REG=GETCR(IX,IY,LU)
C 
C     INPUT VARIABLES:
C 
C     INCLUDE "ISDLU::FS
C 
C     OUTPUT VARIABLES: 
C 
C       GETCR   - THE SCREEN RELATIVE X, SCREEN RELATIVE Y ARE GIVEN AS 
C                 THE VALUE FOR GETCR AND MUST BE UNPACKED USING THE SAME 
C                 TECHNIQUE AS FOR EXEC CALLS 
C 
C       IX      - THE MEMORY ABSOLUTE X POSITION FROM LEFT SIDE OF SCREEN 
C                 (A POSITIVE NUMBER) 
C 
C       IY      - THE MEMORY ABSOLUTE Y POSITION FROM UPPER PART OF DISPLAY 
C                 MEMORY(A POSITIVE NUMBER)  **NOTE** THE BEGINNING OF
C                 DISPLAY MEMORY MAY NOT BE ZERO FOR THIS COORDINATE SYSTEM.
C 2.5.   SUBROUTINE INTERFACE:
C 
C       THIS IS A UTILITY ROUTINE 
C 
C     CALLED SUBROUTINES: EXEC(1, EXEC(2, IAS2B 
C 
C 3.  LOCAL VARIABLES 
C 
C       REG     - USED TO CONSTRUCT RELATIVE COORDINATES FOR RETURN TO
C                 USER
C 
C 
C       IRGA    - IX SCREEN RELATIVE TO BE RETURNED TO USED IN REG
C 
C       IRGB    - IY SCREEN RELATIVE TO BE RETURNED TO USER IN REG
C 
C       IRDL    - THE LENGTH OF THE READ STRING FOR CHARACTER POSITION
C                 COORDINATES 
C 
        DIMENSION IREG(2),ICNTR(7)
C 
C       ICNTR   - INTERNAL BUFFER TO RECEIVE CURSOR INFORMATION FROM DEVICE 
C 
C       IREG    - USED TO EQUIVALENCE IRGA & IRGB TO REG ONLY 
C 
      EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 4.  CONSTANTS USED
C 
        DIMENSION ISEN(2),IRSEN(2)
C 
        DATA ISEN/15541B,57400B/
C 
C       ISEN    - SETS DEVICE TO SEND ABSOLUTE MEMORY COORDINATES OF CURSORS
C                 PRESENT POSITION  (ESC a _  ) 
C               SEE REF 1. PG. 3-2 CURSOR SENSING FOR ESC a 
C               SEE REF 2. PG. 2-4 FOR _ CHARACTER EXPLAINATION 
C 
        DATA IRSEN/15540B,57440B/ 
C 
C       IRSEN   - SETS DEVICE TO SEND SCREEN RELATIVE COORDINATES OF CURSORS
C                 CURRENT POSITION  ( ESC ` _   ) 
C               SEE REF 1. PG. 3-2 CURSOR SENSING FOR ESC ` 
C               SEE REF. 2. PG 2-4 FOR - CHARACTER EXPLAINATION 
C 
C 5.  INITIALIZED VARIABLES 
C 
C       NONE
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  870115:05:50urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C       6.1     INITIALIZE THE PARAMETERS 
C 
        LU=IAND(ISDLU,77B)
C 
C               GET THE TERMINAL TYPE 
C 
        ITYP=IAND(ISDLU/10000B,3) 
C 
C               SET UP READ STRING LENGTH AND CHECK FOR SPECIAL MODES 
C 
        IRDL=-12
C 
        IF(IAND(ISDLU,4000B) .NE. 0)IRDL=IRDL-1 
C 
C               DISABLE ENABLED TERMINAL TO AVOID CONFLICTS 
C 
        CALL EXEC(13,LU,IEQT5)
C 
C               IF ENABLED - DIABLE FOR CURSOR SENSING
C 
        IEQT5=IAND(IEQT5,2) 
C 
        IF(IEQT5 .NE. 0)CALL EXEC(3,2100B+LU) 
C 
C       6.1     SET FOR ABSOLUTE READ AND GET POSITION
C 
1000    CONTINUE
C 
C       SET TERMINAL TO REPORT CURSOR COORDINATES 
C 
        REG=EXEC(2,LU,ISEN,-3)
C 
C       GET THE RESPONSE TO THE ABOVE REQUEST WITHOUT MOVING CORSOR 
C 
        REG=EXEC(1,LU+2100B,ICNTR,IRDL,600) 
C 
C               IF TIME-OUT LOOP COMMAND SEQUENCE 
C 
        IF(IAND(IRGA,10B) .NE. 0)GO TO 1000 
C 
C               CHECK LAST CHARACTER IN BUFFER FOR CORRECT TRANS
C 
        IF(ICHAR(ICNTR,11) .NE. 122B)GO TO 1000 
C 
C               GET THE INTEGER VALUE OF THE POSITION OF THE CURSOR 
C 
        IX=IAS2B(ICNTR,4,3) 
        IY=IAS2B(ICNTR,8,3) 
C 
2000    CONTINUE
C 
C               IF TOLD 2640 PRESENT DO NOT TRY RELATIVE
C               (IT WILL NOT WORK - THAT'S WHY) 
C 
        IF(ITYP .EQ. 1) GO TO 7000
C 
C       SET THE TERMINAL TO GET RELATIVE COORDINATES
C 
        CALL EXEC(2,LU,IRSEN,-3)
C 
C       READ RESPONSE TO ABOVE REQUEST AND DO NOT MOVE THE CURSOR 
C 
        CALL EXEC(1,LU+2100B,ICNTR,IRDL,600)
C 
C               IF TIME-OUT REPEAT SEQUENCE 
C 
        IF(IAND(IRGA,10B) .NE. 0)GO TO 2000 
C 
C               CHECK LAST CHARACTER FOR VALID TRANSMISSION 
C 
        IF(ICHAR(ICNTR,11) .NE. 131B)GO TO 2000 
C 
C               GET THE INTEGER POSITION OF THE CURSOR
C 
        IRGA=IAS2B(ICNTR,4,3) 
        IRGB=IAS2B(ICNTR,8,3) 
C 
C               NOW DO EXIT THINGS
C 
        GO TO 9000
C 
7000    CONTINUE
C 
C               RETURN INVALID VALUES FOR THIS DATA 
C 
        IRGA=-1 
        IRGB=-1 
C 
9000    CONTINUE
C 
C               RE-ENABLE IF IT WAS DISABLED
C 
        IF(IEQT5 .NE. 0)CALL EXEC(3,2000B+LU) 
C 
C               SET THE RETURN VALUE OF THE FUNCTION
C 
        GETCR=REG 
C 
C               RETURN TO THE USER
C 
        RETURN
        END 
        END$
