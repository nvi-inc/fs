FTN4,X
C@RUOPR 
C 
        SUBROUTINE RUOPR(NAMEC,IP,NAMUS,MCNTL,NCNTL,IBUFF,NAMEI)
     .,C#870115:04:07    RUN OPRIN V=2.0# 
C 
C     RUOPR 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   RUOPR
C               THIS ROUTINE PROVIDES THE MAIN INTERFACE TO THE 
C       FIELD SYSTEM FOR THE USER AT THE TERMINAL.
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL RUOPR(NAMEC,IP,NAMUS,MCNTL,NCNTL,IBUFF) 
C 
C     INPUT VARIABLES:
C 
        DIMENSION NAMEC(32,1),IP(1),IBUFF(1),NCNTL(1),NAMEI(14,1) 
C 
C       IBUFF   - BUFFER FOR INTERNAL USE 
C 
C       NAMEC   - THE LIST OF CONTROLLED PROGRAMS READ IN BY INOPR
C                 SEE OPRIN FOR DETAILS OF ARRAY INFORMATION AND
C                 USE.
C 
C       IP      - OPERATOR INPUT PARAMETERS ON INITIALIZATION AND 
C                 FROM RESTARTS OF OPRIN WHILE IN THIS MODULE 
C 
        DIMENSION MCNTL(1),NAMUS(1) 
C 
C       NAMUS   - OUR NAME FROM IDSEG FOR TIME SCHEDULING WITHOUT SUSPENDING
C 
C       MCNTL   - CONTROL ACTIVATION BRANCH ARRAY 
C 
C       NCNTL(1)        - NUMBER OF ENTRIES IN MCNTL THAT HAVE BEEN USED
C       NCNTL(2)        - NUMBER OF INTERNAL ENTRIES USED 
C 
C       NAMEI   - INPUT LIST OF FIELD SYSTEM PROGRAMS FOR OPERATIONS
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C     OUTPUT VARIABLES: 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
        LOGICAL KCHECK
C 
C 2.3.   DATA BASE ACCESSES 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: SUB1, SUB2, ... (not required for utilities) 
C 
C     CALLED SUBROUTINES: SUB1, SUB2, ... (includes segments scheduled) 
C 
        INTEGER EQLU,UPPGX
C 
C 3.  LOCAL VARIABLES 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        LOGICAL LMON,LSUSP
C 
        DIMENSION INAML(11) 
C 
C       INAML   - INTERNAL NAMES DUMMY FOR PARSING
C 
        DIMENSION IREG(2) 
C 
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C       REG     - DUMMY REAL VARIABLE FOR DOUBLE INTEGER RETURN FROM REAL 
C                 FUNCTIONS 
C 
C       IREG    - INTEMEDIARY USED TO SORT DOUBLE INTEGERS INTO SEPERATE
C                 VARIABLES FOR USE IN PROGRAM
C 
C       IRGA    - FIRST INTEGER EXTRACTED FROM REG RETURNED BY REAL FUNCTION
C 
C       IRGB    - SECOND INTEGER EXTRACTED FROM REG ... 
C 
C 
C 4.  CONSTANTS USED
C 
        DATA IPRMT/2H> /
C 
C       IPRMT   - USER PROMPT CHARACTER 
C 
        DATA LPRMT/-1/
C 
C       LPRMT   - LENGTH OF USER PROMPT MESSAGE 
C 
C 
        DATA LSUSP/.TRUE./
C 
C       LSUSP   - SET TO GIVE FIRST SUSPENDING MESSAGE
C 
C 
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  870115:04:07urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C               6.1  INITIALIZE VARIABLES 
C 
        ILOC=NCNTL-(NCNTL(2)-1) 
C 
        NB=NCNTL(6) 
C 
6000    CONTINUE
C 
C               TELL USER SUSPENDING AND LIST OPTION
C 
        IF(LSUSP) 
     .CALL EXEC(2,LU, 
     .54HOPRIN suspending: ESC O to activate, ESC ^ for options,-54)
C 
6300    CONTINUE
C 
C               RESET LSUSP FOR SUSPEND MESSAGE 
C 
        LSUSP=.FALSE. 
C 
C               SUSPEND THIS PROGRAM UNTIL ACTIVATION 
C 
        REG=0.
C 
        REG=EXEC(6,0,1) 
C 
C               GET THE INPUT PARAMETERS
C 
        CALL RMPAR(IP)
C 
C 
        IF(IP .EQ. IP(2)) GO TO 90000 
C 
C               IF FIRST PARM ZERO OR LU GO PROMPT
C 
        IF(             IP .EQ. 0 
     C          .OR.    IP .EQ. LU)GO TO 30000
C               CHECK FOR CNTL ACTIVATION 
C 
        ICNTL=IAND(ICHAR(IP,1),177B)
C 
6350    CONTINUE
C 
C               MAP ICNTL FOR ROUTING 
C 
        IMCTL=ISCNC(MCNTL,1,NCNTL,ICNTL)+1
C 
C               GIVE SUSPENDING MESSAGE FOR VALID REQUEST 
C 
        IF(IMCTL .GT. 1)LSUSP=.TRUE.
C 
C               PICK ROUTE FOR CNTL OPTION
C 
C       THE BRANCH LIST CHOOSSES AMONG THE FOLLOWING OPTIONS
C 
C               INVALID         NOT FOUND IN LIST OF SPECIAL CHARS
C               ESC  ^          DISPLAY OPTIONS CURRENTLY IN USE
C               ESC  O          OPRIN INPUT BY OPERAROT - SUSPEND AFTER 
C               ESC  Q          OPRIN INPUT BY OPERATOR - REPROMPT
C               ?1              MONIT ACTIVATE - CHARACTER DEF FROM (OPPGM
C               ?2              MONIT CNACEL - CHARACTER DEF FROM (OPPGM
C               ....            CHARCTER AND FUNCTION FROM (OPPGM 
C               ....               "      "      "      "     " 
C 
        GO TO (6000,8000,30000,30000,7000),IMCTL
C 
7000    CONTINUE
C 
        I=IMCTL-NCNTL(2)
C 
C               GET THE TYPE
C 
        ITYPE=IAND(ICHAR(NAMEC(4,I),1),17B)+1 
C 
C               CHECK FOR OFF TYPE
C 
        IF(ITYPE .NE. 2)GO TO 7300
C 
C               CHECK FOR PROGRAM PRESENT 
C 
        INAD=IGID(NAMEC(1,I)) 
C 
C               GET OFFING OPTION 
C 
        NOFF=NAMEC(5,I) 
C 
C               IF OFFING OPTION NOT SPECIFIED USE 2
C 
        IF(NAMEC(11,I) .LT. 2)NOFF=8
C 
C               IF PROGRAM PRESENT HAVE OFFFED
C 
        IF(INAD .NE. 0)CALL IDOFF(NAMEC(1,I),NOFF)
C 
C               RETURN TO GET MORE WORK 
C 
        GO TO 6000
C 
7300    CONTINUE
C 
C               HAVE PROGRAM LOADED AND RUN 
C 
        IERR=LPROP(NAMEC(1,I),LU,1) 
C 
C               CHECK FOR ERROR 
C 
        IF(IERR .LT. 0)CALL OPERR(LU,IBUFF,2,IERR,NAMEC(1,I)) 
C 
C 
7700    CONTINUE
C 
C               SET TERMINAL TIME-OUT TO 30 SECS AGAIN
C 
        CALL EXEC(3,2200B+LU,3000)  
C 
C               GET THE EQT OF THIS LU
C 
        CALL IGEQT(LU,0,NEQT) 
C 
C               BUILD SYSTEM TO MESSAGE 
C 
        NCHAR=ICHMV(IBUFF,1,3HTO,,1,3)
C 
C               INSERT THE EQT NUMBER 
C 
        NCHAR=IB2AS(NEQT,IBUFF,NCHAR,100002B)+NCHAR 
C 
C               INSERT TIMEOUT FIELD
C 
        NCHAR=ICHMV(IBUFF,NCHAR,5H,3000,1,5)-1
C 
C               SEND MESSAGE TO SYSTEM
C 
        CALL MESSS(IBUFF,NCHAR) 
C 
C               LOOP TO SUSPEND 
C 
        GO TO 6000
C 
C               TIME TO LIST OUR MAGIC POWERS 
C 
8000    CONTINUE
C 
C               GET IDT 
C 
        IDT=NCNTL(2)-1
C 
C               TELL PROMPT FOR INPUT METHODS 
C 
        CALL EXEC(2,LU, 
     .49HESC O,OPRIN                           OPRIN input,-49) 
C 
        DO 8500 I=1,ILOC
C 
C               CLEAR BUFFER
C 
        CALL IFILL(IBUFF,1,120,2H  )
C 
C               HAVE ENTRY DISPLAYED WITH CHARACTER 
C 
C               FIRST PUT IN THE CHARACTER FOR ACTIVATION 
C 
        REG=DSPLN(IBUFF,1,ICHAR(MCNTL,I+IDT),1,2H1E)
C 
C               GET THE ENTRY TYPE
C 
        ITYPE=IAND(ICHAR(NAMEC(4,I),1),17B)+1 
C 
C               BRANCH TO HANDLE TYPE 
C 
        GO TO (8100,8200),ITYPE 
C 
8100    CONTINUE
C 
C               NOW DISPLAY PROGRAM NAME AND CURRENT PARAMETERS 
C 
       REG=DSPLN(IBUFF,IRGA+2,NAMEC(1,I),1,2H3A)
C 
C               HANDLE OPTION ON NEXT PARAMETER 
C 
        REG=DSPLN(IBUFF,IRGA+2,IAND(NAMEC(4,I),77777B),1,2H1I)
C 
C               HANDLE REST OF LINE 
C 
        REG=DSPLN(IBUFF,IRGA+2,NAMEC(5,I),NAMEC(11,I)-1,2H6U) 
C 
C               REMOVE LAST COMMA 
C 
        IRGA=ICHMV(IBUFF,IRGA+1,2H  ,1,1)-2 
C 
C               NOW DISPLAY INFO
C 
        GO TO 8400
C 
8200    CONTINUE
C 
C               MOVE IN NAME
C 
        IRGA=ICHMV(IBUFF,IRGA+2,NAMEC(1,I),1,6) 
C 
C               MOVE IN OFF 
C 
        IRGA=ICHMV(IBUFF,IRGA,5H,OFF,,1,5)-2
C 
C               IF O2 PRESENT DISPLAY IT
C 
      IF(NAMEC(5,I) .NE. 0) 
     .IRGA=IB2AS(NAMEC(5,I),IBUFF,IRGA+2,1)+IRGA+1
C 
8400    CONTINUE
C 
C               IF A COMMENT MOVE IT IN NOW 
C 
        IF(NAMEC(12,I) .NE. 0)
     .IRGA=ICHMV(IBUFF,39,NAMEC(13,I),1,NAMEC(12,I))-1
C 
C 
C               NOW WRITE LINE TO USER
C 
        CALL EXEC(2,LU,IBUFF,-IRGA) 
C 
8500    CONTINUE
C 
C               NO MORE ENTRIES LOOP BACK TO SUSPEND
C 
        GO TO 6000
C 
30000   CONTINUE
C 
C               NOTE SUSPENDING MESSAGE NEEDED
C 
        LSUSP=.TRUE.
C 
C               THE USER WANTS TO TALK TO US PROMPT AND READ
C 
        CALL EXEC(2,2000B+LU,IPRMT,LPRMT) 
C 
C               READ THE RESPONSE 
C 
        REG=REIO(1,400B+LU,IBUFF,-120,3000) 
C 
C               SAVE LENGTH OF INPUT
C 
        LENIN=MIN0(120,IRGB)
C 
C               CHECK FOR TERMINATION CONDITIONS
C 
        IF(             LENIN .EQ. 0
     C          .OR.    (LENIN .EQ. 2 .AND.     (IBUFF .EQ. 2H::
     C                                      .OR. IBUFF .EQ. 2HEX))) 
     C          GO TO 6000
C 
C               CHECK FOR ESC-CHARACTER INPUT 
C 
        ICNTL=ICHAR(IBUFF,2)
C 
        IF(LENIN .EQ. 2 .AND. ICHAR(IBUFF,1) .EQ. 33B)GO TO 6350
C 
30100   CONTINUE
C 
C               CHECK FOR ESC CHARACTER 
C 
        IESC=ISCNC(IBUFF,1,LENIN,33B) 
C 
C               ESC FOUND 
C 
        IF(IESC .EQ. 0)GO TO 30200
C 
C               MOVE BACK OVER ESC AND TRY AGAIN
C               (NOTE NON ESC ECHOED SO DO NOT REMOVE)
C 
        LENIN=ICHMV(IBUFF,IESC,IBUFF,IESC+1,LENIN-IESC)-1 
C 
C               SEARCH FOR MORE ESC 
C 
        GO TO 30100 
C 
30200   CONTINUE
C 
C               CHECK FOR RUN OF PROGRAM
C 
        IF(ICHCM(IBUFF,1,3HRU,,1,3) .NE. 0)GO TO 40000
C 
C               RU, FOUND SQUEEZE OUT AND PARSE THE REST
C 
        LENIN=ICHMV(IBUFF,1,IBUFF,4,LENIN-3)-1
C 
        CALL PRSLN(IBUFF,-LENIN,IP) 
C 
C               LOOP THROUGH LIST OF PROGRAMS 
C 
        DO 30799 I=1,ILOC 
C 
C               CHECK FOR NAME MATCH
C 
        IF(ICHCM(IP,1,NAMEC(1,I),1,5) .NE. 0)GO TO 30799
C 
C               IF ANY PARAMETERS REPLACE IN LIST 
C 
      IF(LENIN .GT. 5)
     .CALL IGPRM (NAMEC(6,I),IP(4),IAND(IP(11),77777B)-1,0) 
C 
C 
C               NOW RUN IT
C 
        IERR=LPROP(NAMEC(1,I),LU,1) 
C 
C               CHECK FOR ERROR 
C 
        IF(IERR .LT. 0)CALL OPERR(LU,IBUFF,2,IERR,NAMEC(1,I)) 
C 
C               NOW LOOP BACK TO SUSPEND
C 
        GO TO 50999 
C 
30799   CONTINUE
C 
C               PROGRAM NOT IN LIST TELL OPERATOR AND LOOP BACK 
C 
        CALL EXEC(2,LU,38H!! INVALID PROGRAM REQUESTED IN OPRIN,-38) 
C 
C               NOW LOOP BACK 
C 
        GO TO 50999 
C 
40000   CONTINUE
C 
C               CHECK FOR COMMENT INPUT BY OPERATOR 
C 
        IF(ICHAR(IBUFF,1) .NE. 42B)GO TO 50000
C 
C               OPERATOR COMMENT - LOGIT AND GO FOR MORE
C 
        CALL LOGIT(IBUFF,LENIN,2H;;,NAMUS)
C 
C               GO FOR MORE 
C 
        GO TO 50999 
C 
50000   CONTINUE
C 
C               CHECK TO MAKE SURE BOSS IS HEALTHY
C 
        LBOSID=IGID(NAMEI(1,NB))
C 
C               IF NO ID ABORT - BOSS HAS VANISHED
C 
        IF(LBOSID .EQ. 0)GO TO 99999
C 
C               MAKE SURE BOSS IS ACTIVE - I. E. NON ZERO SUSPEND 
C 
        IF(IXGET(LBOSID+8) .EQ. 0)GO TO 99999 
C 
C               SEND ALL INFORMATION TO BOSS
C               USE OPERATOR CLASS
C 
        CALL EXEC(20,0,IBUFF,-LENIN,2HFS,0,ICLOPR)
C 
C               NOW RUN BOSS
C 
        REG=0 
C 
        REG=EXEC(IAND(NAMEI(7,NB),37B),NAMEI(1,NB), 
     .NAMEI(9,NB),NAMEI(10,NB),NAMEI(11,NB),NAMEI(12,NB),NAMEI(13,NB))
C 
C               CHECK FOR PARAMETERS RETURNED 
C 
50999   CONTINUE
C 
C               GO TO BACK TO SUSPEND OR RE PROMPT
C 
        GO TO (6000,6000,6000,30000),IMCTL
C 
90000   CONTINUE
99999   CONTINUE
C 
        RETURN
        END 
        END$
