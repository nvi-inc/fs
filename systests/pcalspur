#!/usr/bin/perl

# 1.0 Initialize

use PGPLOT;
require "getopts.pl";

&Getopts("vshf:");

if ($#ARGV < 0 &&!defined($opt_h) &&!defined($opt_v)) {
    print STDERR "Try: 'pcalspur -h'\n";
    exit -1;
}

if(defined($opt_v)) {
    print "[pcalspur 1.0]\n";
    pgqinf("VERSION",$val,$len);
    print "using PGPLOT module version $PGPLOT::VERSION, PGPLOT $val library\n";
    exit -1;
}

if (defined($opt_h)) {
    print "Usage: pcalspur -svhf file/device logs\n";
    print "Synopsis: extracts pcal data from logs and plots pcal spurs\n\n";

    print "The level of spurs is plotted for each of three states that may occur:\n";
    print "pcaloff, lounlock, and pcal5moff. These states are plotted relative to the\n";
    print "'pcalon' state. Data for each of these cases in the log must follow logged\n";
    print "commands that contain these strings. If the commmands are called from\n";
    print "procedures, they must be logged with 'xlog=on'.\n\n";

    print "Options explanation:\n";
    print " -s make sensitivity (only) plot also\n";
    print " -v print program and PGPLOT version information and stop\n";
    print " -h print this help information and stop\n";
    print " -f file/device send graphs to 'file' using PGPLOT 'device'\n";
    print "    if -f omitted and DISPLAY is defined, an xterm will be used\n";
    print "    if -f omitted and DISPLAY is not defined, 'pcalspur.ps/vps' will be used\n";
    print "    if '-f ?', you will be prompted for standard pgplot devices,\n";
    print "               be sure to quote '?', like \\?\n";
    print "    'vps' (portrait PostScript) is a useful choice for 'device' for file output\n";
    exit -1;
}

if(defined($ENV{'DISPLAY'}) && !defined($opt_f)) {
    $dev="/xterm";
} elsif(!defined($opt_f)) {
    $dev="pcalspur.ps/vps";
} else {
    $dev=$opt_f;
}

# 2.0 extract data

for($state=0;$state<4;$state++) {
    for ($i=0;$i<17;$i++) {
	$numb[0][$state][$i]=0;
	$numb[1][$state][$i]=0;
    }
}
$first=1;
$state=-1;
foreach $file (@ARGV) {
    if($first) {
	$save_file=$file;
    }
    open(FILE,$file) || do {
	print STDERR "can't open $file: $!\n";
	next;
    };
#   print "file $file \n";
    $x=0;
    $y=0;
    while (<FILE>) {
	if(/;location,([^,]*)/i) {
	    $location=$1;
	} elsif(/pcalon/i) {
	    $state=0;
	} elsif(/pcaloff/i) {
	    $state=1;
	} elsif(/lounlock/i) {
	    $state=2;
	} elsif(/pcal5moff/i) {
	    $state=3;
	} elsif(/pcalports=([^,]*),([0-9]+)/i||/vsi4=[^,]*,([^,]*),([0-9]+)/i) {
	    $x=$1;
	    $y=$2;
	    die "log does not contain necessary strings\n" if ($state < 0);
#	    print "pcalports $1 $2\n";
	    if($first || $numb[0][$state][$x]!=0 || $numb[1][$state][$x]!=0
	       || $numb[0][$state][$y]!=0 || $numb[1][$state][$y]!=0 ) {
		if(!$first) {
		    print "Detected a repeated measurement,";
		    print " plotting what I had before and then quiting.\n";
		    goto PLOT;
		}
		$first=0;
		$date=substr($_,0,17);
	    }
	} elsif (/decode4\/[p]*cal ([lu])sb([xy])/i) {
	    $sb = $1;
	    $port=$2;
	    die "log does not contain necessary strings\n" if ($state < 0);
#	    print "sb $sb port $2\n";
	    if($sb eq "u") {
		$band=1;
	    } elsif($sb eq "l") {
		$band=0;
	    } else {
		die "unknown side-band $sb\n";
	    }
	    if($port eq "x") {
		$chan=$x;
	    } elsif ($port eq "y") {
		$chan=$y;
	    } else {
		die "unknown pcal port $port\n";
	    }
	    ($time,$type,@fields)=split(' ');
	    while($freq=shift(@fields)) {
		$freq=$freq/1e6;
		$amp=shift(@fields);
		$phase=shift(@fields);
#		print "$band $port $freq $amp $phase\n";
		$freq[$band][$state][$chan][$numb[$band][$state][$chan]]=$freq;
		$ampl[$band][$state][$chan][$numb[$band][$state][$chan]]=$amp;
		$numb[$band][$state][$chan]++;
	    }
	}
    }
}
# 3.0 plot
#
PLOT:
$ln10=log(10);
$first_plot=1;
#
# 3.1 form the ratio
#
for($l=0;$l<4;$l++) {
    next if ($l==0 && !defined($opt_s));
    $some=0;
#    print "in state loop $l\n";
    for($j=0;$j<2;$j++) {
	for($i=1;$i<15;$i++) {
	    $count[$j][$i]=0;
#	    print "in VC loop $numb[$j][$l][$i]\n";
	    for($k=0;$k<$numb[$j][$l][$i];$k++) {
#		print "in num loop $j $i $k\n";
		if(($freq[$j][$l][$i][$k] == $freq[$j][0][$i][$k])
		   && ($ampl[$j][0][$i][$k]!=0)) {
		    $frequencies[$j][$i][$count[$j][$i]]=$freq[$j][$l][$i][$k];
		    $amp=$ampl[$j][$l][$i][$k];
		    $amp=1 if ($amp==0 || $l==0);
		    $amplitudes[$j][$i][$count[$j][$i]]
			=20*log($amp/$ampl[$j][0][$i][$k])/$ln10;
		    $sensitivity[$j][$i][$count[$j][$i]]
			=20*log(1.0/$ampl[$j][0][$i][$k])/$ln10;
		    $count[$j][$i]++;
		    $some=1;
#		    print "some $l $j $i $k\n";
		}
	    }
	}
    }
    next if(!$some);
    if($first_plot) {
	pgbegin(0,$dev,2,16);
	pgsch(10);
	$first_plot=0;
    }
    pgask(1);
    pgpanl(2,16);
    pgpage;

# 3.2 Find min value

    $minv=1e9;
    for($i=1;$i<15;$i++) {
	for($j=0;$j<2;$j++) {
	    for($k=0;$k<$count[$j][$i];$k++) {
		if($amplitudes[$j][$i][$k]<$minv) {
		    $minv=$amplitudes[$j][$i][$k];
		}
		if($sensitivity[$j][$i][$k]<$minv) {
		    $minv=$sensitivity[$j][$i][$k];
		}
	    }
	}
    }
    $minv=-9.99 if $minv > -10;
    $lower=10 * (-1+int $minv/10);
    $ticks=-$lower/2;
    $lower=$lower+0.01;

# 3.3 plot

    for($i=1;$i<15;$i++) {
#    print " Plot loop $i\n";
	for($j=0;$j<2;$j++) {
	    pgpanl(1+$j,1+$i);
	    pgvport(0.15,.95,0,1);
	    pgwindow(-0.5,16.5,$lower,0+$ticks/4);
	    if($i != 14) {
		pgbox("BCST",0.0,0,"BCNST",$ticks,2);
	    } else {
		pgbox("BCNST",0.0,0,"BCNST",$ticks,2);
		pglabel("Baseband Frequency (MHz)","","");
	    }
	    
	    if($j == 0) {
		pglabel("","L$i","");
	    } else {
		pglabel("","U$i","");
	    }
	    for($k=0;$k<$count[$j][$i];$k++) {
		$fr[$k]=$frequencies[$j][$i][$k];
		$am[$k]=$amplitudes[$j][$i][$k];
#		print "$i $j $fr[$j] $am[$j]\n";
	    }
	    pgpoint($count[$j][$i], \@fr,\@am,17);
	    pgline($count[$j][$i], \@fr,\@am) if($l !=0);
	    for($k=0;$k<$count[$j][$i];$k++) {
		$fr[$k]=$frequencies[$j][$i][$k];
		$am[$k]=$sensitivity[$j][$i][$k];
#		print "$i $j $fr[$j] $am[$j]\n";
	    }
	    pgsls(4);
	    pgline($count[$j][$i], \@fr,\@am);
	    pgsls(1);
	}
    }
    

    pgpanl(1,1);
    pgvport(0.15,.95,0,1);
    pgwindow(-0.5,16.5,0,39);
    if($l == 0) {
	pgtext(4,10,"$location Spur Sensitivity (dB) -- $date $save_file");
    } elsif($l == 1) {
	pgtext(5,10,"$location Pcal Off Spurs (dB) -- $date $save_file");
    } elsif($l == 2) {
	pgtext(5,10,"$location LO Unlock Spurs (dB) -- $date $save_file");
    } else {
	pgtext(3,10,"$location Pcal 5 MHz Off Spurs (dB) -- $date $save_file");
    }

}
if(!$first_plot) {
    pgend;
} else {
    die "No data to plot\n";
}
