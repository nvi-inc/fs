FTN4,X
      SUBROUTINE POSHD(IHD,IPASS,PNOWX,IP),DETERMINE HEAD POSITION
C 
C  INPUT VARIABLES: 
C 
C     IHD - head to be checked (1 or 2) 
      DIMENSION IP(1) 
C 
C  COMMON BLOCKS USED:
      INCLUDE #FSCOM::FS
C 
C  LOCAL VARIABLES: 
      DIMENSION IBUF(20),IREG(2)
C 
      EQUIVALENCE (REG,IREG(1)) 
      DATA ILEN /40/,TCOEFF /0.0/,TCOREF /0.0/  
C 
C HISTORY 
C 880615 NRV MODIFIED PER LAR'S CHANGES FOR NEW TAPE FORMAT 
C 881220 LAR  RETURN IP(1) AND IP(2) OF ZERO IF CLASS IS CLEARED
C 
C  1. First set up class buffers for MATCN
C 
D     WRITE(LU,9956) IHD
D9956 FORMAT(" POSHD: IHD ",I7) 
      NREC = 0
      ICLASS = 0
      DO 150 I=1,2
        IBUF(1) = 0 
        IBUF(2) = 2HHD
        CALL ICHMV(IBUF,5,8H00000000,1,8) 
        N = IHD - 1 
        IF (I.EQ.2) N = N+2 
        CALL IB2AS(N,IBUF,12,1) 
        CALL EXEC(20,0,IBUF,-12,2HFS,0,ICLASS)
        IBUF(1) = -2
        CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
        NREC = NREC+2 
150   CONTINUE
      NRECX = NREC
      JCLASS = ICLASS 
C 
C  2. Now schedule MATCN
C 
      CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
C 
C  3. Get and decode position and temperature responses from MATCN
C 
      ICLASS = 0
      IF (IP(3).LT.0) GOTO 999
      ICLASS = IP(1)
      NREC = IP(2)
      IF (NREC.EQ.4) GOTO 305 
        WRITE (6,9300) IHD,IPASS,NREC,JCLASS,(IP(I),I=1,5)
9300    FORMAT(' POSHD-403:IHD,IPASS,NRECX,JCLASS,IP='/9O7) 
      IP(3) = -403
      GOTO 990
305   REG = EXEC(21,ICLASS,IBUF,-ILEN)
      REG = EXEC(21,ICLASS,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
C     IF (NCHAR.EQ.8) GOTO 310
C       IP(3) = -303
C       GOTO 990
310   CALL HEXI(IBUF(4),IVLT,4,IERR)
D     WRITE(LU,9001) IVLT 
D9001 FORMAT("VLTGE NUMBER FROM HD = "I5) 
      IF (IERR.EQ.0) GOTO 320 
        IP(3) = -303
        GOTO 990
320   REG = EXEC(21,ICLASS,IBUF,-ILEN)
      REG = EXEC(21,ICLASS,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
C     IF (NCHAR.EQ.8) GOTO 330
C       IP(3) = -303
C       GOTO 990
330   CALL HEXI(IBUF(4),ITVLT,4,IERR) 
      IF (IERR.EQ.0) GOTO 400 
        IP(3) = -303
        GOTO 990
C 
C  4. Convert responses to voltages and compute position in um. 
C 
400   PVLT = IVLT*.0048828D0
      TVLT = ITVLT*.0048828D0 
      TVLT = TVLT*10. 
      SLOPE = PSLOPE(IHD) 
      IF (PVLT.LT.0) SLOPE = RSLOPE(IHD)
      PNOWX = SLOPE*PVLT*(1.+TCOEFF*(TVLT-TCOREF)) - FOROFF(IHD)
      IF (IPASS.EQ.2*(IPASS/2)) PNOWX=PNOWX-REVOFF(IHD) 
D     WRITE(LU,9002) PVLT,SLOPE,PNOWX 
D9002 FORMAT("VLTG,SLOPE,POSITION IN POSHD = "3F10.4) 
      GO TO 999 
C 
990   CONTINUE
D     WRITE(LU,9963) ICLASS 
D9963 FORMAT(" POSHD: ICLASS ",I7)
      IF(ICLASS.NE.0) CALL CLRCL(ICLASS)
D     WRITE(LU,9967) ICLASS 
D9967 FORMAT(" POSHD: AFTER CLRCL, ICLASS ",I7) 
      IP(1) = 0 
      IP(2) = 0 
      IP(4) = 2HQ>
999   CONTINUE
      RETURN
      END 
