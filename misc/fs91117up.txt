File: /usr2/fs/misc/fs91117up.txt        Version: 6.7  Date: 161012

I. Introduction

This memo is divided into three sections:

   I.   Introduction.
   II.  Changes Since Version 9.11.8
   III. Installation

Please print this notice and read it carefully before installing the
new version.

This update is intended for all stations.  We encourage all stations
to upgrade now even if they do not need the new features and bugs
fixes because doing so will make future upgrades easier.  Upgrading
from 9.11.8 is fairly easy.  A few additional steps are required for
stations with FiLa10G and DBBCs,

The most significant changes since version 9.11.8 are:

  (i) Support for the DBBC PFB personality.  With a Mark 5B recorder,
      this supports recording for up to 2 Gbps with one VSI port.
      With a Mark 5C or FlexBuff recorder, up to 4 Gbps is supported
      with use of a FiLa10G.  Nominally, v16 or later of the PFB
      personality is required (please note that 2 Gbps can also be
      recorded with a particular version of the DDC personality).
      However, the FS also provides support for v15, which can also be
      used if it is considered suitable.  Except for the FS being able
      to handle the new DBBC 'power=N' command output format in v16,
      all other new features of v16, including continuous calibration
      for PFB, are not supported at this time.

      The rack types in equip.ctl for PFB use are 'dbbc_pfb' and
      'dbbc_pfb/fila10g'.  Please note that the old 'dbbc' and
      dbbc/fila10g' rack types are now 'dbbc_ddc' and
      'dbbc_ddc/fila10g' respectively.

 (ii) Unification of the station procedures for both DBBC DDC vs PFB
      and continuous vs non-continuous calibration mode.  This is
      accomplished primarily by use of the new 'if' command, which is
      discussed next.  A consequence of this change is that the DBBC
      'bread' and 'iread' procedures will not work correctly until the
      DBBC has been set-up *and* the recording bit-mask set (this was
      already true for the Tsys procedures).

(iii) New 'if' command that allows conditional execution of SNAP
      statements.  A limited number of conditions are available.
      Virtually all of them are provided for support of the
      unification of station procedures for DBBCs independent of the
      DBBC personality and calibration method, and procedures such as
      'bread' and 'ifagc' to be independent of the observing mode.

 (iv) The FMSET program can now offer a set of choices of
      configuration commands to send to the FiLa10G before it is
      synced when 's' is selected.  This option should be used in
      place of a 'fila10g_cfg' SNAP procedure.  Its use should help
      reduce the chances of forgetting to send the configuration
      before syncing and make it easier to select the right
      configuration.

  (v) The 'scan_check' command will only issue a warning, not an
      error, if there are missing bytes for the 5C or FlexBuff
      recorders.  Apparently for some of these systems it is not
      possible for get zero missing bytes.  This feature is likely to
      change in a future release.

 (vi) Improvements to the HOLOG program and a set of MATLAB scripts to
      assist with using HOLOG output for making horizon masks.  Please
      see /usr2/fs/holog/MASK/mask-HOWTO.txt for details.

More details and a full list of changes in 9.11.8 is given in the
"Changes Since Version 9.11.8" section below.

As always, we are deeply indebted to Jonathan Quick (HartRAO) for his
many significant contributions that go far beyond what is explicitly
mentioned below.

II. Changes Since Version 9.11.8

This section is divided into three sub-sections: A. Changes in the FS,
B. Changes in DRUDG, and C. Known FS Bugs.  Each sub-section starts
with a summary of the items covered followed by a more detailed
description.

			 A. Changes in the FS

The following is a summary of FS changes since 9.11.8.

 1. Support for DBBC PFB firmware versions v15 and v16.
 2. Unification of DBBC station procedures for both DDC/PFB and
    continuous/non-continuous calibration.
 3. New 'if' command for conditional execution of commands.
 4. The FMSET program can now configure a FiLa10G.
 5. The 'scan_check' command will issue a warning, not an error, for
    if there are missing bytes for the 5C or FlexBuff recorders.
 6. The HOLOG program has been updated to make it more useful.
 7. The Tsys display program, monit3, will not display Tsys values for
    DBBC channels and IFs that are not being recorded.
 8. TNX command now better supports 'variable' message error messages
    defined internally in the FS code and UNIX system errors.
 9. Positive error numbers (warnings) no longer generate a bell on the
    operator display.
10. Parentheses were add to all calculated quantities in the FS source
    include file dpi.h.
11. In FMSET a benign command is sent after every 'pps_sync' for the
    DBBC when a Mark 5B recorder is selected.
12. The number of DBBC Cores in line 21 or 'equip.ctl' is now replaced
    with up to four numbers which are the Cores for each CoMo.
13. The 'mk5b_mode', 'bit_streams', and 'mk5c_mode' commands now
    support a 64-bit bit-mask.
14. The 'fila10g_mode' command now supports two 32-bit bit-masks for
    two VSI-H inputs.
15. Periodic DBBC version and personality checking.
16. New commands 'dbbcclose' and dbbcrelink' added.
17. The 'scan_check' command issues a warning and is a no-op if it is
    executed in a schedule before the second 'scan_name=...' command
    since the schedule was started.
18. Bug fixes and improvements in FSERR.
19. New script 'fix_define' to fix errors in 'define' lines in .prc
    files.
20. Bug in value of ONOFF cut-off angle fixed.
21. New external program 's_client' for socket communication added.
22. A sample file transfer script, 'cddis' for the _new_ cddis is
    included.
23. Class-I/O deadlock is no longer possible.
24. The FS tolerates DOS line terminations in .prc and .snp files and
    operator input.
25. Errors in file opening from FORTRAN programs are now reported by
    standard log errors within the FS. 
26. Old FMGR/FMP file errors replaced with UNIX errors.
27. DDOUT now syncs the log to disk at most once per second.
28. The example 'refresh*' scripts for Linux distributions FSL7, FSL8,
    and FSL9 were updated.

A more detailed discussion of these changes follows.

 1. Support for DBBC PFB firmware versions v15 and v16.  The rack
    types in equip.ctl for PFB use are 'dbbc_pfb' and
    'dbbc_pfb/fila10g'.  Please note that the old 'dbbc' and
    dbbc/fila10g' rack types are now 'dbbc_ddc' and 'dbbc_ddc/fila10g'
    respectively.

    PFB channels for recording are selected with the new 'vsi1=...'
    and 'vsi2=...' commands.  The format code 'flex' ('form=flex')
    must be used for PFB recording.

    The PFB power data from the Core boards, returned by DBBC
    'power=N' commands can be logged via the new 'pfbN' commands, when
    'N' is the number of the Core board (1...4).  The output shows the
    raw results for each board, which is in different formats for v15
    and v16.

    Channel and detector device names for PFB use the form 'xn', where
    'x' is one of 'a', 'b', 'c' or 'd' for the IF the Core board is
    connected to, and 'n' is 0-15 for the channels on the first Core
    board on that IF, 16-31 for the ones on the second (if more than
    one), etc.  Note that there are no detectors '0', '16', etc. and
    these channels are not generally useful for recording.  The
    'formif' and 'formbbc' detector names are supported (with the
    "BBC"s being the PFB channels being recorded).  The 'tpicd'
    background TPI count recording daemon supports recording the PFB
    (non-continuous) power data.  ONOFF and FIVPT support the
    (non-continuous) PFB detectors.  The gnplt program (and gndat)
    supports the longer device names that are used.

 2. Unification of DBBC station procedures for both DDC/PFB and
    continuous/non-continuous calibration.  This allows one set of
    stations procedures to be used with all combinations of firmware
    personalities and calibration.  This is accomplished primarily by
    the use of the new 'if' command, which is discussed next.  The
    new, single, example standard DBBC station procedure file is
    /usr2/fs/st.default/proc/dstation.prc.  A consequence of this
    change is that the DBBC 'bread' and 'iread' procedures will not
    work correctly until the DBBC has been set-up *and* the recording
    bit-mask set (this was already true for the Tsys procedures).

 3. New 'if' command for conditional execution of commands.  This
    command accepts up to three arguments.  The first is a condition
    to test on.  A limited number of conditions (virtually all related
    to DBBC configuration) are available.  More conditions can be
    added in the future as needed and/or requested.  The second is the
    command to execute if the condition tests 'true'; the third is the
    command for 'false'.  So that commas (and at signs, '@') can
    included in the second and third arguments, they can be 'quoted'
    with a backslash character. Please use 'help=if' for a detailed
    discussion of the command and examples of quoting commas.  Thanks
    to Jonathan Quick (HartRAO) for suggesting this command.

 4. The FMSET program can now configure a FiLa10G.  It will prompt the
    operator to select from a set of choices of configuration commands
    to send to the FiLa10G before it is synced when 's' is selected.
    The choices and commands are defined locally in
    /usr2/control/fila10g_cfg.ctl.  An example file that includes
    comments that explain the format can be found in
    /usr2/fs/st.default/control/fila10g_cfg.ctl.  The operator can
    skip sending the configuration step by just pressing <Enter> at
    the prompt.

 5. The 'scan_check' command will issue a warning, not an error, for
    if there are missing bytes for the 5C or FlexBuff recorders.
    Apparently for some these systems it is not possible for get zero
    missing bytes.  This feature is likely to change in a future
    release.

 6. The HOLOG program has been updated to make it more useful. It now
    can be used to make a single cut in either azimuth or elevation,
    the furrows can be selected to be along elevation instead of
    azimuth, and the 1/cos(el) correct for azimuth offsets can be
    disabled.  The latter is particularly useful for taking data for
    developing horizon masks.

    There is also a set of scripts to assist in making horizon masks
    from HOLOG data with MATLAB in /usr2/fs/holog/MASK.  Currently,
    this is set-up for use witg RDBEs only.  However, other rack types
    can be used if appropriate 'maski' (initialization) and 'maskp'
    (measurement) procedures are provided.  A script corresponding to
    'holog_rdbe' for the used detector type must be developed to
    extract the data from the log into a column oriented flat
    file. Making a modified version of 'holog_rdbe' might be the
    easiest way to do that.  The rest of the tools are rack
    independent.

    Please see /usr2/fs/holog/MASK/mask-HOWTO.txt for full details.

 7. The Tsys display program, monit3, will not display Tsys values for
    DBBC channels and IFs that are not being recorded.  This should
    clean-up the display when the mode changes and make clearer which
    channels are worth monitoring.  This change means that no Tsys
    data will displayed until the DBBC has been set-up and the
    recording bit-mask is set.

 8. TNX command now better supports 'variable' message error messages
    defined internally in the FS code and UNIX system errors.  Please
    see 'help=tnx' for details.

 9. Positive error numbers (warnings) no longer generate a bell on the
    operator display.  This feature of the FS had been broken sometime
    in the past.  It has now been restored.

10. Parentheses were add to all calculated quantities in the FS source
    include file dpi.h.  This is to prevent potential errors when the
    quantities are used in further calculations.

11. In FMSET a benign command is sent after every 'pps_sync' for the
    DBBC when a Mark 5B recorder is selected.  The last command in the
    DBBC's buffer may get re-executed and an extraneous 'pps_sync'
    could have negative consequences.  The command 'dbbcifa', which is
    benign and should be available in every DBBC, is used.  This is
    not needed when a FiLa10G is in use.  Additional commands are sent
    in that case anyway.

12. The number of DBBC Cores in line 21 or 'equip.ctl' is now replaced
    with up to four numbers which are the Cores for each CoMo.  A
    script, 'dbbc_equip' is provided to simplify making this update as
    well correcting DBBC equipment type for the new format.

13. The 'mk5b_mode', 'bit_streams', and 'mk5c_mode' commands now
    support a 64-bit bit-mask.  For Mark 5B recorders only the least
    32 bits are useful.

14. The 'fila10g_mode' command now supports two 32-bit bit-masks for
    two VSI-H inputs.  The new version is not backward compatible with
    previous usage, but is parallel to the device's operation.
    Existing .prc files that use the syntax of the previous version of
    this command will not work properly.  Additionally, an error will
    be reported if the most significant 32 bit-mask (bits 32-63) is
    commanded with only one VSI-H input selected in 'equip.ctl'.

15. Additional and periodic DBBC version and personality checking.
    The version checking in the 'form=...' command has been expanded
    to report personality mismatches between equip.ctl file and the
    DBBC.  In addition, CHEKR now checks the firmware and personality
    every 20 seconds.  This is intended to make a mismatch more
    visible, since the error might be overlooked if it occurs only
    during (possible infrequent) scan set-ups.  Thanks to Jonathan
    Quick (HartRAO) for suggesting the use of CHEKR.

16. New commands 'dbbcclose' and dbbcrelink' added.  These parallel
    operation of the existing 'mk5close' and 'mk5relink' commands for
    Mark 5 communications to provide a capability to close and reopen
    the DBBC link without terminating and restarting the FS.  Thanks
    to Jonathan Quick (HartRAO) for pointing out that this
    functionality was missing.

17. The 'scan_check' command issues a warning and is a no-op if it is
    executed in a schedule before the second 'scan_name=...' command
    since the schedule was started.  This is intended to remove a
    spurious error if a schedule is joined after the first
    observation.  This behavior can be overridden with a 'force'
    parameter.  A 'scan_check' is always executed normally when a
    schedule is not running.  See 'help=scan_check' for details.

18. Bug fixes and improvements in FSERR.  A bug was fixed that caused
    an old error to be reported a second time if the decode of a new
    error mnemonic/number failed.  This condition could only occur due
    to a programming error and was very rare, if it even ever
    occurred.  The error reporting on initialization was improved to
    make it easier to locate format errors in the fserr.ctl and the
    sterr.ctl control files on start-up,

19. New script 'fix_define' to fix errors in 'define' lines in .prc
    files.  This script can be used to correct errors in the format of
    the 'define' lines in .prc files.  Such errors can come about due
    to manual editing of .prc files.  A consequence can be that the
    corresponding procedure is logged every time it is used instead of
    only the first time it is used after the log file is changed or
    after the procedure has been changed.  The script will by default
    make minimal changes, but a flag can be used to put all the
    'defines' in canonical form.  This script should not be run on
    .prc file the FS has open and will not execute if the FS is active
    unless a override flag is set.  The script includes a flag to run
    in "test" mode which will not make any changes but will display
    all changes it would make. Please execute:

      /usr2/fs/misc/fix_define -h

    for more information.

20. Bug in value of ONOFF cut-off angle fixed.  The setting, display,
    and use of the cut-off angle was not correct, but was largely
    benign.  It has been fixed.  Thanks to Giuseppe Maccaferri for
    reporting this.

21. New external program 's_client' for socket communication added.
    If python 2.7 is available, this program can be used in 'sy=...'
    commands for simple ASCII transactions with devices over Ethernet
    sockets.  Please see 'help=sy' for more information.

22. A sample file transfer script, 'cddis' for the _new_ cddis is
    included.  Please note that is not for the existing cddisin
    incoming server.  As of October 10, 2016, the new cddis system is
    only available for testing.  There will be announcement when it
    becomes operational.

23. Class-I/O deadlock is no longer possible.  Changes were made to
    class-I/O emulation services and in DDOUT, FSERR, ERCHK, and STERP
    to prevent class-I/O deadlock from occurring.  Also an error will
    not occur if the class-I/O system is full when a write occurs,
    instead the system will wait until there is room.  Such errors
    occurred only rarely in high rate date logging situations.  This
    change requires two modifications be made to any local STERP or
    ERCHK programs:

    (1) The method for retrieving the error report needs to be changed
        to use the new version of get_err.c in the example program
        source in /usr2/fs/st.default/st-0.0.0/sterp or /usr2/fs/erchk
        (they are identical).

    (2) The program must not use the class-I/O system.  Particularly,
        it must not use any of the logit*() family of routines to
        report any errors internal to the program.  It must use its
        own separate reporting system for internal errors.

24. The FS tolerates DOS line terminations in .prc and .snp files and
    operator input.  Previously, it only tolerated DOS line
    terminations in .skd and .vex files, which, via DRUDG, are
    considered the only supported input to the FS.  However, to assist
    stations that are using special purpose files created on
    MS-Windows computers, this has been extended to .snp and .prc
    files.  Both BOSS and PFMED will handle these files, but PFMED
    will replace any DOS line terminations with UNIX line terminations
    whenever a .prc file is updated.  Thanks to Alexander Neidhardt
    for suggesting this.

25. Errors in file opening from FS FORTRAN programs are now reported
    by standard log errors within the FS.  Since moving to UNIX, such
    errors in BOSS, INCOM, and AQUIR had been reported via terminal
    output. These errors have been re-integrated into the FS log
    system, making them visible in the logs.  Stand-alone programs
    such as LOGEX, XTRAC, ERROR, RESID, SIGMA, and PCALR (in
    stand-alone mode), still report file open errors with terminal
    output.  Other non-opening I/O errors in FORTRAN programs with the
    FS are still reported via the terminal.  Those errors are more
    rare and will to be integrated into the log system eventually.

26. Old FMGR/FMP file errors replaced with UNIX errors. Since the FS
    was moved to UNIX, these file errors were not reported as clearly
    as before.  This change re-integrates the logging of these errors
    with the higher level error message about the cause for improved
    clarity.  In the future, other system errors, such as in Mark 5
    and DBBC communication, will be integrated into this approach.

27. DDOUT now syncs the log to disk at most once per second.  The old
    approach, which was to sync after every log line was written, can
    cause the system to become slow and unresponsive if log entries
    are being written at a high rate, such as over 100 per second
    continuously.  The new approach alleviates that problem with
    relatively minor risk of losing log data in the event of a FS or
    system crash.  With a one second sync interval there was no
    apparent slow down compared to not syncing at all.

28. The example 'refresh*' scripts for Linux distributions FSL7, FSL8,
    and FSL9 were updated.  All of the scripts now include 'set -e' to
    cause them to stop if an error is encountered.  The FSL9
    'refresh_secondary(.sd)*' scripts were updated to include the
    "--recheck" option for 'grub-install' to update
    /boot/grub/device.map. 

    The FSL9 'refresh_spare_usr2(.9)' script was updated to properly
    initialize the re-created /usr2 partition.  The older version did
    not work for FSL9.  The new version will also now abort if '/usr2'
    is not already mounted to avoid placing the data incorrectly on
    the root partition, possibly filling it.

    If you use FSL7, FSL8, or FSL9, you should identify which versions
    of these scripts you use and update them appropriately.

A history of the various changes and the routines they affect is in
/usr2/fs/misc/changes.txt.

			 B. Changes in DRUDG
				   
DRUDG opening message date is 2016Sep11.

The following is a summary of DRUDG changes since 9.11.8.

 1. Support for four DBBC racks types.
 2. First recorder unrecognized bug fix.
 3. New skedf.ctl keyword vsi_align.
 4. VSNs for non-bank mode Mark5C recording.
 5. Several internal changes.

A more detailed discussion of these changes follows.

 1. Support for four DBBC racks types.  The previous DBBC rack types
    are replaced by DBBC_DDC and DBBC_DDC/Fila10g.  In addition a new
    PFB personality was introduced which is indicated by rack types
    DBBC_PFB, and DBBC_PFB/FiLa10g.  The commands emitted for DDC and
    PFB differ.  For PFB DRUDG will not emit BBC commands, but will
    emit 'vsiX=...' commands.  For PFB, the recording order of the
    channels is determined by sorting the IFs alphabetically and then
    by sorting (increasing) by BBC number within each IF.  BBC numbers
    can be reused, and typically are, for different IFs.

 2. First recorder unrecognized bug fix.  Previously if DRUDG did not
    recognize the first recorder it would assume, due to convoluted
    logic, that the schedule used the second recorder.  This lead to
    DRUDG producing incorrect PRC files.  Now DRUDG always assumes
    that the schedule starts with recorder one, even if it does not
    know what recorder this is.

 3. New skedf.ctl keyword 'vsi_align'.  This keyword affects the
    output only for the DBBC PFB personality.  It takes one of
    following values: '0', '1', 'none', or 'ask'.  If the keyword is
    missing in skedf.ctl, the result is the same as 'none'.  If the
    value is 'ask' DRUDG will prompt the user at run time for the
    value for each mode. If the value specified is '0', then DRUDG
    will emit the command 'dbbc=vsi_align=0' (and similarly for '1').

 4. VSNs for non-bank mode Mark5C recording.  DRUDG assumes that for a
    Mark 5C non-bank mode is used if the recording rate is greater
    than 2 Gbps.  Since non-bank mode is not fully supported yet by
    the FS and jive5ab and in order to record the VSNs of the modules
    and the disk serial numbers, DRUDG will emit the commands:
    'jive5ab=vsn?'  and 'jive5ab=disk_serial?'. The resulting
    information will be recorded redundantly every scan even if they
    haven't changed since previous scan.  Although this results in
    unnecessary output, it is the expedient way to record this
    necessary information and recording rates greater than 2 Gbps is a
    relatively uncommon situation.  This expediency will be removed
    when non-bank is fully supported.

 5. Several internal changes. There were numerous internal changes
    that should be transparent to the user, but were required because
    of the above changes.  These include: a) increasing the size of
    the name for the racks from 12 characters to 20 character; b)
    increasing an array that holds the maximum number of tracks to 64
    to accomodate two bit recording of 32 PFB channels, which uses the
    same "track" (channel) for sign and magnitude in the VEX file but
    are internally different tracks in DRUDG, and c) increasing the
    maximum number of BBCs to 32.

A history of the various changes and the routines they affect is in
/usr2/fs/drudg/change_log.txt.

			   C. Known FS Bugs

(The only change in this section since the previous version is the
addition of items #13 and #14.)

The following is a summary list of known bugs. They are described in more
detail after the list.

 1. Do not run "fmset" for extended periods.
 2. "odd" and "even" head types not supported for Mark IV & VLBA4.
 3. "odd"/"even" head types not supported for VLBA style tapeforms.
 4. CHEKR does not check the status of the Mark IV formatter or Mark 5
    recorder.
 5. Extraneous errors when tape is stopped by low tape sensor.
 6. "Comm=" command in logex extracts only the first command.
 7. S2 error scheme clumsy.
 8. No extra spaces allowed in "ibad.ctl" file.
 9. ONOFF and FIVPT programs hang.
10. FS SNAP command pages don't list tape drive suffix numbers.
11. LBA rack TPI detector is not usable.
12. mk5b_mode and bit_stream commands only report the expected sample
    rate.
13. Some fmpsee routines do not report file I/O error through the log
    system.
14. Some systems calls, particularly in mk5cn and dbbcn, use separate
    UN errors to elaborate on errors in system calls.

A more detailed discussion of these bugs follows.

 1. Do not run "fmset" for extended periods.  For stations that have
    VLBA, Mark IV back-ends and/or an S2 recorder, the "fmset" program
    should not be run for extended periods of time.  The "fmset"
    program should be used only to set or briefly verify that the
    formatter time is correct.  Do not leave "fmset" running after
    completing either of these tasks, especially during an experiment.

    The "fmset" program dominates the Field System when it is running
    and this is likely to interfere with the running of an experiment
    or other activities.  The only way to detect the time from the
    VLBA formatter with greater precision than one second it to wait
    for the seconds response from the formatter to change.  This
    requires the FS to communicate with the formatter almost
    continuously.  A similar problem exists for the S2 recorder.  This
    problem is less severe for the Mark IV formatter, but extended use
    of "fmset" in this case should be avoided as well.  In a future
    revision, this will be made more robust so that there will
    probably be less danger if "fmset" is left running.  However, even
    in the future "fmset" should only be left running for as short a
    time as possible.  A reminder about this is included in the
    "fmset" menu.

 2. "odd"/"even" head types not supported for Mark IV & VLBA4.  The
    Mark IV and VLBA4 rack version of the "form" command and the Mark
    IV and VLBA4 recorder versions of the "repro" and "parity"
    commands do not support the "odd" and "even" parameters for the
    read and write head types and reproduce electronics in the
    "head.ctl" control file.  This means that automatic substitution
    of odd or even head in passes that use only even or odd heads
    respectively does not occur.  The only correct settings for the
    read and write head parameters and reproduce electronics is "all".
    This will be fixed in a future revision.  Please let Ed know if
    you are missing some tracks and need to work around this
    limitation.

 3. "odd"/"even" head types not supported for VLBA style tapeforms.
    For any mode recorded with VLBA style tapeform (14 index
    positions), the only correct setting of the read and write head
    types on the "head.ctl" is "all".  This will be fixed in a future
    revision.  Please let Ed know if you are missing some tracks and
    need to work around this limitation.

 4. CHEKR does not check the status of the Mark IV formatter or Mark 5
    recorder.  Now that most communication problems with the Mark IV
    formatter have been solved, this will be possible and will be done
    in the future.  CHEKR support will be implemented for Mark 5
    despite communication problems, they will have to be ignored
    unless they extend beyond a certain amount of time.

 5. Extraneous errors when tape is stopped by low tape sensor.  When a
    tape drive has been commanded to move the tape and then stops
    because it hit the low tape sensor (or when S2 recorders hit the
    BOT or EOT), "CHEKR" will complain periodically that the tape
    drive is not in the correct state.  In principle the FS should be
    smarter about this.  However, if the tape is managed correctly by
    the schedule this error message should never occur.  If it does,
    then it it an indication that there is either a problem with: (1)
    the schedule, (2) the check procedures, (3) the recorder, or (4)
    the tape is too short.  If any of these cases apply they should be
    corrected.  It is more likely that this error message will occur
    when the tape is being controlled manually.  In this case, issuing
    an "ET" command will convince the FS that the tape drive should be
    stopped and the error message will cease.

 6. "Comm=" command in logex extracts only the first command.  The
    "Comm=" command in "logex" extracts only the first command
    commanded and displayed.  This problem was noted by Giuseppe
    Maccaferri (Medicina).

 7. S2 error scheme clumsy.  The error and status response number
    reporting scheme for S2 recorders is clumsy.  FS errors that have
    mnemonic "rl" are mostly error responses from the recorder or the
    RCL interface library that is used to communicate with the
    recorder.  If the numeric part of an "rl" error is greater than
    -130, then it is the error code returned by the recorder.  If the
    numeric part is less than -130, but greater than -300, then add
    130 to the value, the absolute value of the result is the error
    response code from the RCL library.  For values less than or equal
    to -300, a FS error has been detected.  Status response codes are
    all reported with mnemonic "rz" and the numeric value is the
    negative of the status response code.  In all cases an appropriate
    error or status message is displayed.  These messages are retained
    in the log.

 8. No extra spaces allowed in "ibad.ctl" file.  The format of the
    "ibad.ctl" must not contain any leading or embedded spaces.  In
    systems that use the LLP AT-GPIB driver (pre-FS Linux 4), if
    either the option "no_untalk/unlisten_after" is misspelled or an
    incorrect device name is supplied, the driver will cause a
    segmentation violation when it is initialized and the FS will
    terminate.  Unfortunately there is no way to prevent this problem
    in a general way; it reflects a limitation in the driver.

 9. ONOFF and FIVPT programs hang.  The ONOFF and FIVPT programs have
    been known to "hang" mysteriously.  This seems to be caused by
    some problem with the "go" mechanism that is used to restart the
    program when it pauses to allow a SNAP procedure, such as CALON or
    CALOFF to execute.  The "go" that is used to restart the program
    fails for some reason.  This has been exceedingly difficult to
    debug because it is intermittent and fairly rare.  There is
    however a good work around for it.  The CALON and CALOFF
    procedures are called by procedures CALONFP and CALOFFFP for FIVPT
    and CALONNF and CALOFFNF for ONOFF.  FIVPT or ONOFF may hang
    during (or actually just after) the execution of one these
    procedures that FIVPT and ONOFF will typically hang.  If this
    happens, you will have to terminate the FS to recover.  You can
    prevent it from happening again (for this procedure) by adding the
    lines:

      !+1s
      sy=go fivpt &

    to the end of CALONFP or CALOFFFP.  For CALONNF and CALOFFNF,
    please add:

      !+1s
      sy=go onoff &

    If you see other situations where FIVPT or ONOFF hang, please let
    Ed know.

10. FS SNAP command pages don't list tape drive suffix numbers.  The
    FS SNAP manual pages and the help pages available through the
    "help=" command do not reflect when multiple versions are
    available with different suffixes depending on the number of drive
    specified in the control files.  For example, there is only a
    "tape" page, no "tape1" or "tape2" page.  However, the help
    facility will display the version of the command with no suffix
    when an available command with a suffix is used.  For example, if
    two drives are defined, then "help=tape1" and "help=tape2" will
    work, but "help=tape" will not and vice-versa if only one drive is
    defined.

11. LBA rack TPI detector is not usable.  The Australian LBA Data
    Acquisition System currently lacks a functional total power
    detector though support has been included.  To allow approximate
    system temperature calibration, all the setup commands and the TPI
    detectors of the modules of a co-existing Mark IV rack are
    currently also available when the rack type is specified to be
    LBA4.

12. mk5b_mode and bit_streams_commands only report the expected sample
    rate.  The value of the actual clock rate is not read back from
    the recorder in order to calculate the actual effective sample
    rate.  Consequently, the query log output includes parenthesis
    around the sample rate as indication that it is not read, but
    expected.  The mk5c_mode command does report the actual sample
    sample rate.

13. Some fmpsee routines do not report file I/O error through the log
    system for programs within the FS, specifically BOSS, INCOM, and
    AQUIR.  The fmpopen routine does use the log system to report
    errors.  Those are the most common errors.  However other routines
    report errors with terminal output.  These other routines should
    eventually use the log system.

14. Some systems calls, particularly in MK5CN and DBBCN, use separate
    UN errors to elaborate on errors in system calls.  These should
    eventually be integrated into the main error message, but whether
    this makes the errors messages too long (maximum 120 characters)
    should be considered.

			  III. Installation

Detailed instructions are provided below for installing 9.11.17.  This
version is intended to be installed as an upgrade to 9.11.8.  If you
have an older version than 9.11.8, please upgrade to 9.11.8 first (see
fs9118up.txt).

If you are installing FS9 for the first time with this version, please
follow the installation instructions in Section 4.5 of the FS9
"Computer Reference" manual.  In this case you should also get a copy
of the current FS9 "Control Files and Field System Initialization"
manual.

For reference, the list of the most recent "critical updates" is given
below.  These are updates that must be applied sequentially.  Please
start with the next update with a later version number than what you
have and apply it and the following listed versions before upgrading
to 9.11.17.  You can find the latest versions of installation notes
for these FS versions in the "/usr2/fs/misc" directory.  The list of
critical updates is:

  9.4.0
  9.5.3
  9.5.12
  9.6.9
  9.7.7
  9.9.2
  9.10.4
  9.11.6
  9.11.8

If you have a version older than 9.3.13, please contact Ed
(Ed.Himwich@nasa.gov).

For reference purposes the naming convention for the default station
libraries for different equipment configurations is listed here.  The
files are found in /usr2/fs/st.default/proc.  They can be referred to
and compared to what you have in "/usr2/proc/station.prc".

**ONLY** for new installations (or complete re-installs), you can copy
the default version for your equipment to "/usr2/proc" renaming it to
"station.prc" in the process, e.g.:

  cd /usr2/proc
  cp -i /usr2/fs/st.default/proc/3station.prc station.prc
  chmod a+rw station.prc

The "-i" option will prompt before overwriting an existing
"station.prc" to give you a chance to recover if you did not realize
you already had a station.prc file.  The table of correspondence
between equipment types and default library names is given next.

      Equipment        Prefix letters  Station Library
      Rack/Drive1/Drive2

      K42/K42              k42         k42station.prc
      K42K3/VLBA           k42k3v      k42k3vstation.prc
      K42MK4/VLBA          k42mk4v     k42mk4vstation.prc
      K42MK4/VLBAB/VLBAB   k42mk4vb    k42mk4vstation2.prc
      K42/K5               k42k5       k42k5station.prc
      LBA/S2               ls2         ls2station.prc
      LBA4/S2              l4s2        l4s2station.prc
      Mk3/Mk3A             3           3station.prc
      Mk4/Mk4              4           4station.prc
      Mk4/Mk5A             45          45station.prc
      Mk4/VLBA4            4v4         4v4station.prc
      Mk5/Mk5B             5           5station.prc
      NONE/S2              s2          s2station.prc
      VLBA/S2              vs2         vs2station.prc
      VLBA/VLBA            v           vstation.prc
      VLBA/VLBA2           v2          v2station.prc
      VLBA/VLBA/VLBA       v           vstation2.prc
      VLBA4/VLBA4          v4          v4station.prc
      VLBA4/MK5A           v45         v45station.prc
      VLBA4/VLBA42         v42         v42station.prc
      VLBA5/Mk5B           v5          v5station.prc
      DBBC/Mk5B            d           dstation.prc

If your equipment type is missing, please let Ed (Ed.Himwich@nasa.gov)
know so that it will be added.

You can use cut-and-paste to reduce the amount of typing involved in
the installation.  This reduces the chances of missing required spaces
and other easily missed characters (like ".") in the commands.  The
basic idea is to have two different terminals open, EITHER (preferred)
two different xterm terminals either on the local X display or
remotely logged in OR (more cumbersome) two different VT text
terminals (Control-Alt-F*, where * is 1-6) on the FS computer you are
upgrading.  You can then switch back and forth between the terminals,
reading the instructions as you scroll through them (with "more" or
"less") on one terminal and entering commands on the other.  You can
cut-and-paste complicated commands from the terminal with the
instructions to the terminal where you are entering commands as
needed.  You can use "ssh" or "su" to "switch" to users as needed on
the terminal where you are entering commands. For example, you can
change to being "prog" by executing:

 ssh -X prog@localhost

or

 su - prog

Please don't forget to log back out when you need to change users
again or you may develop a series of "nested" logins.  The steps that
require rebooting will of course completely log out all of your
terminals; you will need to re-login again from scratch to continue.
At the end of the update, it is recommended that you login as "oper"
on the local X display for the final testing.  Please also note that
in order to paste into the X display login shell window for "oper" and
"prog", you typically must use Shift-Insert.  If you have any
questions about how to cut-and-paste please contact Ed
(Ed.Himwich@nasa.gov).

 (0) Before you begin the upgrade make sure you have a current back-up
     of your system in case something goes wrong.  If you are use FS
     Linux 5 (FSL5), we recommend you use the tar based back-up that
     is part of the rotating disk back-up scheme.  A draft document
     that describes this method is available in the docs sub-directory
     on the FS FTP servers as backups2.pdf.  If you have an older FS
     Linux distribution, please use the disk-to-disk back scheme
     described in Section 5.8 of the FS9 "Computer Reference" manual.
     If you have an FSL6 (sarge), FSL7 (etch) FSL8 (lenny) or FSL9
     (wheezy) system configured to run a RAID, please see
     /usr2/fs/misc/RAID.pdf (for FSL9, see
     /usr2/fs/misc/FSL9_RAID.pdf) section APPLYING AN UPDATE for
     directions for applying an update.  If you are running one of the
     FSL distributions and do not have documentation on how to make a
     back-up, please contact Ed.  If you have SCSI disks, Section 5.7
     of the FS9 "Computer Reference" manual has a discussion of drive
     ID numbers if you are unsure about these.

     Normally you should choose to install the update on your primary
     disk after having made and verified your back-up.  Once the
     installation is complete, has been tested, and used for a little
     while, you can copy over your back-up with the upgraded primary.
     If the upgrade fails, you should restore the back-up to the
     primary for operations.  You can then try to upgrade again when
     it is convenient.  In a desperate situation, you can use the
     back-up for operations.  You may choose to install the FS on your
     back-up disk for testing and then later copy the back-up onto the
     primary once you are satisfied with the new version.  In any
     event, please be sure to make a fresh back-up (and put it safely
     away) before continuing with the installation.

 (1) Please be sure that you have at least 40 MB of free space (use
     the "df" UNIX command to check free space) on your "/usr2"
     partition before starting the upgrade.  This would probably only
     be an issue for stations with 200 MB disks.  If you are tight on
     space, you may want to delete old log files and old versions of
     the FS (except your most recent one if you can avoid it of
     course).  Since you should have backed-up your system, you can
     even delete the "*.[oas]" and executable files of your old
     versions with no risk.  You might want to keep the source of the
     previous versions around for reference if you have room.  You can
     eliminate the non-source files by "cd"-ing to each of the old FS
     directories in turn as "prog" and doing a "make rmdoto rmexe".
     If you have any questions about how to do this, please contact
     Ed.

 (2) Log-in as prog.

 (3) Place a copy of the fs-9.11.17 archive in your "/tmp" directory.
     For example you might do the following:

       cd /tmp
       ftp atri.gsfc.nasa.gov
       (enter your FS FTP account name at the prompt)
       (enter your FS FTP password at the prompt)
       binary
       cd dist
       get fs-9.11.17.tgz
       quit

     Another FS server is also available at:
     http://www.metsahovi.fi/fs/.

     (The instructions for transferring the archive using DOS floppies
     are no longer included in this notice.  If you need to do this,
     please contact Ed (Ed.Himwich@nasa.gov).)

 (4) ** VERY IMPORTANT ** Log-out as prog and log-in as root.

 (5) Extract the source from the archive:

       cd /
       tar xzpf /tmp/fs-9.11.17.tgz

 (6) Set the link for the new FS version:

       cd /usr2
       ln -sfn fs-9.11.17 fs

 (7) It is recommended that your local files operations (control,
     proc, log, and sched directories) have the default ownership
     ("oper.rtx") and permissions ("rw-rw-rw").  To force this, please
     execute the script (as "root"):

       /usr2/fs/misc/fix_perm

     Answer "y" to the prompt if you wish to proceed.  It is good idea
     to do this, unless you have purposely changed the ownerships and
     permissions to some other values.  If you don't want to restore
     the defaults, answer "n" (this is the last chance to abort the
     execution of the script).

 (8) ** VERY IMPORTANT **  Log-out as root, and log-in as prog.

 (9) Make the FS:

       cd /usr2/fs
       make 

(10) Make your local software that accesses FS shared memory. If you
     /usr2/st/Makeifle is set-up in the standard way, you can do this
     with:

       cd /usr2/st   
       make rmdoto rmexe all

(11) You can skip this step if do not have a local copy (in /usr2/st)
     of the "sterp" or "erchk" programs.  If you have a local version,
     the method for passing the error information to these programs
     has changed.  If your local version uses the previous get_err()
     routine to retrieve the error information, you will probably be
     able to just copy the new version of this routine from

       /usr2/fs/st.default/st-0.0.0/sterp/get_err.c

     or

       /usr2/fs/st.default/erchk/get_err.c

     (they are identical) into your source directory and recompile.
     If this doesn't work for you, the changes needed should be fairly
     simple.

     Please note also that it is critical that all versions of "sterp"
     and "echck", local or not, must not use the class-I/O system,
     particularly the logit*() family of calls to report internal
     errors. This programs should have their own separate reporting
     mechanism for internal errors..  If they are using the class-I/O
     system, this must be corrected.

     Please contact Ed (Ed.Himwich@nasa.gov) if you have any
     questions.

(12) Reboot the computer.  This is important for re-initializing
     shared memory with the new version.

(13) Log in as oper
     
(14) Three updates to the local control files are needed.  The first
     (A.) to equip.ctl is required for all stations.  The second (B.)
     is only required for stations with a FiLa10G. The third (C.) is
     only required for stations that want to use 'vsi_align=0/1' for
     the DBBC PFB mode.

     A. All stations need to update their equip.ctl file to change the
        contents of non-comment line 21.  Previously this line
        contained one field for the number for DBBC Conditioning
        modules.  Now it contains up to four fields for the number of
        Core boards per Conditioning module.  The script 'dbbc_equip'
        can fix this, but the correct values must be supplied on the
        command line.  The command line takes up to four values, call
        them 'a', 'b', 'c', and 'd' in order.  Each specifies the
        number of Core boards attached to the corresponding
        Conditioning module.  The values must be specified as one
        string (withing quotes).  Drop trailing values when you don't
        have four Conditioning Modules.  Three examples follow.

          If you have one Core board on each of the four Conditioning
          modules, use:
    
            cd /usr2/control
            /usr2/fs/misc/dbbc_equip '1 1 1 1'

          If you have three Conditioning modules and one Core board on
          the first two modules and 2 on the third, use:

            cd /usr2/control
            /usr2/fs/misc/dbbc_equip '1 1 2'

          If you don't have a DBBC, you can use:

            cd /usr2/control
            /usr2/fs/misc/dbbc_equip '1 1 1 1'

        Please note that the number of DBBC IF power conversion
        factors, which are in the next non-comment line in the file
        must agree with the number of fields (and therefore number of
        Conditioning module implied) on non-comment line 21.  This
        probably is already correct if either (i) you have a DBBC or
        (ii) you don't have a DBBC, but used the default example for
        this line in our equip.ctl and you used the example for the no
        DBBC case above.

        Please also note that although this script adds comments
        explaining the new line 21, it does not delete any comments
        about the old one. It is recommended that you delete them by
        hand.

        If the current rack type in equip.ctl is 'dbbc' or
        'dbbc/fila10g', this will change them to 'dbbc_ddc' or
        'dbbc_ddc/fila10g' respectively.  Please note that it will not
        change any alternative rack types in comments.  If you have
        any of those, they will need to changed by hand.

     B. This update is only needed if you have a FiLa10G.  Fila10G
        configuration initialization is now integrated into FMSET.
        This is intended to make this easier to manage and to reduce
        the chances of forgetting to send the initialization before
        sync-ing.  This is supported with the
        '/usr2/control/fila10g_cfg.ctl" control file. An example file
        can be found in

          /usr2/fs/st.default/control/fila10g_cfg.ctl

        which basically implements the (uncustomized) contents of the
        old example "fila10g_cfg" procedure (which is no longer
        included).  You should set up your own version with the
        configurations you want, customized for your station.  The
        syntax of the file is described more fully in the example
        file, but the basic features are:

          -up to 21 different configurations can be defined
          -each configuration definition starts with a "$config name"
           line
          -"name" is a unique string of up to 16 non-space characters
           to identify the configuration
          -after the "$config name" line there can be an arbitrary
           number of commands for the set-up of that configuration
          -the commands are "raw" fila10g commands, i.e., no leading
           "fila10g=", maximum command length is 128 characters
          -embedded white-space is allowed in the commands, but trailing
           white space is trimmed
          -all lines starting with asterisks ("*") are comments, which can
           appear anywhere
          -no blank lines or lines that start with white space are allowed
          -an empty file and configurations with no commands are allowed
           (but not of any clear value)

        It is recommended that the names used to identify the
        configurations be easy to distinguish so that when this
        feature is used it is easy to pick the appropriate one.

        Once the file is set-up, in FMSET you can select 's' and after
        confirming that you do want to sync and whether you want to
        also sync the DBBC, you will be offered a list of the
        available configurations.  You can select the configuration by
        entered its displayed number, or enter "0" or just hit <Enter>
        for none.

     C. This update is only required for stations that use the DBBC
        PFB personality and want to use 'vsi_align=...' commands in
        the DRUDG generated set-up.  Apparently what value to use in
        the command may be system dependent.  Please contact Gino
        Tuccari (g.tuccari@ira.inaf.it) if you have questions.

        This is supported using a new keyword available in the $misc
        section of skedf.ctl: "vsi_align". It controls whether (and
        how) for DBBC_PFB and DDC_PFB/FILA10G systems, DRUDG inserts a
        dbbc=vsi_align=... command, after "form=flex' in each setup
        procedure. The keyword supports values:

          none   - do not insert a dbbc=vsi_align=... command
          0      - insert dbbc=vsi_align=0 command
          1      - insert dbbc=vsi_align=1 command
          ask    - prompt for each schedule whether to use "none", "1",
                   or "2"

        If the keyword is no present, the effect is the same as
        "none".

        An example can be found in:

          /usr2/fs/st.default/control/skedf.ctl

        Please add the 'vsi_align' keyword with appropriate value to
        your skedf.ctl if it is needed.

(15) Update your procedure files.  The first update (A.) is for all
     stations.  It finds and fixes a possible structural error in .prc
     files.  The second one (B.) is only for stations with DBBCs.

     A. Fixing errors in 'define' statements in .prc files. Sometimes
        due to errors (possibly caused during manual editing, instead
        of using PFMED), these statements can be damaged.  This can
        lead to other problems including the contents of the procedure
        being logged every time they are executed.  You can use the
        new utility, /usr2/fs/misc/fix_define to fix this. You can run
        it when the FS is *not active*:

          cd /usr2/proc
          /usr2/fs/misc/fix_define -t *.prc

        in 'test' mode to see if there any 'define' statements that
        need to be fixed.  If there are, they will displayed.  If you
        choose to fix them, you can re-run the second command above
        without the '-t' flag to fix them.  An original of each .prc
        file that is changed is retained with an added .bak extension.

     B. This update is only for stations with DBBCs.  It is not
        required, but strongly recommended, especially if you do not
        use a single DBBC personality (DDC or PFB) or a single
        calibration mode (continuous or non-continuous).  At the very
        least making this change will 'future proof' your system for
        changes in how it is used.  More generally, it will greatly
        simplify the management of your station procedures by unifying
        them for both personality types and both calibration modes.

        The specific standard procedures that have changed are:

          ifman
          ifagc
          preob
          caltsys
          iread
          bread

        Examples of the new versions of these procedures can be found in

          /usr2/fs/st.default/proc/dstation.prc

        You can 'diff' this file against the version for 9.11.8 to see
        the changes.  Please use PFMED to edit the necessary changes
        into your station procedure library.

(16) Test the FS as "oper".  Generally speaking a fairly thorough test
     is to run a test experiment: start with DRUDG-ing a schedule,
     making listings, and any other pre-experiment preparation you
     normally do, then execute part of schedule, and perform any
     normal post-experiment plotting and clean-up that you do.  The
     idea here is to verify that everything works as you expect for
     normal operations.  In particular for this upgrade you should
     test that Mark 5 operations work as expected.

(17) If you are using Linux distrbutions FSL7, FSL8, or FSL9, you
     should ask your system administrator to update any system
     "refresh*" scripts that you are using.  The details of what
     changed are included in the #28 of the list of FS changes above.

(18) Consider when to update your back-ups.  You certainly should not
     update them until you have performed the tests described above.
     It would be prudent to wait until you have successfully run an
     experiment or two and preferably received word that the
     experiment(s) produced good data.  The chances of needing to use
     your back-up should be small.  If something does happen, you can
     copy the back-up to the (now assumed bad) updated disk.  You can
     then either use the restored disk or apply the FS update again.
     Handling this will be a lot safer if you have a third disk.
