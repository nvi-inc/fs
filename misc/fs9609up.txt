File: /usr2/fs-9.6.9/misc/fs9609up.txt  Version: 2.8 Date: 030915

I. Introduction

This memo is divided into 4 sections:
   I.   Introduction.
   II.  Changes Since Version 9.5.12
   III. Installation
   IV.  Transferring The Update Archive By DOS Floppy

Please print this notice and read it carefully before installing the
new version. This version contains a preliminary version of several
new tools for antenna gain and system temperature calibration. This
version is intended for all stations except those using stations
detectors and/or special S2 DAS version of the FS. If you have any
questions about whether is applies to you, please contact Ed.

This version is intended to installed as an update for 9.5.12 and is
relatively easy to do in this case.

II. Changes Since Version 9.5.12

The sections is divided into three sub-sections: A. Change in the FS,
B. Changes in DRUDG, and C. Known Bugs. Each sub-section starts with a
summary of the items covered followed by a more detailed description.

			 A. Changes in the FS

The following is a summary of the changes. Itemsn umbered 6 and above
were added after 9.5.13. Items numbered 11 and above were added after
9.5.15. Items numbered 31 and above were added after 9.6.4. More
detailed text follows the summary. Items number 39 and above were
added after 9.6.5. Items numbered 47 and above were added after
9.6.6. Items numbered 54 and above were added after 9.6.7.  Items
numbered 55 and above were added after 9.6.8.

1. The Mark 5 data_check command protects against negative read
   pointers.
2. logpl now supports plotting channel 1 versus channel 2
3. tacd updated for new TAC32+ software
4. fsvue enhancements
5. VEX library update
6. Change in Tsys calculations and other associated changes for Mark
   III/IV and VLBA/4.
7. New ONOFF program
8. New program gnplt for analyzing antenna gain.
9. New control files *.rxg for receiver gain/Tcal data
10. New flux.ctl control file
11. New point.prc library and vpoint.prc has been removed.
12. Australian LBA Data Acquisition System support
13. Fsvue patched to allow compilation on FS Linux 1
14. Monit2 display for S2 drive combination fixed
15. Minor error message corrections
16. The source command will now accept a wider range of azimuths.
17. In the source command standard notation now accepts 100s of
    degrees.
18. The named semaphore utility function "nsem_find()" is no longer
    declared static.
19. A bug in the calculation of the cal temperatures was fixed.
20. Several error recovery problems were fixed in the new ONOFF.
21. Support for the MET3 met. sensors has been added.
22. Several font bugs in fsvue and msg were fixed.
23. TAC support has been improved.
24. ONOFF has been improved.
25. GNPLT and GNDAT have been improved.
26. Support for Mark 5A systems has been added.
27. vmk5 visual Mark 5 interface added.
28. New "exper_initi" experiment specific start-up procedure added.
29. Coding change: IPC keys are now generated by ftok().
30. IFADJUST more robust, set-up issues identified, Mk3 supported.
31. gnplt/gndat includes support for opacity and other improvements.
32. MAT= time-out bug fixed.
33. Updated version 2.0 of vmk5 included.
34. fvwm configuration files updated.
35. .Xresources updated for FS Linux 5.
36. .cshrc file updated to remove "-" from "ps -aux".
36. Class I/O number eating problem in disc_end fixed.
37. MET03 support improved when instruments are missing.
38. MSG_DONTWAIT|MSG_NOSIGNAL flags added to send() in mk5cn.
39. MSG_DONTWAIT|MSG_NOSIGNAL flags in send() made backward compatible.
40. USB VC center frequency for Mark III/IV fixed in ONOFF
41. msg autostart now compatible with mark 5
42. met and tacd clients and met server installation revised
43. mk5 communication use variable time-out
44. bank_check retrieves serial numbers in addition to VSN
45. bank_check includes 4 second delay for compatibility
46. How-to file for setting up boot time rc.fs script created.
47. MET3 WX command wind direction justification fixed.
48. TACD command infinite loop problem corrected
49. PARITY command now accepts "*" in list of tracks
50. New Mk5 returns codes 7 and 8 supported.
51. bank_check now invokes "change_pack" procedure when bank is changed.
52. vmk5 removed
53. Response time of MET03 WX command improved.
54. bank_check made more robust
55. bank_check does not issue extraneous "change_pack" calls

A more detailed discussion of these changes follows.

1. The Mark 5 data_check command protects against negative read
   pointers. The data_check command now verifies that setting the red
   pointer to one Megabyte less than the write pointer won't result in
   a negative pointer and reports an error if it does.

2. logpl now supports plotting channel 1 versus channel 2. logpl
   includes a new feature that allows channel 1 to be plotted against
   channel 2. This is available through the "Options" menu. If
   parameters for both channels appear on the same log line, the
   pairing of points is straightforward. If they appear on different
   lines, the algorithm is that the first entry encountered for
   channel 1 is paired with the first following entry for channel
   2. For subsequent points, the search begins with the next following
   channel 1 entry. If after a channel 1 entry is found no channel 2
   entry is found before the next encountered channel 1 entry, the
   first channel 1 entry is discarded and the search continues to find
   a channel 2 entry for the second channel 1 entry. The "Options"
   menu also includes an option to switch to the plot axes. This
   allows the plot to have its axes reversed, without changing the
   search algorithm, i.e., the meaning of channel 1 and channel 2 for
   the search algorithm are not reversed. This is useful for example
   for two items that are sampled as a pair, such as phase-cal phase
   and amplitude, within a few seconds of each other, with a longer
   delay between pairs. Switching axes does not change the matching of
   the pairs, but only of which items is displayed on vertical axis.

3. tcad updated for new TAC32+ software. New code was introduced for
   reading TAC32+ code version and new TAC32+ formatting. It is
   recommended that all who are using the TAC32+ should update to
   version 2.7.0. This version of tacd is backward compatible with all
   TAC32+ software versions except 2.6.x.

4. fsvue enhancements. When examining logs the current log file will
   appear on the screen, and help for the TNX command was added.
   'fsvue' is coming along due to the help and comments from all in
   the field. Please continue to express what you would like to see
   'fsvue' do as your Friendly User Interface (FUI). If you have not
   tried fsvue please do so. All comments and/or questions are always
   welcomed (good or bad). rgonzale@gemini.gsfc.nasa.gov

5. VEX library update. A capability for writing vex files has been
   added to vex library. In addition there is now support for literal
   blocks and scan IDs.

6. Change in Tsys calculations and other associated changes for Mark
   III/IV and VLBA/4. The way Tsys calculationss are handled has been
   modified to distinguish between the TPI measurement used for the
   degree/count conversion (TPICAL-TPI in the denominator of the Tsys
   calculation) and the TPI measurement used to meaure the level of
   the signal above the detector zero (TPI-TPZERO in the numerator of
   the Tsys calculation). The TPICAL-TPI value is now set by executing
   the TPDIFF command, which calculates the difference based on the
   most recent TPI and TPICAL commands. The Tsys command uses the most
   recent TPI and TPDIFF values for its calculations. This makes the
   calculation more robust, if for example under the old scheme, the
   antenna is not on source during TPICAL during PREOB, but is during
   TPI in MIDOB. Now the TPI and TPICAL for TPDIFF can be measured
   together during PREOB so they are measured under the same
   conditions. Please see the TSYS command help page for more
   information.

   Further for VLBA/4 racks, a new command TPDIFFGAIN has been added
   to record the BBC gain level associated with TPDIFF and TPZERO. The
   TSYS command now takes the TPDIFFGAIN and TPGAIN (associated with
   the TPI command) gain level into account. Please see the TSYS
   command help page for more information.

   These changes and an attempt to unify calibration procedures for
   geodesy and astronomy has lead to new standard versions of PREOB,
   MIDOB, CALTSYS, and MIDTP. The change to PREOB is now to just use
   CALTSYS rather than a subset of CALTSYS commands. The reason this
   was not done before was to reduce the execution time of PREOB. If
   you find that the new approach causes PREOB to take more than the
   nominal 10 seconds, please contact us. MIDOB is changed so that it
   stands on its own as long valid measurements of TPZERO and TPDIFF
   (and TPGAIN and TPDIFFGAIN for VLBA/4) have been made earlier.
   CALTSYS incorporates the changes described in the previous two
   paragraphs. MIDTP has had TPZERO and associated IF attenuation
   manipulation commands removed. (In the future we may move TPZERO
   commands to the mode set-up procedures to speed-up CALTSYS). Please
   see the default versions of the changed procedures in new default
   procedure library for your equipment in /usr2/fs/st.default/proc
   for more information.

7. New ONOFF program. The ONOFF program has been completely
   re-written. It now will make meaurements for any subset of
   detectors in Mark III/IV and VLBA/4 racks. The new version does not
   yet support station defined detectors. Please see the ONOFF command
   help page for information on the new version of this command.

8. New program gnplt for analyzing antenna gain. A new program, gnplt,
   is being released with this version. It allows a user to analyze
   the output of the new ONOFF program to develop gain curves and Tcal
   versus frequency tables. The program was demonstrated at Medicina
   in September and many of the requests for changes made at hat time
   have been incorporated. Carl Holmstorm will shortly be producing a
   cookbook for how to operate the program. John Conway will be
   providing documentation on how it should be used.

9. New control files *.rxg for receiver gain/Tcal data. There are new
   control files for defining the degree per flux unit (DPFU, i.e.,
   gain) of the antenna/receiver as well as noise diode values as a
   function of frequency. These files must be set-up for each band you
   intend to use the FS with. The CALTEMPS procedure and CALTEMPx and
   BEAMx commands have been deleted. Please see the example control
   files x.rx and s.rxg in /usr2/fs/st.default/control for more
   information.

10. New flux.ctl control file. Source flux is now maintained in united
    control file for all bands. The FLUXx commands are now obsolete.

11. New point.prc library and vpoint.prc has been removed. The changes
    above have greatly simplified the point.prc library so that it is
    now band independent and nearly equipment independent. The only
    small equipment dependencies are the detector devices to be
    used. Consequently, the vpoint.prc library has been eliminated.

12. Australian LBA Data Acquisition System support. This includes a
    new "dscon" bus communication daemon for the ATNF dataset bus and
    a "monit4" display process which mimics the output of the original
    DOS control process.  Up to two DAS may be controlled
    simultaneously, with each being considered to consist of two
    independant IF processors or 'ifp's.  Although a prototype
    "trackform" commands is included, it merely documents the current
    S2 output possibilities, either with or without the so-called
    "kludge" cable.  Please see the file /usr2/fs/misc/lba/readme.txt
    for more information. Thanks to Jonathan Quick at HartRAO for this
    development.

    This includes the addition of more equipment bits to the
    "fscmd.ctl" and "stcmd.ctl" files, requiring a new misc/cmdctlfix4
    script to perform the updates automatically.  Minor improvements
    were also made to the old misc/cmdctlfix, misc/cmdctlfix2 and
    misc/cmdctlfix3.  Thanks to Jonathan Quick at HartRAO for this
    fix.

13. Fsvue patched to allow compilation on FS Linux 1. A spurious
    "#include<ncurses.h>" was removed from fsvue/vueinfo.c which was
    preventing compilation under FS Linux 1. Thanks to Jonathan Quick
    at HartRAO for this fix.

14. Monit2 display for S2 drive combination fixed.  An error which
    caused the S2 record group display to be overwritten by an errant
    MkIII/IV/VLBA formatter sampling rate was fixed. Thanks to
    Jonathan Quick at HartRAO for this fix.

15. Minor error message corrections.  Changes were made to some error
    messages from "chekr" and "quikr". Thanks to Jonathan Quick at
    HartRAO for this fix.

16. The source command now accept a wider range of azimuths. The
    source command will now accept degrees as arguments within the
    range +/- 10000 degrees. This change is mainly provided to allow
    azimuths (for source "azel") to specify more than one wrap of
    azimuth. Thanks to Andrey Mikhailov at Svetloe for reporting this
    problem.

17. In the source command standard notation now accepts 100s of
    degrees. The standard notation for angles (no suffixes) as used in
    the source command will now not ignore the hundreds digit of the
    angle when the value is to be interperated as being in
    degrees. This change primarily is to allow access to azimuths
    larger than 90 degrees with the standard notation. Thanks to
    Andrey Mikhailov at Svetloe for reporting this problem.

18. The named semaphore utility function "nsem_find()" is no longer
    declared static. This is to allow programmers access to the
    corespoding numbered semaphore with the faster numbered sempahore
    utilities.

19. A bug in the calculation of the cal temperatures was fixed. The
    wrong cal temperature was returned when the tcal table for a
    polarization in the rxg file had only one point and it
    corresponded to the exact center of the detector
    bandpass. Previously in this case, the cal temp was returned as
    zero, now the correct value is returned. Thanks to Giuseppe
    Maccaferri at Medicina for reporting this problem.

20. Several error recovery problems were fixed in the new ONOFF. The
    error recovery procedure was not working correctly because any
    "break" that may have been hanging around was not being cleared
    first. This was fixed and the general handling of error recovery
    and the related error messages were improved. Thanks to Jonathan
    Quick for reporting these errors and sticking with them to help
    run the root cause.

21. Support for the MET3 met. sensors has been added. The MET3
    met. sensor and Vasiala wind sensor that are standard instruments
    for IGS sites are now supported. The basic support is provided as
    a server that runs independently of the FS. The FS interacts with
    this server to collect the data. A client, also independent of the
    FS, is also provided that will allow the met data to be collected
    and log offline. The source code and instructions for installation
    for both the server and client can be found in
    /usr2/fs/st.default/st-0.0.0/metserver and
    /usr2/fs/st.default/st-0.0.0/metclient respectively.

22. Several font bugs in fsvue and msg were fixed. Several problems
    with the fonts in these programs, for most part benign except
    under old Linux kernels such as FS Linux 2 were fixed. Thanks to
    Andrey Mikhailov at Svetloe for reporting these problems.

    fsvue now has the ability to select fonts. These options are
    available when starting fsvue:

      fsvue - will give you the fonts it used last time.
      fsvue D - will give you the terminal default fonts.
      fsvue F - will give a selection box with the fonts available on
        your system. Once you've selected the font that you want,
        click on [Save for fsvue]. fsvue will continue to use your
        saved fonts until you change it. In other words everytime you
        type 'fsvue' at the prompt it will run with the fonts you've
        selected.

23. TAC support has been improved. It has been simplified so that it
    no longer requires a daemon running in background to support
    it. Similar to the new support for the MET3 instruments, a station
    specific client, tacdclient, has been added to allow logging of
    Maser clock offsets off-line. No server is required for TAC
    support since the TAC32+ software is a server. The default client
    can be found in /usr2/fs/st.default/st-0.0.0/tacdclient.

24. ONOFF has been improved. Several bugs have been fixed. In
    particular there was some severe problems if the program was
    stopped with an "brk" before it had commanded the first
    offsets. In general the recovery after an error or "brk" has been
    improved greatly. The wait time for acquiring the first
    source is dependent on whether AQUIR is running as it had been in
    the original program.

25. GNPLT and GNDAT have been improved.

    Gnplt and gndat now works a lot better with 'range' LOs. 

    New features in gndat, the parsing program. It looks in your
    /usr2/control/ directory, and selects the .rxg files for the LOs
    in your log file. Gndat no longer needs the '/calrx/' line in the
    log file (However for now we are recommening that these still be
    included; a future update will clean-up several loose ends related
    to pointing including this one).  It also does not need the
    'onoff;' line in the log file. It simply uses the first APR record
    to start a new block of observation. This means that ONOFF can be
    started from a procedure and GNPLT/GNDAT will be able to find the
    data.

    There are shortcuts on the 'Edit' menu, for faster selection and
    plotting of Gain vs. Elevation, and TCal(K) vs. Frequency. For
    Gain vs. Elevation you select the polarization and detector you
    want, and gnplt will plot Gain vs. Elevation for that polarization
    and the calibrator sources. For TCal(K) vs. Frequency, you select
    what polarization and LO you want, and gnplt will plot TCal(K)
    vs. Frequency for that LO and polarization, also using the
    calibrator sources.

    For fitting Tcal vs. Frequency, you now have the option to either
    average TCal over all the selected times for each frequency, or
    simply taken the median TCal at each frequency. You can now also
    look at the fitting before updating the file.

    The highlighting of specific sources and frequencies now works a
    lot better, since you can select not only the frequency you want
    highlighted, but also the polarization for each frequency.

    All double clicks for editing have been removed, since they caused
    a lot of problems. You will find under the 'Help' menu what the
    new shortcuts are.

    If you click the right mouse button while the cursor is over a
    point, gnplt will draw a line between certain points depending on
    what x-axis you have selected. If you've selected frequency as
    your x-axis, gnplt will connect the points with the same time, the
    same source and the same polarization. If you have selected
    anything else as your x-axis, gnplt will connect the points with
    the same frequency, the same source and the same polarization.

    You can now edit larger groups of points with a single click. It
    works the same way as box zooming. By clicking the right button
    and drawing the box around points, you deselect the points within
    the box, as if you would have clicked on all of them. By using the
    middle button instead, you "click them back".

    You can now easily deselect all the points with a "bad" gain
    compression.  "Bad" is considered to be less than 0.95 or larger
    than 1.05 as default.  The button for doing this is under the
    'Edit' menu, and when you click it you will be able to select your
    own limits.

    If you want the plot to replot automatically when you select a
    different x- or y-axis, you can give the flag -r on the command
    line. You can also change this option after you've run the
    program. The button for this is also under the 'Edit'-menu.

    Under the 'File' menu there is a button, 'I/O setup' where you can
    change the names of the files that gnplt creates, if you for some
    reason want a different file name than the default one. All files
    that gnplt creates have the process id appended to its name. Thus
    you can run multiple sessions of gnplt on the same machine without
    the file names overlapping.

    A lot of bugs in the earlier version have been fixed. Especially
    the editing and the scaling works a lot better now.

    Some preliminary documentation is provided in the
    /usr2/fs/gnplt/almost_uptdate_docs directory. The manual.txt files
    is written by Carl Holmstrom and the gnplt.tex/.ps files by John
    Conway. The gnplt.ps file covers basic usage of the program for
    calibrating your antenna. The most significant thing that it is
    missing is the new "shortcut" selections on the main "Edit" menu
    drop-down box. These shortcuts can significantly reduce the work
    of setting up the plots. The resulting display can be then be
    customised with the other options in the "Edit", "X-axis", and
    "Y-axis" drop-down boxes. You might want to change the display
    mode to replot automatically. The gnplt.ps file did not display
    properly with the ghostscript included with FS Linux Kernel 4, but
    it did for a different version running under Windows. You may need
    to use a different computer to display this file.

26. Support for Mark 5A systems has been added. This support is
    preliminary and does NOT include support for "formal" parsing (if
    you are using a Mark 5A please be sure to configure it for
    "informal" parsing).  To enable this support, please select either
    "mk5a" or "mk5a_bs" for drive 1 in equip.ctl according to your
    equipment. For "mk5a", the FS assumes that either no bank
    management is necessary because either any recorded experiment
    will fit on one bank. If "mk5a_bs" is selected, the FS will
    monitor how full the bank is and will automatically request the
    Mark 5A to change to the other bank bwteen scans. The "mk5a_bs"
    bank switching works only with DRUDG produced schedules.

    A new command had been added: "bank_check". This command will log
    the VSN of the disk pack in the bank currently being recorded if
    either it has not been logged since the current log ws last opened
    or it has changed since the last time it was logged. In addition
    if the selected drive is "mk5a_bs", this command will check the
    remaining record time available on the bank and if it is sufficent
    for the next scan will force a bank change before checking the
    VSN. The command used to force bank_changes "bank_set=inc" takes
    longer than one second to complete. If the time-out specified for
    the Mark 5 device is less than 2 seconds, it will automatically be
    increased to 2 seconds.

    The scan length is communicated to the FS as one of the new
    parameters in the scan_name command. The session code has also
    been added to this command.

    If the selected drive is "mk5a", the disc_end command will also
    check the VSN and log it if it has changed. This is intended to
    support "automatic bank switching" by the Mark 5A in cases were a
    scan may end up split between two disk packs.

    Regardless of which method of bank switching is used, it is
    necessary to have disk pack installed in the bank that is not
    being used before a bank change will be needed.

    Currently use of Mark 5 is selected when DRUDG is run to generate
    the .snp and .prc files for schedules that were originally
    designed for tape. There are no exclusively Mark 5 schedule files
    yet. Connection of a Mark 5 system to a formatter requires
    particular wiring. DRUDG outputs comments in the set-up procedures
    that describe the correct wrring for the configuration
    requested. These issues are discussed further in the section on
    Changes in DRUDG.

    Please note the following points for operations:

      A) The FS will automatically log the VSN for Mark 5A systems

      B) For Mark 5A systems, the next bank to be used must be filled
      before the bank switch will be made.

      C) Currently, which inserting and removing disk packs, the
      active bank must be quiesecent. This is requirement of the Mark
      5A itself.

      D) When using piggyback mode, equip.ctl should not mention MK5A
      or MK5A_BS, just the tape drive to be used. The correct
      piggyback option (5A or 5P) in DRUDG must be selected when
      generating the .snp and .prc files.

      E) When using non-piggyback mode for Mark 5, equip.ctl should
      mention MK5A_BS as the recorder.  In DRUDG, the recorder type
      must be changed to to Mark 5A or Mark 5P as appropriate in option
      11.

      F) For piggyback mode with Mark 5A, it will be necessary to set
      the time-out to at least 200 centiseconds in mk5ad.ctl. For
      simplicity you may choose to make it at least 200 centiseconds
      for all cases.

      G) DRUDG does not handle Mark III modes properly for use with
      Mark 5 recorders.
 
27. vmk5 visual Mark 5 interface added. Beppe Maccaferri at Medicina
    has written a Tcl/Tk client for the Mark 5. This should be useful
    for among other things monitoring how full the bank is. Please see
    "/usr2/fs/vmk5/Notes_about_visual_Mark5_interface.txt" for more
    information. Please be careful using this program since you can
    interfer with FS operation of the Mark 5 when you enter commands
    or queries.

28. New "exper_initi" experiment specific start-up procedure
    added. This is a new standard procedure, which is invoked in place
    of the "sched_initi" procedure that was used in previous FS
    versions. DRUDG creates this procedure in the experiment procedure
    library and includes a call to "sched_initi" in it. Thus the only
    change for users is that if they want to have an experiment
    specific start-up procedure, they would need to edit the
    "exper_initi" procedure in the experiment procedure library rather
    than create a "sched_initi" procedure. This new method allows
    DRUDG to insert commands that may be required depending on the
    equipment type, in particular Mark 5A. It also makes it easier to
    preserve a schedule non-specific set of action to be execute at
    each schedule start in the "sched_initi" procedure. Users should
    note that they should not modify anything in the exper_initi
    procedure except to add command and/or remove the call sched_initi
    (if desired).

29. Coding change: IPC keys are now generated by ftok(). The keys used
    by the FS to identify interprocess communication (IPC) resources
    were previously hard-coded. This was fine until a conflict over
    shared memory with a new X-server was discovered. The FS now uses
    the standard, but not necessarily unique method, of generating
    keys with ftok(). The FS assumes that it can use "/usr2/fs" as the
    pathname to identify its resources. If your station software uses
    any IPC keys, you should consider generating them with ftok(). The
    example files include/st_params.h, stlib/setup_st.c, and
    stalloc/stalloc.c in the /usr2/fs/st-0.0.0/ directory show how
    this might be done for the STM_KEY. Please see "man ftok" for more
    information on this function.

30. IFADJUST more robust, set-up issues identified, Mk3 supported.  A
    problem in IFADJUST that caused it to find different value (one
    incorrect) if it was run twice in a row with stable power levels
    was fixed. In addition it was discovered that there was a loose
    end in the definintion of the patching in default procedures and
    experiments procedures. For narrow X-band configuration at
    stations IF3 modules the patchings were incorrectly defined as
    have VCs 5-8 attached to IF1. This error caused the IFADJUST
    command to not work for narrow frequency sequences.  This was
    corrected a few months ago in the geodetic catalogs for the
    stations with IF3 modules.  However, it turned out that this
    change was premature becuase it was incompatible with how DRUDG
    worked to set-up the IF3. The result was that stations have had to
    edit the IF3 command to change the commanded mixer state to "out"
    for narrow band schedules.  Once this version of the FS is
    installed, this will no longer be necessary (this is discussed
    more under Changes in DRUDG). In addition the ifadjust command
    should work properly for frequency configurations.

    IFADJUST now also supports the old Mark III formatters. It will
    also work with LBA4 racks.

31. gnplt/gndat includes support for opacity and other
    improvements. Support for opacity corrections has been added. The
    rxg files have been expanded to include a value for the
    temperature of the RX (Trec) and a spill-over table as function of
    elevation (Tspill), and a flag on the gain curve line to indicate
    if the gain curve has been opaciy corrected or now. Please see the
    default /usr2/fs/st.default/x.rxg file for more information on
    these changes.  In gnplt, opacity is handled in two ways. (1 If
    the Trec value is non-zero, when you select gain to plot on the Y
    axis, there will be an additional option when you select which
    Tcal value to use that will allow you to correct for the
    opacity. This option will prompt for the Tatm value (currently
    incorrectly labeled as Tcal(K)) and will use the Trec and Tspill
    to calculate an opacity for each point based on the Tsys for that
    point. The opacity is then used to correct the gain curve. If the
    rxg file is updated with opacity correction turned on, a flag is
    added to the gain curve line indicating that it is opacity
    corrected. (2) If the Y axis plot type is selected as Tsys-Tspill
    and the X type is air mass, then the tools menu will have an
    option for fitting for Trec and the opacity. The fit can be done
    over different spans of data and the average value of Trec for the
    selected data will be averaged and can used to update the value in
    the rxg file. You can delete points from the average by clicking
    on them and then"recalculating Trec on the Tools menu. You should
    expand the scale to cover the possible range of Trec values from
    the fit (some could be quite large if there is a poorly sampled
    period) before you fit the data.

    Other fixes: "Scale Tcal(k)" for gain fitting now works;
    documentation updated

32. MAT= time-out bug fixed. A bug that caused the FS to hang if a
    device timed-out when accessed with the MAT= command was
    fixed. Thanks to Kelly Kim (KPGO) for discovering this. The
    problem was that the devices were not being properly compared to
    the time-out table and by default an infinite time-out was
    used. The comparison was corrected and a reasonable default
    time-out is used if no match occurs.

33. Updated version 2.0 of vmk5 included. The latest version of
    Beppe's vmk5 is included. A distinct advantage of this version is
    that it comes up in "monitor-only" mode by default.

34. fvwmrc configuration files updated. Two benign bugs in the default
    .fvwmrc files for prog and oper were fixed. These were benign but
    caused the fvwm_convert to fail when it tried to convert them to
    the format for fvwm2. The converted .fvwm2rc files are included as
    well. Both the default oper and prog files in /usr2/fs/st.default
    were updated.

35. .Xresources updated for FS Linux 5. The default prog and oper
    .Xresources were changed to explicitly set the VT100 foreground
    and background colors. This is apparently necessary for the X
    configuration being distributed in FS Linux 5. Both the default
    oper and prog files in /usr2/fs/st.default were updated.
 
36. .cshrc file updated to remove "-" from "ps -aux". The default prog
    and oper .cshrc files were updated tp remove the now obsolete
    dash.

36. Class I/O number eating problem in disc_end fixed. The class-I/O
    number eating problem in the disc_end command was fixed. Thanks to
    both Mike Poirier (Westford) and David Graham (MPIfR) who reported
    this bug independently.

37. MET03 support improved when instruments are missing. The support
    for MET03 was improved by displaying parameters for missing
    sensors as null rather zeros.

38. MSG_DONTWAIT|MSG_NOSIGNAL flags added to send() in mk5cn. This may
    eliminate some blocks and aborts in the FS if the Mark 5A is
    having problems.

39. MSG_DONTWAIT|MSG_NOSIGNAL flags in send() made backward compatible.
    This fixed an incompatibility with older Linux kernels.

40. USB VC center frequency for Mark III/IV fixed in ONOFF. Thanks to
    Dave Graham (MPIfR) for catching this, the LSB center was being
    used instead.

41. msg autostart now compatible with mark 5
    It now checks also for disc_start to detect recording start.

42. met and tacd clients and met server installation revised. These
    were brought in line with the Debian rc*.d script policies.

43. mk5 communication use variable time-out Variable time-out are used
    for commands that may take longer to complete. The time-out
    specified in the mk5ad.ctl control file is rounded up to 200
    centi-seconds a minimum.

44. bank_check retrieves serial numbers in addition to VSN. These are
    recorded to assist the correlator, which doesn't key on VSNs yet.

45. bank_check includes 4 second delay for compatibility. The Mark 5
    command bank_check=inc was converted to delayed completion. In
    order to make the FS backward compatible with the previous
    version, a delay of up to 4 seconds was added. However, for the
    old version the delay in response by Mark 5 is counted toward the
    total, so the delay is always 4 seconds regardless of which Mark 5
    control program is being used.

46. How-to file for setting up boot time rc.fs script created. This
    file provides basic instructions in how to set-up boot scripts for
    the FS during initial installation. These scripts can be used to
    start local daemons as well as allocate resources for FS
    use. Please see the file /usr2/fs/misc/INSTALL-rc.fs.txt for more
    information.

47. MET3 WX command wind direction justification fixed. Wind direction
    now displayed left-justified to conform to Field System display
    format.

48. TACD command infinite loop problem corrected. Some clean-up was
    done to prevent an infinite loop in the TACD command if the
    tacd.ctl file is empty or the TAC PC has the wrong software
    version running.

49. PARITY command now accepts "*" in list of tracks. The PARITY
    command will now accept the "*" syntax in the list of tracks. If
    the "*" appears as the first entry in the list, any previously
    selected tracks are added to by further tracks in the list. Please
    see the help file for the parity command for further information.

50. New Mk5 returns codes 7 and 8 supported. The text of these codes
    are now included in fserr.ctl for expansion for m5 -9xx
    errors. Also some older errors include parenthesises to offset
    minor Mk5 version specific variations.

51. bank_check now invokes "change_pack" procedure when a bank is
    automatically changed. The "change_pack" procedure is intended to
    help remind the operator that the non-selected bank (the old bank)
    should have its pack changed. It is different from the "ready"
    procedure in that it does not halt the schedule (it cannot or the
    schedule would hang), so it may scroll by unnoticed if the
    operator is inattentive. It is defined as a station procedure so
    that it can be customized to include use of special signals
    (bells, buzzers, etc) to help make the operator aware of the
    situation.  Its use is not foolproof, but may encourage timely
    changing of disk modules when they are full.

52. vmk5 removed.  vmk5 is now available from
    ftp://web.haystack.edu/pub/mark5/vMk5/.  As of this writing, the
    version there has been updated to 2.1. This version allows the
    interval that the Mark 5 is queried at to be set. Although
    increasing the interval from the default 2 seconds makes the
    display less responsive, it may be useful if vmk5 creates too much
    communciation load for the Mark 5 or too much computing load on
    the FS computer. If vmk5 is used just to monitor the amount of
    recording time left, an update interval of one minute, 60000
    milliseconds, should be more than adequate.

53. Response time of MET03 WX command improved. The coordination
    between the FS WX command and the metserver daemon has been
    improved. The result is a faster, essentially instantaneous,
    response to a "wx" command.

54. bank_check made more robust. The bank_check command will now not
    check the remaining record time (nor issue the change_pack
    procedure call) if the scan duration has not been set by the
    scan_name command.

55. bank_check does not issue extraneous "change_pack" calls. A bug in
    previous versions that included automatic issuing of the
    "change_pack" procedure caused it to be issued for every scan even
    if it was not appropriate. This has been fixed.


			 B. Changes in DRUDG
				   
drudg opening message date is 030915. The following areas in DRUDG
were modified. Items numbered 3 and above are new since 9.5.13. Items
numbered 6 and above were added after 9.5.15. Items numbered 18 and
above were added after 9.6.4. Items numbered 27 and above were added
after 9.6.5. Items numbered 37 and above were added after 9.6.6. Items
numbered 41 and above were added after 9.6.7. Items numbered 42 and
above were added after 9.6.8.

1. Mk5 disk-only recording.
2. Geo/astro schedule recognition.
3. Option 5 footages fixed.
4. FASTx commands include fractional seconds.
5. Extra digit in RA.
6. Support for new LBA Data Acquisition System.
7. S2 support extended to support new LBA rack.
8. Loader procedure changed for long thin tapes.
9. Loopholes in headstack and track number closed.
10. Polarization included in LO command for geodetic schedules.
11. IF3 patching handled correctly.
12. Changes to header of summary files.
13. Mark5 works correctly with Mk3 modes for non piggyback.
14. Problems with schedules run in continuous mode.
15. Postpass for thin tapes.
16. In Mark5 mode, drudg now displays bytes in the summary listing.
17. Drudg has preliminary support for Mark 5A.
18. Fixed bug in writing setup modes in lstsumo.
19. Modified to output footages for continous mode in
    listsum.
20. Kokee discovered that if you ran procs (option 12), and then
    generated tape labels (option 6), no labels were produced.
21. Snap command incorrectly tried to scheduled post-passes between
    tapes
22. In piggyback mode, only does ready_disc for first tape. Previously
    did for all tape changes.
23. Fixed bug with 2 headstacks. 
24. Changed tape tolerance in determinining new tape from 100 to 150
    ft in knewtp.
25. In label command, indicate start and stop time of labels being
    printed.
26. Modified Mark 5A piggy back mode so that tracks are mapped.
27. List summary changes/fixes.
28. Label changes/fixes.
29. Snap changes/fixes.
30. Interlocks in Piggyback mode.
31. New Mark 5A commands.
32. Better reporting of recording equipment.
33. USB,LSB flag in LO line of procs files.
34. Virtual Arrays.
35. Mark 5A enhancements for flexibility.
36. Track mapping to Mark 5A.
37. S2 schedule segmentation fault fixed
38. GB count for Mark 5 fixed.
39. Set-up procedures query Mark 5A mode
40. postob_mk5a procedure checks Mark 5A disk statistics.
41. postob_mk5a procedure fixed. 
42. postob_mk5a procedure fixed. 

A more detailed discussion of these changes follows.

1. Mk5 disk-only recording. drudg now recognizes Mark 5A or Mark 5P as
   recorder types in Option 11. If your station is doing Mk5-only and
   NOT piggyback, you should use Option 11 to change your recorder
   type to "Mark 5A" which is type 10. The SNAP and procedure files
   generated by drudg will have appropriate disk control commands and
   no tape commands. For stations with Mk4 formatters, the Mark 5P is
   assumed to be connected to the second headstack, so tracks and
   trackform commands are generated for both headstacks, same as for
   piggyback mode.  Mark 5A is handled differently. See item 17 below.

   If you are recording piggy-back, you need to use Option 13 so that
   both tape and disk commands are generated. In this case do not use
   Option 11.

2. Geo/astro schedule recognition. drudg recognizes the type of
   schedule and prints messages indicating whether the schedule is for
   geodesy or astronomy, and whether it's a VEX or standard format
   file. This feature is not used yet, but it is hoped to be reliable.
   The geo/astro decision is made, for a VEX file, based on inclusion
   of the SCHEDULING_PARAMS block.  This block is written for geo VEX
   output files but is not included in SCHED-generated VEX files.

   If you notice an incorrect comment, please let me know so that we
   can make sure this feature works for future needs.

3. Option 5 footages fixed. Footages on the last scan of a pass were
   sometimes indicated as negative numbers. This was only a problem in
   the listing, and did not indicate any actual scheduling errors. The
   negative values were due to a roundoff error in calculating
   footages from reading the .snp file. With the more accurate FASTx
   timing (see next item) the roundoff problem should be reduced. As
   an extra measure of precaution, the footage is set to 0 at the
   beginning of each forward pass if there was a previous FASTR
   command, indicating that the schedule intended to return the tape
   to zero feet to start the next pass.

4. FASTx commands include fractional seconds. The FASTx commands
   output in .snp files are output with the seconds extended to
   centiseconds. This will result in more accurate footage counts in
   the summary listings and in following the scheduled observations.

5. Extra digit in RA. An extra digit is output in the right ascension
   in the SOURCE= command. This was done on request from D. Graham
   since it is useful for pointing for millimeter observing.

6. Support for new LBA Data Acquisition System. LBA is now allowable
   as "electronics_rack_type". DRUDG will generate the setup commands
   for the individual IF processors and an appropriate "trackform"
   procedure for the S2 recorder output. VEX input is via the standard
   "chan_def" (but with an implicit promotion to a 'centreband' filter
   when only one sideband is required and re-use of flipped sidebands
   as necessary - see /usr2/fs/misc/lba/readme.txt for more detail)
   and a slightly modified "if_def" which accepts IFs '1' through '4'.
   This drudg upgrade was provided by Jonathan Quick of HARTRAO.

7. S2 support extended to support new LBA rack.  The S2 recorder type
   was extended with the addition of VEX inputs "S2_data_source"
   specifying the required 2-bit encoding type (either AT or VLBA) and
   "fanout_def" analogous to that for MkIV/VLBA recorders.  This drudg
   upgrade was provided by Jonathan Quick of HARTRAO.

8. Loader procedure changed for long thin tapes.  The "loader"
   procedure for Mark III / Mark IV and VLBA recorders now winds on
   approximately 200ft for thin tapes (tape length longer than
   17000ft) and 100ftfor thick tapes, i.e., to approximately the low
   elow tape sensor trigger point.  This is done by running the tapes
   for 22 seconds (11 seconds for thick tapes) at 135 ips.

9. Loopholes in headstack and track number closed.  A error in the VEX
   input code which incorrectly allowed through headstack 0 and track
   0 was fixed.

10. The LO commands for geodetic schedules will now include the
    polarization, e.g., lo=la,7600.10,usb,rcp,1.

11. Patching of IF3 is handled correctly for stations that have
    IF3. If LO3=L01 then IF3 is patched out. Else it is patched
    in. IF3 commands are issued if, and only if, IF3 is specified in
    the schedule. This is a change from previous versions of drudg
    where IF3 commands were generated regardless of whether it was in
    use or not.

12. Many changes were made to the header of snap summary file. These
    include: A) Showing the names of the setup proceudres the
    different modes, and the IFD procedures.  B) Including descriptive
    information about tape counters only if the specify recorder is
    used in the experiment. C) Recognizing Mark5 recorders.

13. Mark5 works correctly with Mk3 modes for non piggyback. Mark III
    modes do not however work in piggyback.

14. Snap files generatd with the previous version of the Field System
    had extra FASTF and FASTR commands at the end of passes for
    continuous recording mode. This caused problems with RDV36.  This
    bug has been fixed.

15. Drudg now does a post-pass for all thin tapes if the postpass flag
    is true.  This flag is set to true for astro VEX schedules by
    default, and set to false for geo schedules. The postpass is done
    if the last reverse pass on the tape was not continous.  For
    schedules where post-passing is turned on, DRUDG will check to
    make sure that there is enough time to do the post pass for tape
    changes in the middle of an experiment. If there is not, it will
    ignore the post pass, and write an error message. DRUDG does no
    checking at the end of an experiment, since it does not know when
    the next experiment starts.

16. The summary listing for Mark 5A and Mark 5P stations now calculates
    the byte count and displays it instead of footages.

17. Drudg has preliminary support for Mark 5A.

    Drudg now supports two Mark5 modes: Mark 5P and Mark 5A. Mark 5P mode
    should work as it always has. Mark 5A mode is the new operational
    standard. This note summarizes some of the important changes made
    to drudg.

    Note that both Mark 5P and Mark 5A modes must be scheduled as if you
    are using tapes. To generate the appropriate snap and prc files
    you need to change the equipment type using option 11.

      1. Summary listings.  For both Mark 5P and Mark 5A the summary
         listing of the snap file (Option 5) gives the total recording
         space used in Gbytes. This should make it easy to figure out
         the time window for switching banks.

      2. Number of tracks recorded. In Mark 5A mode the number of
         tracks recorded must be 8, 16, 32, or 64.  Drudg determines
         the number of data channels, and then rounds up to the
         nearest 8,16,32 or 64.  If the number of data channnels is:

           A.) Under 4, drudg reports an error.
           B.) More than 32 for a VLBA rack, drudg reports an error.
           C.) Less than the the number of tracks recorded, drudg
               duplicates the initial tracks. For example, if we have
               14 data channels, drudg would use 16 tracks to record
               this. The first two data channels would be duplicated.

      3. Special Mark5 commands. Drudg puts in special Mark5 commands
         in the prc files. Comments are also added explaining the
         wiring requirement for connecting the Mark 5 to the
         formatter. In summary there are four wiring cases: (1) for a
         Mark IV formatter, a Mark 5A is connected to both head
         outputs of the formatter; (2) for a VLBA formatter, a Mark 5A
         is connected to the second recorder output of the formatter
         and can record at most 32 tracks; (3) for a Mark IV
         formatter, a Mark 5P is connected only to the second head
         output, as was done before for piggyback mode; for a VLBA
         formatter, (4) a Mark 5P is connected to the second recorder
         output of the formatter, as was done before for piggyback
         mode.

    If you notice any bugs in drudg, please contact
    jmg@lyra.gsfc.nasa.gov.

18. Fixed bug in writing setup modes in lstsumo. Problem if two
    recorders, but the second recorder is "none".

19. Modified to output footages for continous mode in
    listsum. Previously just gave the footage at the start and end of
    scan, which would typically be something like 200, 17600. Now it
    will indicate when each scan starts.

20. Kokee discovered that if you ran procs (option 12), and then
    generated tape labels (option 6), no labels were produced. I
    tracked this to proc changing an element in common. This bug was
    fixed.

21. Snap command incorrectly tried to scheduled post-passes between
    tapes.  This was not a problem in the sense that Snap checked to
    see if there was enough time, and didn't schedule if there
    wasn't. The reason was because snap looks ahead 1 observation to
    determine if we need to change tapes, etc, and the post-pass
    calculation was "off-by-1".

22. In piggyback mode, only does ready_disc for first tape. Previously
    did for all tape changes.

23. Fixed bug with 2 headstacks.  Drudg made the wrong "pass" command
    with Mark4 and 2 headstacks.

24. Changed tape tolerance in determinining new tape from 100 to 150
    ft in knewtp.

25. In label command, indicate start and stop time of labels being
    printed.

26. Modified Mark 5A piggy back mode so that tracks are mapped. Mark4
    racks and VLBA racks are treated differently.  In Mark4 racks, the
    number of tracks written is rounded up to 8, 16 or 32. These
    tracks are mapped to the second headstack. In the case of 8 or 16,
    these are written to the first N even tracks. In the case of 32,
    these are written to the first 16 even tracks, followed by the odd
    tracks. Some tracks are duplicated to make the number written be
    8, 16 or 32.

    For VLBA mode, the treatment is somewhat different.  If the number
    of channels is less than 16, then the tracks are mapped to the
    even tracks, starting at track 2.  Tracks which already have data
    on them are ignored. Channels are duplicated to make the total
    number of tracks be 8, 16 or 32. This means, for exmaple, that on
    reverse passes, the formatter will output data on the even tracks,
    even though this data is not written out to the tape drive--it is
    picked up by the Mark 5A recorder.

27. List summary changes/fixes.

    A) There was a problem in writing the summary listing if there
    were two tap e recorders in the schedule, and the second was
    "none".

    B) Reported disk storage for Mark 5A and Mark 5P recording (all
    modes) was incorrect in the summary listing. The displayed value
    was the total number of seconds of recording time. This was
    changed to the total number of Gbytes.

    C) Footage in continuous mode. Previously just gave the footage at
    the start and end of the tape pass, which would typically be
    something like 200, 17600. Now it will indicate when each scan
    starts.

28. Label changes/fixes.

    A) Kokee discovered that if you ran procs (option 12), and then
    generated tape labels (option 6), no labels were produced. This
    was traced to procs changing a variable in common.

    B) GGAO had a situation where extra labels were being generated.
    This was traced to an error in the calculation of when we need to
    change tape. In the forward direction, drudg thinks we need to
    change tape if the starting footage of the next observation occurs
    before the ending footage of the current. (In the reverse
    direction the situation is reversed.) There is some "slop" in the
    footage calculations because of the way sked calculates tape
    footages.  Because of this, the "New tape" criteria had a
    tolerance of 100 feet built into it. In the case that GGAO
    discovered, even though the tape direction should not have
    changed, the footage calculated at start of the next observation
    was 120 feet before footage calculated at the end of the current
    observation, which signalled a tape change. I fixed the problem by
    changing the tolerance to 150 feet.

29. Snap changes/fixes.

    A) Postpass. Sometimes snap incorrectly tried to scheduled
    post-passes between tapes. This was traced to a bug in snap. Snap
    should schedule a post-pass (if requested) only if the last pass
    on a tape is not continuous, i.e., if the tape stopped after any
    observation on the last pass. Instead snap was scheduling a
    post-pass if the tape stopped after any observation on the last
    pass, or after the first observation on the new tape.  This is due
    to the look-ahead nature of DRUDG, where DRUDG has to see what is
    happening in the near future to decide if we need to change
    directin, chage tapes etc.  This bug was fixed by changing the
    logic.

    B) Time for tape change.  DRUDG now calculates if there is enough
    time for tape change. It does this by calculating the difference
    in time between the end of the last observation on one tape, and
    the beginning of the first observation on a new tape. This is
    compared with the time required to change tapes as given in the
    schedule. If there is not enough time, an error message is issued.

    C) Time for pre-pass. If there should be a postpass between tapes,
    snap calculates if there is enough time to do it. If there is not,
    the post-pass is skipped, and an error message issued.

    D) Piggyback mode and disc_ready.  Previously the disc_ready
    command was issued any time the tape is changed. Now it is issued
    only for the first tape change.

30. Interlocks in Piggyback mode. Previously it was possible to
    generate files which either wouldn't work or didn't make
    sense. Drudg was modified to make these combinations impossible.

    A) You can now enable piggyback mode only if you are drudging a
    single station. Previously you could toggle piggyback mode for all
    stations. This is a problem because some stations may not have the
    appropriate equipment.

    B) If Mark 5A is in piggyback mode, and Mark 5P piggyback is
    toggled, Mark 5A piggyback is turned off. The same thing happens in
    reverse: if Mark 5P is in piggyback mode, and Mark 5A piggyback is
    toggled, Mark 5P is turned off.

    C) Piggyback is only an option for VLBA or Mark4 formatters.

    D) Piggyback is not an option if the primary recorder type is
    Mark 5A or Mark 5P.

31. New Mark 5A commands.  Several commands appear in the procedures
    for Mark 5A recorders.

32. Better reporting of recording equipment.  The procedure file was
    modified to indicate if it was generated using Mark 5A or Mark 5P in
    piggyback mode.

33. USB,LSB flag in LO line of procs files.  Drudg always had this
    flag be USB. This was corrected to reflect what was actually in the
    schedule.

34. Virtual Arrays

    A significant change made to drudg is the replacement of a large
    array by a smaller "virtual" array. This greatly reduces the
    amount of memory required by DRUDG and makes it run faster. The
    improvement is small but noticable on fast machines with a lot of
    memory, but should be particularly significant on slow machins
    without much memory. The largest array in drudg is ITRAS, which
    gives the track assignment for all combinations of sidebands,
    bits, headstacks, channels, passes, stations, and codes. Hence the
    dimension of ITRAS is:

    (Num Sidebands)*(Num Bits)*(Max Headstacks)*(Max Chan)*
      (Max SubPass)*(Max Stn)*(Max Codes)

    Num Sidebands   = 2
    Num Bits        = 2
    Max Headstacks  = 2
    Max Chan        =20
    Max Subpass     =36
    Max Stations    =30
    Max Codes       =32

    The total size of this array is 5,529,600. Since this array is
    stored as Integer*4, it takes 22 Mbytes of memory to store. This
    is bigger than the total physical RAM on some of the field system
    computers, which may have as little as 16 Mbytes. Accessing or
    changing the elements of the array involve reading or writing
    blocks of memory from/to the harddisk.

    Most elements of this array are non-zero. The maximum number of
    non-zero elements is given by:
    max_stn*max_frq*max_headstack*max_chan = 30*20*2*20=24,000. This
    is a factor of 200 smaller than the full array. In actual
    experiments, the number of non-zero elements is much smaller,
    typically uner 1000. Hence significant savings in memory can be
    made by saving only the non-zero elements.

35. Mark 5A enhancements for flexibility.

    This version of DRUDG offers significant enhancements for Mark
    5A. There are several different versions of Mark 5A recording,
    giving great flexibility to the stations.

    1) Normal Mark 5A. In this mode the Mark 5A is the primary
    recorder. It can record upto 64 tracks of data. If less than 33
    tracks are recorded, then the Set 1 recorder input is connected to
    the:

      A) (Mark4 formatters) the first headstack output of the
      formatter.

      B) (VLBA formatters) first recorder output of the formatter.

    A Mark4 formatter can record up to 64 channels. This is done by
    making the connection described in A above, and in addition
    connecting the Set 2 recorder input to the second headstack output
    of the formatter.

    2) Piggyback Mark 5A. In this mode the Mark 5A is a secondary
    recoreder.  This mode is designed to be used as a "backup" when
    the primary recording is being done using tape. In this mode the
    setup is slightly different depending on whether the formatter is
    Mark4 or VLBA. The Set 1 Mark 5A input is connected to the:

      A) (Mark4 formatters) the second headstack output of the
      formatter.

      B) (VLBA formatters)  second recorder output of the formatter.

    Note that this mode is restricted to less than 33 channels.

    3) Mark 5A Pigwire.  In this mode the Mark 5A recorder is the
    primary recorder, but it is hooked up as if it were in piggyback
    mode.  This mode is restricted to 32 tracks. The advantage of this
    mode is that during the transition period some experiments will be
    recorded onto tape, whereas others will be recorded onto the
    Mark 5A recorder. By recording in Mark 5A Pigwire mode, you can keep
    both a tape recorder and a Mark 5A recorder connected to the
    formatters.

36. Track mapping to Mark 5A.

    The largest change to drudg involves changing of the default track
    assignments when doing any kind of Mark 5A recording. Since this is
    a complicated issue, and drudg does some puzzling things, it is
    worthwhile discussing this in some detail.

    TRACK MAPPING IN NORMAL MARK 5A RECORDING

    The Mark 5A recorder records sets of 8, 16, 32 or 64 tracks of
    data. If the number of tracks recorded on tape would be less than
    8, 16, 32 or 64, the first few tracks are recorded twice to bring
    the total number up of tracks up to 8, 16, 32 or 64.  One other
    restriction is that for less the 33 tracks of data, only even
    tracks are recorded by the Mark 5A. Because of this, for modes
    with less the 33 tracks tracks which would be recorded on odd
    tracks on tapes are mapped to even tracks in Mark 5A VLBA
    recording.

      1) If there are 8 or fewer tape tracks, they are mapped to the
      first 8 even tracks.

      2) If there are between 9 and 16 tape tracks, they are mapped to
      the first 16 even tracks.

      3) If there are between 17 and 32 tape tracks, they are mapped
      to the first 32 tracks.

      4) More than 32 tracks are mapped to 64 tracks.

    In principle, there are many valid ways of assigning tape track
    assignments that would work for tapes.  In order to preserve track
    order and spacing in doing Mark 5A track assignment, it is
    important that the tape track assignments be "standard". Roughly
    this means that if the number of tracks recorded is less than 16

      A) All the tracks are all even or odd

      B) The tracks are closely spaced

      C) They don't span "natural" track boundaries. For example, for
      tracks, the following set are standard track groupings:

        2,4,6,8
        10,12,14,16
        18,20,22,24
        26,28,30,32
        3,5,7,9
        11,13,15,17
        19,21,23,25
        27,29,31,33

      The following are non-standard:

        4,6,8,10
        2,10,18,26
        1,2,3,4

    If any of the Mark 5A recording modes is used, DRUDG will check to
    see if the track assignments are standard. If they are not, it
    will issue an error message.

    Track order and spacing is preserved in doing the track mapping
    from tape to Mark 5A. This is done by subtracting a constant offset
    from the initial track assignment. The initial tape track
    assignments, translated by this offset, are written out
    first. This is followed by the duplicate recordings required to
    bring the number of tracks up to 8, 16 32 or 64.

    Some examples might clarify this.  Suppose that we are recording 4
    tracks.  One of the initial tape passes might be:

      trackform=11,1us,13,1um,15,2us,17,2um

    In Mark 5A recording mode, this is transformed to:

       trackform=2,1us,4,1um,6,2us,8,1um,10,1us,12,1um,14,2us,16,1um
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                         additional tracks written out
                                         to make to fill 8.

    The first 4 track assignments are obtained from the initial track
    assignment by subtracting 8. The next 4 track assignments are the
    first 4 tracks put in the next free slots.

    Another example is Mode C recording, which uses 14 tracks.

    ORIGINAL TAPE TRACK ASSIGNMENTS FORWARD
      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us

    MARK 5A TRACK ASSIGNMENTS
      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us
      trackform=2,1us,32,2us

    The first two lines are the original tape track assignments, which
    assigns 14 tracks. Note that in Mode C, the free slots occur at 2
    and 32. These slots are assigned in the third line, which brings
    the total to 16.  Note that one of these tracks is track 2, which
    must have valid data for MARK 5A to work.

    The reverse pass is slightly more complicated.

    ORIGINAL TAPE TRACK ASSIGNMENTS REVERSE
      trackform=19,1us,5,2us,21,3us,7,4us,23,5us,9,6us,25,7us,11,8us
      trackform=27,9us,13,10us,29,11us,15,12us,31,13us,17,14us

    MARK 5A TRACK ASSIGNMENTS
      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us
      trackform=2,1us,32,2us

    For VLBA formatters we can only record up to 32 tracks. For Mark4
    formatters we can record up to 64 tracks. In this case each head is
    treated independently in mapping the track assignments. For
    example, if we had 20 tracks on each head, for 40 tracks total,
    each head would have 12 tracks duplicated.

    TRACK ASSIGNMENTS IN MARK 5A PIGGYBACK RECORDING.

    Track assignments in piggyback recording are slightly
    different. The considerations about rounding up to 8...etc, and to
    record on track 2 still apply. The main difference is that the
    Mark 5A recorded is now connected to the 2nd headstack, or 2nd
    recorder output. There are two cases, depending on whether we have
    a MARK4A formatter, or a VLBA formatter.

    MARK 5A PIGGYBACK RECORDING WITH MARK4A FORMATTER

    This is the simplest case. Note that we need to make track
    assignments for both the tape, and for the Mark 5A Piggyback
    recorder. The tape track assingments are the the same as
    non-piggyback mode. The Mark 5A piggyback track assignments are the
    same as if were doing Mark 5A recording, but with 100 added to it.
    Again using Mode C as an example:

    FORWARD PASS

      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us
      trackform=118,1us,104,2us,120,3us,106,4us,122,5us,108,6us,124,7us
      trackform=110,8us,126,9us,112,10us,128,11us,114,12us,130,13us
      trackform=116,14us,102,1us,132,2us

    REVERSE PASS

      trackform=19,1us,5,2us,21,3us,7,4us,23,5us,9,6us,25,7us,11,8us
      trackform=27,9us,13,10us,29,11us,15,12us,31,13us,17,14us
      trackform=118,1us,104,2us,120,3us,106,4us,122,5us,108,6us,124,7us
      trackform=110,8us,126,9us,112,10us,128,11us,114,12us,130,13us
      trackform=116,14us,102,1us,132,2us

    The first two lines are for the tape. The next 3 for the MARK 5A
    piggyback recorder. Note that the MARK 5A track assignments do not
    change between passes.

    In the reverse pass we have the unusual situation of enabling odd
    tracks on the first recorder, and even on the 2nd.

    MARK 5A PIGGYBACK RECORDING WITH VLBA FORMATTER

    For VLBA formatters, the situation is somewhat different in that
    the formatter sends the same signal to the two recorder
    outputs. One of the recorder outputs is connected to the tape
    recorder. The other to the MARK 5A recorder. The tracks recorded on
    the recorder are decoupled from the tracks that have data on the
    formatter.

    In the forward direction, the changes are minimal. All that is
    necessary is to enable enough tracks to bring the total up to 8,16
    or 32, and to ensure that track 2 is enabled.

    We will again use Mode C recording to illustrate this.

    FORWARD PASS VLBA FORMATTER MARK 5A PIGGYBACK
      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us
      trackform=2,1us,32,2us

    Note that this has 16 tracks with valid data. The first two lines
    consist of the normal 14 tracks for mode C. The last line consists
    of two additional tracks required to bring the total number of
    tracks upto 16 for Mark 5A recording.

    For the reverse passes, we must enable the normal odd passes for
    the tape, and in addition enable the even tracks for Mark 5A
    recording.

    REVERSE PASS VLBA FORMMATER MARK 5A PIGGYBACK
      trackform=19,1us,5,2us,21,3us,7,4us,23,5us,9,6us,25,7us,11,8us
      trackform=27,9us,13,10us,29,11us,15,12us,31,13us,17,14us
      trackform=18,1us,4,2us,20,3us,6,4us,22,5us,8,6us,24,7us,10,8us
      trackform=26,9us,12,10us,28,11us,14,12us,30,13us,16,14us,2,1us
      trackform=32,2us

    This has 30 tracks of data. The first two lines are the 14 tracks
    for normal mode C recording. The next three lines are the even
    tracks which are enabled for Mark 5A Piggyback recording.

    MARK 5A PIGWIRE RECORDING

    A third Mark 5A recording mode is when the Mark 5A is connected to
    the 2nd headstack (or second recorder output for VLBA formatters).
    The track assignment for this recorder is the same as for the
    Mark 5A recorder operating in Piggyback mode.

37. S2 schedule segmentation fault fixed. In 2002 Jonathan Quick made
    some changes to add LBA support to drudg. Unfortunately, when we
    merged these changes into the standard version, one of the
    subroutines that dealt with S2 support was not correctly changed.
    Because of this there was a mis-match in the number of arguments
    between two subroutines. This resulted in a segmentation
    fault. This bug has since been fixed. 

38. GB count for Mark 5 fixed. A bug in the calculation of gBytes used
    was fixed. Previously it was calculated:
    storage=SampRate*Tracks. The correct calculation is
    storage=SampRate*Tracks/Fanout.

39. Set-up procedures query Mark 5A mode. For any set-up procedure
    that is generated for use with a Mark 5A, either piggyback or
    stand-alone, the command "mk5=mode?" is added to the end of the
    procedure. This command will give some immediate feedback about
    whether the Mark 5A is set-up correctly. If the 6th parameter in
    the response is "s" the Mark 5A is sync'ed or "-" if it is not
    sync'ed.

40. postob_mk5a procedure checks Mark 5A disk statistics. For any
    schedule that uses a Mark 5A, either piggyback or stand-alone, two
    changes related to "postob" occur. The first is that in the SNAP
    file (.snp) the call to the "postob" procedure is replaced with a
    call to "postob_mk5a". The second change is that a "postob_mk5a"
    procedure is automatically added to the experiment procedure
    library. This new procedure contains the command "mk5=stats?"
    eight times to query the disk statistics of the eight disks in the
    standard disk pack and the calls the normal "postob" procedure.
    Checking the disk statistics gives feedback on health of the
    disks.  The use of the "postob_mk5a" was designed so that stations
    would not need to edit their "postob" procedure in order to get
    this functionality depending on whether they using a Mark 5A in an
    experiment or not.

41. postob_mk5a procedure fixed. The command now issues the correct
    command: "mk5=stats?" instead of "mk5a=stats?".

42. postob_mk5a procedure fixed. The command now issues the correct
    command: "mk5=get_stats" instead of "mk5=stats?".

 			    C. Known Bugs

The following is a summary list of known bugs. They are described in
more detail after the list.

1. Do not run "fmset" for extended periods.
2. "odd" and "even" head types not supported for Mark IV & VLBA4.
3. "odd"/"even" head types not supported for VLBA style tapeforms.
4. CHEKR does not check the status of the Mark IV formatter.
5. Extraneous errors when tape is stopped by low tape sensor.
6. "Comm=" command in logex extracts only the first command.
7. S2 error scheme clumsy.
8. No extra spaces allowed in "ibad.ctl" file.
9. ONOFF and FIVPT programs hang.
10. FS SNAP command pages don't list tape drive suffix numbers.
11. LBA rack TPI detector is not useable.

A more detailed discussion of these bugs follows.

1. Do not run "fmset" for extended periods. For stations that have
VLBA, Mark IV back-ends and/or an S2 recorder, the "fmset" program
should not be run for extended periods of time.  The "fmset" program
should be used only to set or briefly verify that the formatter time
is correct.  Do not leave "fmset" running after completing either of
these tasks, especially during an experiment.

The "fmset" program dominates the Field System when it is running and
this is likely to interfere with the running of an experiment or other
activities.  The only way to detect the time from the VLBA formatter
with greater precision than one second it to wait for the seconds
response from the formatter to change.  This requires the FS to
communicate with the formatter almost continuously.  A similar problem
exists for the S2 recorder.  This problem is less severe for the Mark
IV formatter, but extended use of "fmset" in this case should be
avoided as well.  In a future revision, this will be made more robust
so that there will probably be less danger if "fmset" is left running.
However, even in the future "fmset" should only be left running for as
short a time as possible.  A reminder about this is included in the
"fmset" menu.

2. "odd"/"even" head types not supported for Mark IV & VLBA4. The
Mark IV and VLBA4 rack version of the "form" command and the Mark IV
and VLBA4 recorder versions of the "repro" and "parity" commands do
not support the "odd" and "even" parameters for the read and write
head types and reproduce electronics in the "head.ctl" control file.
This means that automatic substitution of odd or even head in passes
that use only even or odd heads respectively does not occur.  The only
correct settings for the read and write head parameters and reproduce
electronics is "all".  This will be fixed in a future revision.
Please let Ed know if you are missing some tracks and need to work
around this limitation.

3. "odd"/"even" head types not supported for VLBA style tapeforms. For
any mode recorded with VLBA style tapeform (14 index positions), the
only correct setting of the read and write head types on the
"head.ctl" is "all".  This will be fixed in a future revision.  Please
let Ed know if you are missing some tracks and need to work around
this limitation.

4. CHEKR does not check the status of the Mark IV formatter.
Implementation of this has been deferred until the formatter
communication problems have been resolved.

5. Extraneous errors when tape is stopped by low tape sensor. When a
tape drive has been commanded to move the tape and then stops because
it hit the low tape sensor (or when S2 recorders hit the BOT or EOT),
"CHEKR" will complain periodically that the tape drive is not in the
correct state.  In principle the FS should be smarter about this.
However, if the tape is managed correctly by the schedule this error
message should never occur.  If it does, then it it an indication that
there is either a problem with: (1) the schedule, (2) the check
procedures, (3) the recorder, or (4) the tape is too short.  If any of
these cases apply they should be corrected.  It is more likely that
this error message will occur when the tape is being controlled
manually.  In this case, issuing an "ET" command will convince the FS
that the tape drive should be stopped and the error message will
cease.

6. "Comm=" command in logex extracts only the first command. The
"comm=" command in "logex" extracts only the first command commanded
and displayed.  This problem was noted by Giuseppe Maccaferri
(Medicina).

7. S2 error scheme clumsy. The error and status response number
reporting scheme for S2 recorders is clumsy.  FS errors that have
mnemonic "rl" are mostly error responses from the recorder or the RCL
interface library that is used to communicate with the recorder.  If
the numeric part of an "rl" error is greater than -130, then it is the
error code returned by the recorder.  If the numeric part is less than
-130, but greater than -300, then add 130 to the value, the absolute
value of the result is the error response code from the RCL library.
For values less than or equal to -300, a FS error has been detected.
Status response codes are all reported with mnemonic "rz" and the
numeric value is the negative of the status response code.  In all
cases an appropriate error or status message is displayed.  These
messages are retained in the log.

8. No extra spaces allowed in "ibad.ctl" file. The format of the
"ibad.ctl" must not contain any leading or embedded spaces.  In system
that use the LLP AT-GPIB driver (pre-FS Linux 4), if either the option
"no_untalk/unlisten_after" is misspelled or an incorrect device name
is supplied, the driver will cause a segmentation violation when it is
initialized and the FS will terminate.  Unfortunately there is no way
to prevent this problem in a general way; it reflects a limitation in
the driver.

9. ONOFF and FIVPT programs hang. The ONOFF and FIVPT programs have
been known to "hang" mysteriously.  This seems to be caused by some
problem with the "go" mechanism that is used to restart the program
when it pauses to allow a SNAP procedure, such as CALON or CALOFF to
execute.  The "go" that is used to restart the program fails for some
reason.  This has been exceedingly difficult to debug because it is
intermittent and fairly rare.  There is however a good work around for
it.  The CALON and CALOFF procedures are called by procedures CALONFP
and CALOFFFP for FIVPT and CALONNF and CALOFFNF for ONOFF.  FIVPT or
ONOFF may hang during (or actually just after) the execution of one
these procedures that FIVPT and ONOFF will typically hang.  If this
happens, you will have to terminate the FS to recover.  You can
prevent it from happening again (for this procedure) by adding the
lines:

!+1s
sy=go fivpt &

to the end of CALONFP or CALOFFFP.  For CALONNF and CALOFFNF, please
add:

!+1s
sy=go onoff &

If you see other situations where FIVPT or ONOFF hang, please let Ed
know.

10. FS SNAP command pages don't list tape drive suffix numbers. The FS
SNAP manual pages and the help pages available through the "help="
command do not reflect when multiple versions are available with
different suffixes depending on the number of drive specified in the
control files. For example, there is only a "tape" page, no "tape1" or
"tape2" page. However, the help facility will display the version of
the command with no suffix when an available command with a suffix is
used. For example, if two drives are defined, then "help=tape1" and
"help=tape2" will work, but "help=tape" will not and vice-versa if
only one drive is defined.

11. LBA rack TPI detector is not useable.  The Australian LBA Data
Acquisition System currently lacks a functional total power detector
though support has been included.  To allow approximate system temperature
calibration, all the setup commands and the TPI detectors of the modules
of a co-exisiting Mark IV rack are currently also available when the rack
type is specified to be LBA4.

III. Installation

If you are installing FS9 for the first time with this version, please
follow the installation instructions in Section 4.5 of the FS9
"Computer Reference" manual or the "nfsload.txt" memo.  In this case
you should also get a copy of the current FS9 "Control Files and Field
System Initialization" manual.

If you are upgrading from versions 9.6.7-9.6.8, please follow steps
(0)-(10) and (25).

If you are upgrading from versions 9.6.5-9.6.6, please follow steps
(0)-(10) and (23)-(25).

If you are upgrading from versions 9.6.0-9.6.4, please follow steps
(0)-(10) and (21)-(25).

If you are upgrading from a version prior to 9.5.12, please upgrade to
that version first, then install this upgrade.

The following instructions are for upgrading from 9.5.12. Please
follow all the steps.

If you are upgrading from version 9.5.15-9.5.17, the instructions for
upgrading from 9.5.12 indicate which steps you can omit.

If you are upgrading from an different version that wasn't mentioned
here, please contact Ed for additional instructions.

(0) Before you begin the upgrade make sure you have a current back-up
of your system in case something goes wrong.  Please refer to the
directions for making disk-to-disk back-ups in Section 5.8 of the FS9
"Computer Reference" manual.  If you are running one of the Debian
distribution kernels and do not have documentation on how to make a
back-up, please contact Ed.  Section 5.7 of the FS9 "Computer
Reference" manual has a discussion of drive ID numbers if you are
unsure about these.  You may choose to install the FS on your back-up
disk for testing and then later copy the back-up onto the primary once
you are satisfied with the new version.  In any event, please be sure
to make a fresh back-up before continuing with the installation.

(1) Please be sure that you have at least 30 MB of free space (use the
"df" UNIX command to check free space) on your "/usr2" partition
before starting the upgrade.  This would probably only be a problem
for stations with 200 MB disks.  If you are tight on space, you may
want to delete old log files and old versions of the FS (except your
most recent one of course).  Since you should have backed-up your
system, you even can delete the "*.[oas]" and executable files of your
most recent version.  You might want to keep the source of the previous
version around for reference if you have room.  You can eliminate the
unnecessary files by "cd"-ing to the old FS directory as "prog" and
doing a "make rmdoto rmexe".  If you have any questions about how to
do this, please contact Ed.

(2) Log-in as prog.

(3) Place a copy of the fs-9.6.9 archive in your "/tmp" directory. For
example you might do the following:

      cd /tmp
      ncftp -u atri.gsfc.nasa.gov
      (enter your account name for the server at prompt)
      (enter your password for the server at prompt)
      cd /fs/dist
      get fs-9.6.9.tar.gz
      quit

Please note "ncftp" will automatically get this file in binary mode.
If you use "ftp" you may have to enable binary mode manually.

If you need to transfer the archive using DOS floppies, please see the
section "IV. Transferring The Update Archive By DOS Floppy" below.

(4) Log-out as prog and log-in as root.

(5) Extract the source from the archive:

      cd /
      tar -xzpf /tmp/fs-9.6.9.tar.gz

(6) Set the link for the new FS version:

      cd /usr2
      ln -sfn fs-9.6.9 fs

(7) VERY IMPORTANT: Log-out as root, and log-in prog.

(8) Make the FS:

      cd /usr2/fs
      make

(9) Remake your station softare. If your station software uses shared
    memory or other resources whose access is controlled by "keys",
    you should probably switch to using "ftok()" to generate the
    keys. If you are the developer of station software for your
    station, you can follow the basic directions in parenthesises at
    the end of this paragraph.  If you are not the developer of
    station software for your station, please skip to the next
    paragraph in this step (9) for instructions on how to reload your
    station software, but please inform the person who develops the
    software for your station about this issue. It is not necessary to
    change this in order to load this FS version. (In order to change
    using ftok() to generate keys, you will need to replace any
    hardwired value for a key, with text like
    'ftok("/usr2/st",1)'. The string "/usr2/st" is suggested to
    associate the key with your station software. The "1" should be
    replaced with any char value, 128 values are possible, that is
    unique for each key you need. Typically the keys are defined in
    '#define' statements in /usr2/st/include/stparams.h.  You will
    also need to make sure that for every source module that uses the
    key definition that the correct headers have been included for
    ftok(). Please see "man ftok" for more information. The modules
    that typically would need to be checked are
    /usr2/st/stalloc/stalloc.c and /usr2/st/include/stlib/setup_st.c,
    but there may be others. You can refer to the default version of
    these routines and the include file in
    /usr2/fs/st.default/st-0.0.0 as examples.)

    The following steps should do the trick to reload your station
    software if you have the "standard" configuration for station
    software:

      cd /usr2/st
      make rmdoto rmexe all

(10) Reboot your computer.

(11) Log in as oper

(12) Set-up the new control files. If you have already updated to
     version 9.5.15 through 9.5.17, you should skip all but dsad.ctl.

       cd /usr2/control
       cp /usr2/fs/st.default/control/flux.ctl .
       cp /usr2/fs/st.default/control/x.rxg .
       cp /usr2/fs/st.default/control/dsad.ctl .

     The "flux.ctl" file should not require editing.

     The "x.rxg" file should be renamed so that the part of the name
     before the dot is mnemonic for what band or receiver you are
     planning to use. Please make copies with unique names and edit
     then for additional bands. The names aren't important, the FS
     will read in all files with the extension ".rxg", up to 20 of
     them. Please edit the file(s) and update it(them) for your
     band(s). The comments should be self explanatory, but here are a
     few hints. The lines you should probably edit are: (1) the LO
     values, this must match the values used in the "LO=..." command
     for the RX you will be using, these can either be a range or up
     to two fixed values; (2) the polarizations available "lcp" and/or
     "rcp", if you have both the order isn't important, but it must
     match the order used in the (next) DPFU line; (3) the DPFUs if
     you know them, one for each polarization in the (previous)
     polarization line, they can be estimated as the Tsys in Kelvin
     divided by the SEFD, if you have no idea, you can use "1000" as a
     dummy values; (4) if you have a gain curve in the form of "ELEV
     POLY" or "ALTAZ POLY" , you can enter the coefficients on the
     appropriate line zeroth order term first, if you have no gain
     curve, leave the value as "1.0"; (5) the tcal versus frequency
     table, if you have this information, if not, you can enter a
     single value with a freqeuncy in the band (MHz) and the FS will
     use that for all frequencies for that LO; (6) for the tcal versus
     frequency table group all entires by polarization and then sort
     them into ascending frequency order within each polarization; (7)
     you can leave the Trec value as zero and the Spill-over table
     empty, but if you have these values, please supply them, if Trec
     is non-zero it will be possible to correct for opacity when
     fitting a gain curve, the more accurate the spill-over table si
     the more accurate the opactity corrections and fitting for Trec
     will be; and (8) do not have a given LO value specified in more
     than one .rxg file.  Please note that the error messages for the
     parsing of these files are not complete yet. In general, the the
     hundreds digit of the number indicates which line the error
     occurred in (-7xx is for the tcal table). Also it may have some
     trouble with blank lines and/or missing (or present? I'm not
     sure) new-lines at the end of the file.

     You should make a version of ctlpo.ctl for each band that will
     want to measure the gain and tcal versus frequency for. Name them
     appropriately, perhaps matching the part of the name before the
     dot in the corresponding .rxg file. You can the customize the
     set-up for each band. If you only have one band or band
     combination (such as S/X), you may wish to leave your ctlpo.ctl
     unchanged for now.

     If you have LBA data acquisition systems connected, check that the
     dataset addresses in "dsad.ctl" correspond to those set by the jumpers
     on the backplane of each DAS, with 'd1' corresponding to the DAS you
     intend to use for VLBI recording (which will then be IFPs 1 and 2.)

(13) Modify your procedure files. You should skip this step if you
     have already updated to version 9.5.15 through 9.5.17 (However,
     if you have copied over the new default point.prc in a previous
     update, please edit the VIRGOA procedure in the point.prc
     procedure file and remove the dash in the name field of the
     source= command, so that it says "virgoa". If you are upgrading
     from an earlier version, you will need to make this change for
     all source= command with dashes in them, please see below). For
     station.prc:

     Please see the new default version of PREOB, MIDOB, CALTSYS, and
     MIDTP in the default procedure library for your equipment in
     /usr2/fs/st.default/proc. Update your versions to agree with the
     new defaults.  The naming conventions for these files are:

        Equipment      Prefix letters  Station Library
        Rack/Drive1/Drive2

        K42/K42            k42         k42station.prc
        K42K3/VLBA         k42k3v      k42k3vstation.prc
        K42MK4/VLBA        k42mk4v     k42mk4vstation.prc
        K42MK4/VLBAB/VLBAB k42mk4vb    k42mk4vstation2.prc
        LBA/S2             ls2         ls2station.prc
        LBA4/S2            l4s2        l4s2station.prc
        Mk3/Mk3A                       station.prc
        Mk4/Mk4            4           4station.prc
        Mk4/VLBA4          4v4         4v4station.prc
        NONE/S2            s2          s2station.prc
        VLBA/S2            vs2         vs2station.prc
        VLBA/VLBA          v           vstation.prc
        VLBA/VLBA2         v2          v2station.prc
        VLBA/VLBA/VLBA     v           vstation2.prc
        VLBA4/VLBA4        v4          v4station.prc
        VLBA4/VLBA42       v42         v42station.prc

     Please delete all CALTEMPx, FLUXx, and BEAMx commands.

     Please delete the CALTEMPS procedure and any uses of it.

     If you maintain more than one version of station.prc for
     different equipment configurations, please me sure to update all
     versions.

     For point.prc, it may be easiest to just copy the new default
     point.prc from /usr2/fs/st.default/proc to /usr2/control and edit
     that. If you do this, the only changes that should be needed are
     to select the detectors for FIVEPT and ONOFF and the scan axes
     for FIVEPT.  Examples for two different cases are included in the
     default ACQUIRE procedure. You may want to customize other
     features like the integration time. You should make a copy of the
     ACQUIRE procedure that is specific for each band you intend to
     measure gain and Tcal data for (again using the name before the
     dot in the corresponding .rxg file as part of the procedure name
     is suggested). Each version of the ACQUIRE procedure should open
     a log with a name specific for the receiver under test.  After
     the log opening command, a "CALRX=..." command for the bands
     under test should be inserted. The CALRX commands must give the
     part of the name before the dot in the corresponding .rxg file
     and it must have the same LO definition parameters as in that
     file.  Please see the CALRX command help page for details on the
     parameters.

     If you edit your existing point.prc library: you will need to
     delete any FLUXx and BEAMx commands; and modify the parameters of
     the ONOFF command in INITP; delete additional FIVEPT and ONOFF
     commands in PRESUN, POSTSUN, PREMOON, and POSTMOON (they are no
     longer necessary since FIVPT and ONOFF now compensate for the
     size of source automatically); and change any source names with
     the hyphens to remove the hyphens (this will probably be cas-a
     cygnus-a, taurus-a, and virgo-a), source names must match the
     names in flux.ctl in order for the correct flux value to be used,
     please note that "casa" is a special name that invokes a model
     for decreasing flux as a function of time. You will also need to
     define the additional ACQUIRE procedures described above.

(13) Add the lines for LBA rack and MET3 support to the equip.ctl
     file. As oper:

       cd /usr2/control
       tail -7 /usr2/fs/st.default/control/equip.ctl >> equip.ctl

     Now edit equip.ctl and make sure there is no blank line between
     the Mark IV firmware version and the new LBA parameters. Fill in
     the number of LBA data acquisition systems connected, whether to
     switch the 160MHz anti-alias filters in or out and whether the
     systems get their input from the internal 8-bit samplers or from
     an external 4-bit source (typically only at the Australia
     Telescope Compact Array.)  If you do not have an LBA system, no
     change in the default values is needed.  And of course if you
     actually want to use the LBA support, set the rack type to "lba"
     (or "lba4" if you want to use Mark4 TPI detectors.)

     If you have a MET3 weather sensor and have set-up the metserver,
     change the met sensor type to "met3".

     If you maintain more than one version of equip.ctl for different
     equipment configurations, please me sure to update all versions.

(14) Add the lines for the "dscon" ATNF dataset bus controller to the
     dev.ctl file. As oper:

       cd /usr2/control
       tail -2 /usr2/fs/st.default/control/dev.ctl >> dev.ctl

     If you have LBA data acquisition systems connected, fill in the
     serial port device name and required baud rate.

     If you maintain more than one version of dev.ctl for different
     equipment configurations, please me sure to update all versions.

(15) If you do have an LBA data acquisition system, and are using the
     standard FS display layout and hot-keys, you will probably want to
     add support for the new "monit4" display process.  As oper:

     	cp /usr2/fs/st.default/oper/.Xresources ~/
     	cp /usr2/fs/st.default/oper/.fvwmrc ~/

     and similarly as prog:

     	cp /usr2/fs/st.default/prog/.Xresources ~/
     	cp /usr2/fs/st.default/prog/.fvwmrc ~/

     or merge the new information by hand.

(16) For the new combination of LBA rack and S2 recorder, there are two
     corresponding new station libraries.  If your station operates with
     this combination of equipment then as oper:

        cd /usr2/proc

        cp /usr2/fs/st.default/proc/l4s2station.prc station.prc
           or
        cp /usr2/fs/st.default/proc/ls2station.prc station.prc

        chmod go+rw station.prc

     for LBA with and without Mark4 respectively and customise it to
     suit your local settings.

(17) Add the "exper_initi" procedure to your station procedure
     library. It is best to do this with PFMED. The procedure should
     have one line in it, which should be a call to "sched_initi".
     This procedure will already be in place if you did step
     (16). Explicit instructions for creating the "exper_initi"
     procedure:

        pfmed
          pf,station
          vi,exper_initi
             enter 'a' (vi command, don't include quotes)
             enter 'sched_initi' (text with no quotes)
             Press the Escape key
             enter ':wq' (vi command, don't include quotes)
          ::

     If you maintain more than one version of station.prc for
     different equipment configurations, please me sure to update all
     versions.

(18) If you have a Mark III/IV rack with an IF3 module, please check
     any IFDxx set-up procedures you have in your procedure
     libraries. Older versions of these procedures did not take IF3
     properly into account and only listed VCs 5-8 as connected to IF3
     when the frequency sequence was a wide X-band. Most geodetic
     stations have VCs 5-8 permanent connected to IF3. If you do,
     please make sure the patch= commands to agree with the
     wiring. You may need to adjust the example settings below for
     your equipment:

       patch=
       patch=lo1,1l,2l,3l,4h
       patch=lo2,9l,10l,11l,12h,13h,14h
       patch=lo3,5h,6h,7h,8h

     In addition, for narrow-band set-ups, you may need to add a
     lo=... line for lo3, this should be grouped with the other
     lo=... commands.  You may need to adjust the example settings
     below for your equipment:

       lo=
       lo=lo1,8080.00,usb,rcp,1
       lo=lo2,2020.00,usb,rcp,1
       lo=lo3,8080.00,usb,rcp,1

     Please be sure all IFD set-up procedures in your libraries have
     the correct patching. If they do, the "ifadjust" command should
     work well for these set-ups.

     If you maintain more than one version of station.prc and other
     libraries for different equipment configurations, please me sure
     to update all versions.

(19) Please check that all lo=... commands in the IFDxx (for example,
     xx=SX) in your procedures libraries specify the LO side-band and
     polarization as well as the LO value. The new CALTEMP and TSYS
     commands will not work unless this information is supplied.

(20) Update your stcmd.ctl file for the new format. The commands:

        cd /usr2/control
        /usr2/fs/misc/cmdctlfix4 stcmd.ctl

     should do it automatically.  You will need to rename or delete
     your old "stcmd.bak" if it already exists.  If all your station
     commands are hardware independent, i.e., the equipment bit fields
     are "FFFFFF", as they probably should be, this should work with
     no problems.  The result for hardware independent commands should
     be "FFFFFFFFF".  You should check the contents of the file to
     make sure they are correct.

     If you haven't updated your "stcmd.ctl" file since installing 9.5
     your equipment bit fields may still be "1F1F". You can correct
     this before running "cmdctlfix4" by first running "cmdctlfix3"
     and renaming or deleting "stcmd.bak".

     If you haven't updated your "stcmd.ctl" file since installing
     9.4, your equipment bit fields may still be "FF". You can correct
     this before running "cmdctlfix3" by first running "cmdctlfix2"
     and renaming or deleting "stcmd.bak".

     If you haven't updated your "stcmd.ctl" file since the S2
     equipment support was added, your equipment bits field may be
     still be "77". You can correct this before running "cmdctlfix2"
     by first running "cmdctlfix" and renaming or deleting
     "stcmd.bak".

     Please note that if your "stcmd.ctl" has been partially or
     incorrectly updated in the past, "cmdctlfix", cmdctlfix2",
     "cmdctlfix3", and "cmdctlfix4" will do the best they can and
     print a warning.

(21) If you are upgrading from a previous 9.6 version, i.e.,
     9.6.0-9.6.4, please update your .rxg files to the new format. You
     can do this with the script rxgfix:

       cd /usr2/control
       /usr2/fs/misc/rxgfix *.rxg

     If you have .rxg files in other directories, please be sure to
     "cd" to thise directories and run the script there. Please note
     that the rxgfix script will only update files that have not
     already been updated.

(22) This item does not have to be done immediately as part of the
     upgrade; it can be deferred for now. Several default oper and
     prog "rc" or configuration files have been improved. Some of
     these you should definitely update, others are optional. The ones
     you should update in the oper and prog home directories are
     .cshrc and .fvwmrc and .Xresources. The new versions can be found
     in /usr2/fs/st.default/oper and /usr2/fs/st.default/prog. The
     best way to install them is probably to use "diff" to compare the
     new files to the ones you are using and then decide how to make
     the appropriate changes in the versions you are using. It is
     optional to add the .fvwm2rc files to the oper and prog home
     directories.  Installing .fvwm2rc will cause the fvwm2 to be used
     as the window manager instead of fvwm. You should check that this
     works properly for your system before using it. You can test it
     by copying the default file to the appropriate home directory and
     logging out and back in. If the X display features don't work
     satisfactorily, you can delete the .fvwm2rc file and it will
     revert back to fvwm next time you login. Please note that the
     default .fvwm2rc is supposed to provide the same functionality of
     the default .fvwmrc file. If you have made changes to your
     .fvwmrc file, these will not appear in the default .fvwm2rc
     file. If your system has the fvwmrc_convert utility you can try
     to use this to convert your current .fvwmrc file to a more
     complete .fvwm2rc file. You can also e-mail your .fvwmrc file to
     Ed (weh@ivscc.gsfc.nasa.gov) and he will convert it and send back
     the new one.

(23) If you are upgrading from a previous 9.6 version, i.e.,
     9.6.0-9.6.6, and you have installed the metclient and/or
     metserver packages for use with the MET03 meteorological sensor
     on your machine, please update it with the new source code. If
     you have not modified the metclient code and are using the
     standard station software configuration, then the following
     should work. Log in as prog and enter the following commands for
     metclient:

       cd /usr2/st/metclient/src
       cp -a /usr2/fs/st.default/st-0.0.0/metclient/src/metclient.c .
       cd ..
       make

     For metserver use the following commands:

       cd /usr2/st/metserver/src
       cp -a /usr2/fs/st.default/st-0.0.0/metserver/src/metget.c .
       cd ..
       make

     If either of these daemons are running in backgroud, you will
     need to restart them. The easiest way to do this is probably to
     reboot.

(24) Add the "change_pack" procedure to your station.prc procedure
     file. This is new procedure used by the FS to notify the operator
     that the disk module in the a mark 5A recorder needs to be
     changed. As "oper", with the FS not running, you should be able
     to do this by issuing the commands:

       cd /usr2/proc
       cat /usr2/fs/st.default/proc/change_pack.prc >>station.prc

     If you maintain more than one version of station.prc for
     different equipment configurations, please me sure to append this
     procedure to all versions.

(25) Test the FS.  Generally speaking a fairly thorough test is to run
     a test experiment: start with DRUDG-ing a schedule, executing
     part of it (preferably at least a tape change and a parity check
     in each direction), do any normal post-experiment plotting and
     clean-up that you do.  The idea here is to verify that everything
     works as you expect for normal operations.  In particular for
     this upgrade you should also test the CALTSYS, PREOB, and MIDOB
     procedures and also verify that ONOFF and FIVPT work as expected.

     If your CALTEMP and TSYS commands return zero or bizarre values,
     check the following: (1) you have set-up the rack with FS, in
     particular that the correct LO=... commands (and
     patch=... commands for Mark III/IV) have been executed, (2) that
     the LO=... commands specify the LO side-band and polarization
     parameters, (3) that you have an .rxg file that specifies the
     calibration data for each of the LO settings in use (no specific
     LO value should be occur in more than on .rxg file.), in
     particular that you specified the correct LO settings and have
     made entries in the tcal table for the polarizations in use, and
     (4) that you have included the tpdiff command in your caltsys
     procedure at the appropriate place.

VII. Transferring The Update Archive By DOS Floppy

In order to assist sites that need to transfer the FS archive by DOS
floppy, "split" files of the fs-9.6.9.tar.gz archive have been placed
in the /fs/dist directory on atri.gsfc.nasa.gov.  These files are
small enough to each fit on 1.44 MB 3.5" floppy.  The files are:

fs9609tg.aa
fs9609tg.ab

If you need to use DOS floppies to get files to the FS computer,
please copy these files to some directory such as /tmp on the FS
computer and then execute the command:

cat fs9609tg.* >fs-9.6.9.tar.gz

This will create an exact image of the original fs-9.6.9.tar.gz
archive on your computer.  Please be sure to use binary transfer when
getting the files from atri or kurp-ftp.
