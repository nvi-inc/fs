File: /usr2/fs-9.11.2/misc/fs9112up.txt  Version: 2.6  Date: 130307

I. Introduction

This memo is divided into three sections:

   I.   Introduction.
   II.  Changes Since Version 9.10.4
   III. Installation

Please print this notice and read it carefully before installing the
new version.

This update is intended for all stations.  Stations with a previous
version of 9.11.x should upgrade as soon as possible if any of the
following issues affects them: (1) MAT serial I/O problems (described
in FS update item 11 below), (2) extraneous garabage characters are
displayed in Tsys/monit3 window (see FS update item 20 below), and (3)
stations with non-standard racks, such as the KVAZAR stations have
trouble DRUDG-ing schedules that use non-VSI4 track maps with non-VSI4
racks (see DRUDG update item 15).

Please note that despite a significant amount of pre-release testing,
the new version of gnplt has been found to have some bugs.  The two
that have been discovered, poor scaling if only the DPFU or Tcal is
updated from the gain data (adjusting the DPFU and the gain curve
together seems to be okay) has been fixed for 9.11.2.  However, there
may be other problems, particularly if your station uses ALTAZ (vs
ELEV) gain curves.  If there is any doubt that you are getting good
results (and probably if you use ALTAZ gain curves at all), please use
the old gnplt, which is available as gnplt1.  (However, there are
rumors of long standing problems with ALTAZ in gnplt1 as well.)  The
FS 9.11.x version of gnplt1 supports two Trec values per RXG file so
it can be used with 9.11.x RXG files without modification.  The new
gnplt will be more thouroghly debugged later this year.  This is a
very complex program and it is difficult to test it completely.  If
you notice particular problems, please be sure to inform Ed so that we
can make sure they are addressed.

All stations should be aware that experiment procedure generated with
previous FS versions may not work with the new one.  In particular
set-up procedures for Mark 5 and VLBA5 racks may not work because of
changes in the handling of tpicd.  You should always DRUDG the .snp
and .prc files for an experiment with the version of DRUDG that came
with the version of the FS you will be using to run the experiment.

This version, 9.11.2 is a minor update to 9.11.1.  The only
significant change in the installation procedure is that if you have a
VSI4 device (typically for MArk5 and VLBA5 rqcks) you should make sure
that you have a "vsi4" read back command at the start of "initi".
Please see FS update item (11) and installation step (14D) for more
details.  The installation instructions identify the sub-set of steps
need to bring everything up to date from 9.11.1.

If you have version 9.11.0 installed in addition to the information
about about upgrading from 9.11.1, the folowing information is
relevent to updating to 9.11.2: There is one significant change and
some update instruction corrections and improvements.  The change in
the new version is that both Mark 5 and DBBC communications will now
reconnect to the device on the next attempted transaction if the
device is restarted while the FS is running.  This is described more
fully as FS change (19) below.  There is also now a DRUDG change (14),
the default_dbc_if_inputs parameter in skedf.ctl.  The description of
which was omitted from the 9.11.0 update notice (but the feature was
in DRUDG).  The update instruction improvements are the addition of
step (13F) for updating skedf.ctl, if needed, and step (14E) to
correct for errors in default DBBC station procedure libraries in
9.11.0.  Installation step (14E) also details the changes in the DBBC
default procedure libraries from 9.11.0.  Other typographic errors
were also corrected.  The installation instructions identify the
sub-set of steps need to bring everything up to date from 9.11.0.

II. Changes Since Version 9.10.4

This section is divided into three sub-sections: A. Changes in the FS,
B. Changes in DRUDG, and C. Known FS Bugs.  Each sub-section starts
with a summary of the items covered followed by a more detailed
description.

			 A. Changes in the FS

The following is a summary of FS changes since 9.10.4.  Item 19 was
added for 9.11.1.  Items 3 and 11 was expanded and items 20 and above were
addded for 9.11.2.

1.  Support for DBBC DDC personality added.
2.  The "day 49 bug" is fixed.
3.  New gnplt.
4.  The FS and gain calibration tools support two Trec values in .rxg
    files.
5.  Protection from issuing "problematic" commands during Mark 5B
    recording.
6.  New SATELLITE command.
7.  New HOLOG command for antenna holography.
8.  Pointing data analysis programs now support X-EL ("Cross-EL")
    analysis plotting and formal error constants.
9.  New SNAP procedure based acquisition feature for ONOFF.
10. Improved metserver/metclient software.
11. MATCN serial-I/O problem workaround.
12. Change in mk5cn handling of input from Mark 5 recorders.
13. Special source names have source coordinates set to zero.
14. Antenna= command bug with antenna device /dev/null fixed.
15. New pointing model term 23.
16. The obsolete "calrx" command was removed.
17. Installation and customization documents for FSL8 are included in
    /usr2/fs/misc.
18. New example station procedure files for DBBCs.
19. Improve Mark 5 and DDBC processing if Mark 5 or DBBC is restarted.
20. Fix Tsys/monit3 display problem for Mark III/IV/5 racks.
21. The fivpt "xoffset" record now includes the source name.
22. Fix autoftp for DBBC racks.

A more detailed discussion of these changes follows.

1.  Support for DBBC DDC personality added.  The PFB personality is
    not supported at this time.  The new support includes commands:
    bbcNN, ifX, cont_cal, and form commands to control and monitor the
    DBBC.  Tsys, pointing, and gain measurements are supported with
    both continuous (low) cal and non-continuous (high) cal.  The
    fmset program supports the DBBC 1 PPS sync. Only versions v100,
    v101, and v102 of the DBBC DDC personality are supported.  Version
    v103 is not supported yet (but may work with the FS, if you select
    v102 in the equip.ctl file, but doing so will cause a version
    conflict error to be generated each time the "form=..."  command
    is issued.).

    To enable DBBC support the rack type in the equip.ctl file must be
    selected as "dbbc".  New lines were added to equip.ctl to specify:
    (1) the firmware versions (DDBC and PFB) of the DBBC, (2) the
    number of IF conditioning modules present, and (3) IF conditioning
    module detector conversion factors used for the conversion from
    counts to power for each conditioning module.  Please see
    /usr2/fs/st.default/control/equip.ctl for details on the new lines
    in equip.ctl.

    The new commands for the DBBC: bbcnn (nn=01-16), ifx (x=a-d),
    cont_cal, form, and dbbc are documented in the SNAP help command.
    To see this documentation use "help=..." command in the FS when
    DBBC is selected as the rack type.

    A fuller discussion of the DBBC support is available in
    /usr2/fs/misc/dbbc.txt.

2.  The "day 49 bug" is fixed.  This fix works around a change in the
    kernel times() system call that caused the FS to lose track of the
    time after about 49 days.  The work around should allow the FS
    time to be correct for up to about 248 days ("the end of time")
    before a reboot is required.  It is expected that the system will
    be rebooted at least that often, but just in case it isn't, for a
    30 days prior to "the end of time", the setcl program will issue a
    warning that a reboot is needed every time it is run. ("setcl"
    should be run in "midob" for every scan to track for formatter
    time offset.)  After "the end of time" it will complain every time
    it is run for up to about another 248 days that a reboot is
    required (timing may not be reliable during this period).  There
    is also a small chance that if the FS is running at the "end of
    time", a false error return by the times() call will cause the FS
    to abort. This possibility exists for 0.01 seconds.

    This work around is not completely safe, particularly if more than
    496 days have passed since the last boot or if the time is sampled
    in the critical 0.01 seconds after 248 days since the last boot
    when the false error is returned, but it is fairly comprehensive
    and nothing is completely safe.

3.  New gnplt. A new version of gnplt is included in this version of
    the FS.  It is written in Python and is much quicker than the
    previous version, especially for large data sets.  Its operation
    is similar to the old version which is available also as gnplt1 in
    case a serious bugs is discovered.  The two that have been
    discovered, poor scaling if only the DPFU or Tcal is updated from
    the gain data (adjusting the DPFU and the gain curve together
    seems to be okay) has been fixed for 9.11.2.  However, there may
    be other problems, particularly if your station uses ALTAZ (vs
    ELEV) gain curves.  If there is any doubt that you are getting
    good results (and probably if you use ALTAZ gain curves at all),
    please use the old gnplt: gnplt1. (However, there are rumors of
    long standing problems with ALTAZ in gnplt1 as well.) 

    The new gnplt will be more thouroghly debugged later this year.
    This is a very complex program and it is difficult to test it
    completely.  If you notice particular problems, please be sure to
    inform Ed so that we can make sure they are addressed.

    The new version was written by an intern at GSFC, Tomas Gille,
    from Chalmers University in Sweden.  Another intern, Hans
    Salomonsson, also from Chalmers, adding a simulation capability to
    validate the program.  Pablo de Vicente (Yebes) fixed a bug in the
    parsing of space delimited fields in the data files.  Andrea
    Orlati (Medicina) and Jonathan Quick (HartRAO) tested the program
    in the field.  Initial results indicate that the new version is
    working correctly.  However, due to the complexity of the program
    and the data it is used on, it is hard to be sure there are no
    serious problems.  Please use it with care and make sure the
    results are reasonable before using them.  If you notice any
    problems, large or small, please report them to
    Ed.Himwich@nasa.gov so that we can fix them.  Documentation is
    available in /usr2/fs/gnplt/gnplt2_documentation.pdf,

4.  The FS and gain calibration tools support two Trec values in .rxg
    files.  Values can now be specified for each polarization.

5.  Protection from issuing "problematic" commands during Mark 5B
    recording.  There are now inter-locks to make it more difficult to
    accidently send a Mark 5B commands that may cause problems while
    it is recording.  Specifically, the "mk5b_mode" command and
    "fmset" sync and time-setting functions require over-rides if the
    Mark 5B is recording.  In the case of the "mk5_mode" command, the
    user must supply an additional parameter to override the
    inter-lock (much like the over-ride needed for the "terminate"
    command if a Mark 5 is recording).  See the output of
    "help=mk5b_mode" for more details.  For "fmset", the user must
    answer an extra query to override the interlock.  The approach of
    allowing the interlocks to be overridden is intended to give the
    operator full functionality if it is needed while discouraging
    accidental use of these functions while recording since they can
    cause problems.  It is recommanded to NOT override the
    inter-locks.

    An important point to understand is that these interlocks depend
    on the last commanded recording state given by "disk_record=..."
    command. In particular this means that if a FS re-start occurs,
    e.g., after a crash, the FS will not know whether the Mark 5B is
    recording.  In such cases it would be prudent to stop Mark 5B
    recording if it is active when the FS is re-started.  This will be
    handled more gracefully in the next FS release.

6.  New SATELLITE command.  This is a new command to support pointing
    the antenna at satellites. This is based on the amateur radio
    program, predict, which uses the SGP4 propagation model.  The
    provided "satellite" command is useful for pointing the antenna at
    a satellite in R.A./Dec. coordinates of date, or fixed Az/El
    coordinates.  The former may be useful if the satellite is moving
    slowly relative to the celestial sphere and the latter if it is
    moving slowly in local frame (e.g. a geostationary satellite).
    This command cannot by itself be used to track an arbitrary
    satellite trajectory.  However, it does internally generate a one
    second ephemeris for the next 24 hours for a satellite so it can
    be tracked by antcn if that capability is implemented.  There is
    also a "satoff" command that allows the tracking to be offset with
    a time-like offset. Documentation for these features, including
    installation instructions, is available in
    /usr2/fs/satellites.txt.

    It is expected that this capability will be expanded in the next
    FS releases.  Specific improvements that are expected include: (1)
    a capability to periodically re-command the antenna pointing in
    R.A./Dec. mode and Az/El mode to simulate tracking of slow moving
    satellites, (2) an "overpass" function (in recognition of Michael
    Moya Espinosa's contributions in developing a similar tool,
    SATTRACK, for satellite tracking with the FS at Onsala) that will
    show the next rise, set, and highest elevation of a satellite's
    next pass, (3) a listing function to show the Az-El of the
    satellite's next pass with one minute intervals, (4) a capability
    to read an ephemeris from a disk file, (5) ability to run FIVPT to
    peak on a satellite using along and cross track offsets, and (6) a
    software toolbox to assist in implementing direct satellite
    tracking in antcn.

7.  New HOLOG command for antenna holography.  This command can be
    used to implement data acquisition for antenna holography using a
    Boustrophedon ("as the ox plows") scan.  Please see "help=holog"
    for more information.

8.  Pointing data analysis programs now support X-EL ("Cross-EL")
    analysis plotting and formal error constants for AZEL antennas.
    This is also true for "Cross-Y" and "Cross-Dec" for XY and HADC
    antenna types.

    In this approach for plotting, offsets of the first antenna
    coordinate (which is longitude-like) is corrected by the cosine of
    the second antenna coordinate (which is latitude-like) to give the
    "Cross" coordinate.  This results in the size of offsets at
    different positions of the second antenna coordinate being
    directly comparable.  This is useful for evaluating the solution
    residuals.  However it does not change the pointing model or the
    results of the pointing analysis (the model expressed in "cross"
    coorinates gives identical result to the model in "non-cross"
    coordinates), just the visual presentation of the results.

    The formal error constants (for modeling the misfit of the data)
    can now be determined for the first antenna coordinate as a
    constant divided by 1/cosine(second antenna coordinate).  This has
    the effect of making the first antenna coordinate formal error
    constant representative of the angular resolution on the sky
    rather than the encoder resolution.

    Preliminary tests indicate that these changes give superior
    results for at least some antennas: (1) it is easier to identify
    outliers because the scatter of the displayed cross coordinate
    offsets are more second coordinate independent and (2) the
    statistical results for the compensated first coordinate formal
    error constant give a more uniform residual distribution over the
    second coordinate.

    However, it is not clear that these changes will improve results
    for all antennas.  Consequently, the use of these features can be
    controlled on a data set by data set basis from the parpo.ctl
    file.  The selected state is retained in the generated XTRAC
    output file (and can be changed there as well) for subsequent
    analysis of that data set.  It is recommended that all stations
    turn these features on initially.  Making this change is covered
    in the installation notes.

9.  New SNAP procedure based acquisition feature for ONOFF.  This
    feature allows a SNAP procedure to be used to collect other data
    during the first on source and off source points during ONOFF
    execution.  This might for example be used to trigger a GPIB
    controlled spectrum analyzer to collect power spectra.  Please see
    "help=onoff" for more details.  A script used during the FS
    installation procedure adjusts existing ONOFF= commands in local
    SNAP procedures libraries for this change.

10. Improved metserver/metclient software. These sample programs for
    serving and recording MET3/4 have been improved.  They now report
    current (and correctly time-tagged) data and the error reporting
    is better and mroe uniform.  The epoch for recording data in
    metclient is now modulo the recording interval, e.g,. if the
    interval is 60 seconds, the data are sampled and recorded on whole
    minutes.  The socket for TCP/IP is now more easily adjusted and a
    parameter in equip.ctl can used to indicate to the FS what socket
    is in use.  The latter change is covered in the FS installation
    instructions.  Please see the /usr2/fs/st.default/met* directories
    for more information on metserver/metclient.

11. MATCN serial-I/O problem workaround.  A problem with MATCN for
    certain kernels (at least Lenny) can occur causing MAT serial
    communication to fail.  A work around for this has been
    implemented.  It will be used on the first MAT communication after
    each FS start, but only if it is needed.  If used it will cause a
    30 second pause in FS execution.  Appropriate warning messages are
    printed in this case.  Please be aware that this pause will be
    frustrating if occurs during an attempt to quickly start (or
    restart) the FS.  Please make allowances for this if possible.  As
    unpleasent as it is, this is the only solution we have been able
    to find.

    In order for the work around to work correctly, the first MAT
    communication must be a read.  Practically speaking the only MAT
    based command that does not read is the "vsi4=..." set-up command.
    Therefore stations with a VSI4 device (typically ones with Mark 5
    and VLBA5 racks) it is recommend that they put a "vsi4" read back
    command as the first command in "initi".  This is covered in
    installation step 14D below.

    After the work around is executed (or if it is not needed on the
    first MAT read communication) it will not be needed again until
    the next FS start.  The problem seems to occur only on systems
    that are using anither serial line for communication.  If you find
    that the workaround is ever being executed on your system, please
    contact Ed (Ed.Himwich@ansa.gov).  It may be that this problem can
    be avoided by recoding MAT serial I/O to use termios.h structures
    rather than termio.h structures.  That may also obviate the need
    for a serial I/O work-around previously implemented in MCBCN.
    These issues will be investigated for a future release.

12. Change in mk5cn handling of input from Mark 5 recorders.  The use
    fgets() calls to read from Mark5 devices was changed to use
    getch(), which should be more reliable if responses are for some
    reason split between two or more packets.  The error messages for
    time-outs for opening and for reading from the device were
    improved as well.

13. Special source names have source coordinates set to zero. If one
    of the special source names that don't allow coordinates to be
    commanded (see help=source) is used, the command coordinates are
    automatically set to zero.  There is now a new special source name
    in this category, "boresight" as well.

14. Antenna= command bug with antenna device /dev/null fixed.  This
    bug caused class numbers to be exhausted, causing a FS crash, if
    the antenna= command was used while the antenna device was
    /dev/null.  Thanks to Minttu Uunila at Metashovi for reporting
    this bug.

15. New pointing model term 23. This term matches the M.P. Godwin
    controller "excess refraction" elevation term, going as cot(el).

16. The obsolete "calrx" command was removed.  A script used during FS
    installation adjusts local SNAP procedure libraries for this
    change.

17. Installation and customization documents for FSL8 are included in
    /usr2/fs/misc.  All the relevant files have names starting with
    FSL8.

18. New example station procedure files for DBBCs.  New example
    procedure files dstation.prc (DBBC/Mk5B) and dstationcc.prc (DBBC
    with continuous cal/Mk5B) were added to /usr2/fs/st.default/proc.
    In addition, the previous 5station.prc file (Mk5 rack/Mk5B
    recorder) was renamed m5station.prc for consistency.

19. Improve Mark 5 and DDBC processing if Mark 5 or DBBC is restarted.
    One of the changes made in mk5cn for 9.11.0 was to remove the
    automatic re-trying of commands if there is a failure; it was felt
    that this did more harm than good.  An unintended consequence of
    this change was that if the Mark 5 control program is restarted,
    the next transaction would fail.  The code was changed so that the
    closure is detected, a new connection is attempted, and then the
    transaction is tried.  This transaction should succeed.  Of course
    any transacation attemped before the Mark 5 is restarted will
    fail.  Since dbbcn is modeled on mk5cn, the changes were made to
    both programs, so they behave the same way in this situation.

20. Fix Tsys/monit3 display problem for Mark III/IV/5 racks.  For
    these rack types, some extraneous garabage characters were printed
    in the display window.  Thanks goes to Michael Linqvist at Onsala
    for reporting this.

21. The fivpt "xoffset" record now includes the source name.  This
    change makes it easier to select pointing data results by source,
    for example using "grep".

22. Fix autoftp for DBBC racks.  Version 9.11.0 and 9.11.1 brok the
    autoftp feature of disk2file for sttaion with DBBCs. This has been
    fixed.

			 B. Changes in DRUDG
				   
DRUDG opening message date is 2013Feb22.

The following is a summary of DRUDG changes since 9.10.4. Item 14 was
omitted from the 9.11.0 update notice, but the feature was in the
9.11.0 release. Items 11 and 14 were revised and items 15 and above
were added in 9.11.2.

1.  Support for DBBC.
2.  AutoFTP_ABORT_TIME skedf.ctl parameter added to $MISC section.
3.  Better support for phase referencing.
4.  More scans allowed.
5.  Fixed 24:00:00 bug.
6.  Handling of smaller powers of two of tracks for Mark5B recording.
7.  Separating of skedf.ctl reading routines for DRUDG and SKED.
8.  Global read and write permission on all files DRUDG creates.
9.  Label first character bug.
10. VEX is now a default schedule file type.
11. TPICD bug fixed for various rack types
12. Bug in equipment override in 'command line mode'.
13. More forgiving behavior for unknown recorder types.
14. New skedf.ctl $MISC section parameter: default_dbbc_if_inputs.
15. Mixed non-VSI4 modes error for non-VSI4 racks fixed.
16. Missing scans in option 5 listing for continuous recorder restored.

A more detailed discussion of these changes follows.  For most fixes
the files that were changed are listed.  Files are listed with respect
to the drudg/ source directory.

1.  Support for DBBC.  This version of DRUDG provides support for the
    DBBC in DDC mode.  The DBBC is now a valid rack type.  This
    involved changes to many DRUDG routines and some new routines.
    Affected files: procs.f
    New files: check_dbbc_freqs.f, check_dbbc_setup.f, proc_dbbc_bbc.f, 
    proc_lba_ifp.f, proc_lo.f, proc_mracks_vc.f, proc_vc.f,
    proc_vc_cmd.f, proc_vracks_bbc.f, 

2.  AutoFTP_ABORT_TIME skedf.ctl parameter added to $MISC section.
    The user can now specify a maximum time for disk2file operations
    to be aborted (in case they did not terminate on time).  Normally,
    the abort would be issued just before the next scan.  However, if
    the next scan would be a long time in the future, there may be a
    long delay before the abort.  With the new parameter, a maximum
    time can be set after which the abort will be guaranteed to be
    issued.  If the user does not specify an abort time DRUDG will use
    300 seconds.
    Affected files: drudg_rdctl.f, snap.f, ../skdrincl/data_xfer.ftni

3.  Better support for phase referencing.  When observing
    phase-reference scans, there should not be a setup procedure,
    PREOB, or POSTOB between the scans.  DRUDG has no way of
    explicitly knowing a session is phase-reference.  However, in
    phase referencing experiments the scheduler switches back and
    forth between two near-by sources without turning off recording.
    Hence DRUDG assumes that the scans are phase-referencing if 1) the
    recorder is running and 2) it is a VEX schedule.  Previously DRUDG
    would omit the setup procedure and PREOB procedure between the
    scans.  It now also omits the POSTOB procedure.  
    Affected files: snap.f.

4.  More scans allowed.  The limit on the number of scans in a
    schedule was increased to 20,000. 
    Affected files: skdrincl/skparm.ftni

5.  Fixed 24:00:00 bug.  There was a bug in SKED which would
    occasionally produce scans with a time-tag of 24:00:00 which is
    not a valid DRUDG time-tag.  SKED was modified so that this should
    not happen, and DRUDG was modified to handle this case correctly. 
    Affected files: unpsk.f     

6.  Handling of smaller powers of two of tracks for Mark5B recording.
    For Mark5A recorders the minimum number of tracks recorded is 8.
    For Mark5B this is not the case, and DRUDG was modified to handle
    recording for smaller powers of including 1, 2, 4.
    Affected files: proc_mk5b_tracks.f

7.  Separating of skedf.ctl reading routines for DRUDG and SKED.
    Previously DRUDG and SKED used the same routines to read the
    configuration file skedf.ctl.  This meant that if extra variables
    were put into skedf.ctl that either program needed, both programs
    needed to be modified even if they both did not require the data.
    This situation has been modified so that DRUDG and SKED now have
    their own routines. Both DRUDG and SKED will ignore items in
    skedf.ctl that they do not understand. 
    Affected files: fdrudg.f
    New file:  drudg_rdctl.f

8.  Global read and write permission on all files DRUDG creates.
    DRUDG now set's the permissions so all users can read and write
    the files that it produces.
    Affected files: drchmod.f 

9.  Label first character bug.  In some releases of DRUDG, DRUDG 'ate'
    the first character of the session name when it was producing
    labels.  This required users to write in the tape label command by
    hand. This has been fixed. 
    Affected files: lablog.f

10. VEX is now a default schedulde file type. The user no longer has
    to specify the '.vex' extension explicitly.  If no file extension
    is given DRUDG will try first to open a '.skd' file.  If it does
    not find one it will then try to open a '.vex' file.
    Affected files: fdrudg.f

11. TPICD bug for fixed Mark 5 & VLBA5 rack types.  For 9.11.0 DRUDG
    write the TPICD commands for all rack types.  In 9.11.2 this was
    revised to only be for rack types Mark III, Mark IV, VLBA, VLBA4,
    LBA, LBA4 (with any recorder or none) and for the rack Mark 5,
    VLBA5, and DBBC, if the recorder type is Mark 5B.
    Affected files: snap.f

12. Bug in equipment override in 'command line mode'.  DRUDG has an
    undocumented 'command line mode' where you can give it a schedule, 
    filename, and command number and DRUDG will execute the appropriate
    command and stop. For example:   

       drudg r1453.skd tc 12

    Will produe the PRC files for TC and exit.  In previous releases
    DRUDG would ignore the equipment_override option in command line
    mode.  It now has the same behavior in interactive and command
    line mode.
    Affected files: fdrudg.f    

13. More forgiving behavior for unknown recorder types.  Previously 
    DRUDG would quit with an error if it doesn't recognize the 
    recorder type.  It now sets the recorder type to 'unknown' and
    continues on. 
    Affected files: fdrudg.f, equip_type.f, ../skdrut/ttape.f, 
    ../skdrut/check_rec_type.f, ../skdrut/unpvt.f 

14. New skedf.ctl $MISC section parameter: default_dbbc_if_inputs.
    This paremeter can be used to define default IF input selections
    for a DBBC if the schedule does not specify any.  It will not be
    possible to distribute schedules that specify the DBBC IF inputs
    until all stations the schedules are distributed to have updated
    to FS version 9.11.0 or later.  In the meantime, this parameter
    can be helpful for stations that used a fixed, or nearly fixed, IF
    input configuration, which probably includes all geodesy only
    stations.  The schedulers will start sending schedules with DBBC
    IF input information as possible, i.e., when the stations have
    updated to 9.11.x and when the stations with DBBCs have informed
    the schedulers of their IF configurations.  Prioer to 9.11.2 this
    feature was using a non-DBBC rack's defined IFs instead of the
    specified defaults once the rack type was changed to DBBC.

15. Mixed non-VSI4 modes error for non-VSI4 racks fixed.  This bug
    caused DRUDG to stop with no error message if non-VSI4 track map
    was used with non-VSI4 rack (something other than Mark 5 and
    VLBA5).

16. Missing scans in option 5 listing for continuous recorder restored.
    This bug caused the start and stop times scans other than the first
    and last in a continuous recording to omitted from the listing.

			   C. Known FS Bugs

(No changes have been made in this section since version 9.10.4,
although there are undoubtedly other bugs to report and some of the
ones listed below are no longer relevant.)

The following is a summary list of known bugs. They are described in more
detail after the list.

1. Do not run "fmset" for extended periods.
2. "odd" and "even" head types not supported for Mark IV & VLBA4.
3. "odd"/"even" head types not supported for VLBA style tapeforms.
4. CHEKR does not check the status of the Mark IV formatter or Mark 5
   recorder.
5. Extraneous errors when tape is stopped by low tape sensor.
6. "Comm=" command in logex extracts only the first command.
7. S2 error scheme clumsy.
8. No extra spaces allowed in "ibad.ctl" file.
9. ONOFF and FIVPT programs hang.
10. FS SNAP command pages don't list tape drive suffix numbers.
11. LBA rack TPI detector is not usable.

A more detailed discussion of these bugs follows.

1. Do not run "fmset" for extended periods.  For stations that have
   VLBA, Mark IV back-ends and/or an S2 recorder, the "fmset" program
   should not be run for extended periods of time.  The "fmset"
   program should be used only to set or briefly verify that the
   formatter time is correct.  Do not leave "fmset" running after
   completing either of these tasks, especially during an experiment.

   The "fmset" program dominates the Field System when it is running
   and this is likely to interfere with the running of an experiment
   or other activities.  The only way to detect the time from the VLBA
   formatter with greater precision than one second it to wait for the
   seconds response from the formatter to change.  This requires the
   FS to communicate with the formatter almost continuously.  A
   similar problem exists for the S2 recorder.  This problem is less
   severe for the Mark IV formatter, but extended use of "fmset" in
   this case should be avoided as well.  In a future revision, this
   will be made more robust so that there will probably be less danger
   if "fmset" is left running.  However, even in the future "fmset"
   should only be left running for as short a time as possible.  A
   reminder about this is included in the "fmset" menu.

2. "odd"/"even" head types not supported for Mark IV & VLBA4.  The
   Mark IV and VLBA4 rack version of the "form" command and the Mark
   IV and VLBA4 recorder versions of the "repro" and "parity" commands
   do not support the "odd" and "even" parameters for the read and
   write head types and reproduce electronics in the "head.ctl"
   control file.  This means that automatic substitution of odd or
   even head in passes that use only even or odd heads respectively
   does not occur.  The only correct settings for the read and write
   head parameters and reproduce electronics is "all".  This will be
   fixed in a future revision.  Please let Ed know if you are missing
   some tracks and need to work around this limitation.

3. "odd"/"even" head types not supported for VLBA style tapeforms.
   For any mode recorded with VLBA style tapeform (14 index
   positions), the only correct setting of the read and write head
   types on the "head.ctl" is "all".  This will be fixed in a future
   revision.  Please let Ed know if you are missing some tracks and
   need to work around this limitation.

4. CHEKR does not check the status of the Mark IV formatter or Mark 5
   recorder.  Now that most communication problems with the Mark IV
   formatter have been solved, this will be possible and will be done
   in the future.  CHEKR support will be implemented for Mark 5 despite
   communication problems, they will have to be ignored unless they
   extend beyond a certain amount of time.

5. Extraneous errors when tape is stopped by low tape sensor.  When a
   tape drive has been commanded to move the tape and then stops
   because it hit the low tape sensor (or when S2 recorders hit the
   BOT or EOT), "CHEKR" will complain periodically that the tape drive
   is not in the correct state.  In principle the FS should be smarter
   about this.  However, if the tape is managed correctly by the
   schedule this error message should never occur.  If it does, then
   it it an indication that there is either a problem with: (1) the
   schedule, (2) the check procedures, (3) the recorder, or (4) the
   tape is too short.  If any of these cases apply they should be
   corrected.  It is more likely that this error message will occur
   when the tape is being controlled manually.  In this case, issuing
   an "ET" command will convince the FS that the tape drive should be
   stopped and the error message will cease.

6. "Comm=" command in logex extracts only the first command.  The
   "comm=" command in "logex" extracts only the first command
   commanded and displayed.  This problem was noted by Giuseppe
   Maccaferri (Medicina).

7. S2 error scheme clumsy.  The error and status response number
   reporting scheme for S2 recorders is clumsy.  FS errors that have
   mnemonic "rl" are mostly error responses from the recorder or the
   RCL interface library that is used to communicate with the
   recorder.  If the numeric part of an "rl" error is greater than
   -130, then it is the error code returned by the recorder.  If the
   numeric part is less than -130, but greater than -300, then add 130
   to the value, the absolute value of the result is the error
   response code from the RCL library.  For values less than or equal
   to -300, a FS error has been detected.  Status response codes are
   all reported with mnemonic "rz" and the numeric value is the
   negative of the status response code.  In all cases an appropriate
   error or status message is displayed.  These messages are retained
   in the log.

8. No extra spaces allowed in "ibad.ctl" file.  The format of the
   "ibad.ctl" must not contain any leading or embedded spaces.  In
   systems that use the LLP AT-GPIB driver (pre-FS Linux 4), if either
   the option "no_untalk/unlisten_after" is misspelled or an incorrect
   device name is supplied, the driver will cause a segmentation
   violation when it is initialized and the FS will terminate.
   Unfortunately there is no way to prevent this problem in a general
   way; it reflects a limitation in the driver.

9. ONOFF and FIVPT programs hang.  The ONOFF and FIVPT programs have
   been known to "hang" mysteriously.  This seems to be caused by some
   problem with the "go" mechanism that is used to restart the program
   when it pauses to allow a SNAP procedure, such as CALON or CALOFF
   to execute.  The "go" that is used to restart the program fails for
   some reason.  This has been exceedingly difficult to debug because
   it is intermittent and fairly rare.  There is however a good work
   around for it.  The CALON and CALOFF procedures are called by
   procedures CALONFP and CALOFFFP for FIVPT and CALONNF and CALOFFNF
   for ONOFF.  FIVPT or ONOFF may hang during (or actually just after)
   the execution of one these procedures that FIVPT and ONOFF will
   typically hang.  If this happens, you will have to terminate the FS
   to recover.  You can prevent it from happening again (for this
   procedure) by adding the lines:

    !+1s
    sy=go fivpt &

  to the end of CALONFP or CALOFFFP.  For CALONNF and CALOFFNF, please
  add:

    !+1s
    sy=go onoff &

  If you see other situations where FIVPT or ONOFF hang, please let Ed
  know.

10. FS SNAP command pages don't list tape drive suffix numbers.  The
    FS SNAP manual pages and the help pages available through the
    "help=" command do not reflect when multiple versions are
    available with different suffixes depending on the number of drive
    specified in the control files.  For example, there is only a
    "tape" page, no "tape1" or "tape2" page.  However, the help
    facility will display the version of the command with no suffix
    when an available command with a suffix is used.  For example, if
    two drives are defined, then "help=tape1" and "help=tape2" will
    work, but "help=tape" will not and vice-versa if only one drive is
    defined.

11. LBA rack TPI detector is not usable.  The Australian LBA Data
    Acquisition System currently lacks a functional total power
    detector though support has been included.  To allow approximate
    system temperature calibration, all the setup commands and the TPI
    detectors of the modules of a co-existing Mark IV rack are
    currently also available when the rack type is specified to be
    LBA4.

III. Installation

If you are installing FS9 for the first time with this version, please
follow the installation instructions in Section 4.5 of the FS9
"Computer Reference" manual.  In this case you should also get a copy
of the current FS9 "Control Files and Field System Initialization"
manual.

The following instructions are for upgrading from 9.10.4 or 9.11.0.
Please follow all the steps.  If you have an older version than
9.10.4, please upgrade to 9.10.4 first (see fs9104up.txt).  If you
have a post 9.10.4 and pre 9.11.0 version than 9.10.4 (either 9.10.5
or 9.10.6) the instructions below should also work, but you will not
need some of the control (Step 13) and procedure (Step 14) file
updates (in this case, please contact Ed, Ed.Himwich@nasa.gov, for
more details).

If you already have version 9.11.1 installed, a subset of the
installation steps can be followed to update to 9.11.2.  In this case,
please follow steps (1)-(6), (8)-(9), (11)-(12), (14D), and at least
some basic testing in step (16) to make sure there were no unexpected
complications.  Step (14D) is only for stations that have MAT devices.
This shortened process omits most of the detailed control and
procedure file updates that were needed for the 9.11.0 update.

If you have already installed 9.11.0, a subset of the installation
steps can be followed to update to 9.11.2.  In this case, please
follow steps (1)-(6), (8)-(9), (11)-(12), (13F), (14D), and (14E) and
at least some basic testing in step (16) to make sure there were no
unexpected complications.  Step (14D) is only for stations that have
MAT devices.  Step (14E) is only for stations that have a DBBC.  This
shortened process omits most of the detailed control and procedure
file updates that were needed for the 9.11.0 update.

For reference, the list of the most recent "critical updates" is given
below.  These are updates that must be applied sequentially.  Please
start with the next update with a later version number than what you
have and apply it and the following listed versions before upgrading
to 9.11.0.  You can find the latest versions of installation notes for
these FS versions in the "/usr2/fs/misc" directory.  The list of
critical updates is:

  9.4.0
  9.5.3
  9.5.12
  9.6.9
  9.7.7
  9.9.2
  9.10.4

If you have a version older than 9.4.0, please contact Ed
(Ed.Himwich@nasa.gov).

For reference purposes the naming convention for the default station
libraries for different equipment configurations is listed here.  The
files are found in /usr2/fs/st.default/proc.  They can be referred to
and compared to what you have in "/usr2/proc/station.prc".  **ONLY**
for new installations (or completer re-installs), you can copy the
default version for your equipment to "/usr2/proc" renaming it to
"station.prc" in the process, e.g.:

  cd /usr2/proc
  cp -i /usr2/fs/st.default/proc/3station.prc station.prc
  chmod a+rw station.prc

The "-i" option will prompt before overwriting an existing
"station.prc".  The table of correspondence between equipment types
and default library names is given next.

      Equipment        Prefix letters  Station Library
      Rack/Drive1/Drive2

      K42/K42              k42         k42station.prc
      K42K3/VLBA           k42k3v      k42k3vstation.prc
      K42MK4/VLBA          k42mk4v     k42mk4vstation.prc
      K42MK4/VLBAB/VLBAB   k42mk4vb    k42mk4vstation2.prc
      K42/K5               k42k5       k42k5station.prc
      LBA/S2               ls2         ls2station.prc
      LBA4/S2              l4s2        l4s2station.prc
      Mk3/Mk3A             3           3station.prc
      Mk4/Mk4              4           4station.prc
      Mk4/Mk5A             45          45station.prc
      Mk4/VLBA4            4v4         4v4station.prc
      Mk5/Mk5B             5           5station.prc
      NONE/S2              s2          s2station.prc
      VLBA/S2              vs2         vs2station.prc
      VLBA/VLBA            v           vstation.prc
      VLBA/VLBA2           v2          v2station.prc
      VLBA/VLBA/VLBA       v           vstation2.prc
      VLBA4/VLBA4          v4          v4station.prc
      VLBA4/MK5A           v45         v45station.prc
      VLBA4/VLBA42         v42         v42station.prc
      VLBA5/Mk5B           v5          v5station.prc
      DBBC/Mk5B            d           dstation.prc
      DBBC(cont.cal)/Mk5B  d           dstationcc.prc

If your equipment type is missing, please let Ed (Ed.Himwich@nasa.gov)
know so that it will be added.

You can use cut-and-paste to reduce the amount of typing involved in
the installation.  This reduces the chances of missing required spaces
and other easily missed characters (like ".") in the commands.  The
basic idea is to have two different terminals open, either two
different VT text terminals (Control-Alt-F*, where * is 1-6) on the FS
computer you are upgrading or two different xterm terminals either on
the local X display or remotely logged in.  You can then switch back
and forth between the terminals, reading the instructions as you
scroll through them (with "more" or "less") on one terminal and
entering commands on the other.  You can cut-and-paste complicated
commands from the terminal with the instructions to the terminal where
you are entering commands as needed.  For VT text terminals you can
log in and out to change users as needed on the terminal where you are
executing commands.  With xterms, you can use "ssh" or "su" to
'switch' to users as needed on the terminal where you are entering
commands. For example, you can change to being 'prog' by executing:

 ssh -X prog@localhost

or

 su - prog

Please don't forget to log back out when you need to change users
again or you may develop a series of 'nested' logins.  The steps that
require rebooting will of course completely log out all of your
terminals; you will need to re-login again from scratch to continue.
At the end of the update, it is recommended that you login as "oper"
on the local X display for the final testing.  Please also note that
in order to paste into the X display login shell window for "oper" and
"prog", you typically must use Shift-Insert.  If you have any
questions about how to cut-and-paste please contact Ed
(Ed.Himwich@nasa.gov).

(0) Before you begin the upgrade make sure you have a current back-up
    of your system in case something goes wrong.  If you are use FS
    Linux 5 (FSL5, we recommend you use the tar based back-up that is
    part of the rotating disk back-up scheme.  A draft document that
    describes this method is available in the docs sub-directory on
    the FS FTP servers as backups2.pdf.  If you have an older FS Linux
    distribution, please use the disk-to-disk back scheme described in
    Section 5.8 of the FS9 "Computer Reference" manual.  If you have
    an FSL6 (sarge), FSL7 (etch) or FSL8 (lenny) system configured to
    run a RAID, please see /usr2/fs/misc/RAID.txt section APPLYING AN
    UPDATE for backup directions for applying an update.  If you are
    running one of the FSL distributions and do not have documentation
    on how to make a back-up, please contact Ed.  If you have SCSI
    disks, Section 5.7 of the FS9 "Computer Reference" manual has a
    discussion of drive ID numbers if you are unsure about these.

    Normally you should choose to install the update on your primary
    disk after having made and verified your back-up.  Once the
    installation is complete, has been tested, and used for a little
    while, you can copy over your back-up with the upgraded primary.
    If the upgrade fails, you should restore the back-up to the
    primary for operations.  You can then try to make the upgrade
    again when it is convenient.  In a desperate situation, you can
    use the back-up for operations.  You may choose to install the FS
    on your back-up disk for testing and then later copy the back-up
    onto the primary once you are satisfied with the new version.  In
    any event, please be sure to make a fresh back-up before
    continuing with the installation.

(1) Please be sure that you have at least 40 MB of free space (use the
    "df" UNIX command to check free space) on your "/usr2" partition
    before starting the upgrade.  This would probably only be an issue
    for stations with 200 MB disks.  If you are tight on space, you
    may want to delete old log files and old versions of the FS
    (except your most recent one if you can avoid it of course).
    Since you should have backed-up your system, you can even delete
    the "*.[oas]" and executable files of your old versions with no
    risk.  You might want to keep the source of the previous versions
    around for reference if you have room.  You can eliminate the
    non-source files by "cd"-ing to each of the old FS directories in
    turn as "prog" and doing a "make rmdoto rmexe".  If you have any
    questions about how to do this, please contact Ed.

(2) Log-in as prog.

(3) Place a copy of the fs-9.11.2 archive in your "/tmp" directory.
    For example you might do the following:

      cd /tmp
      ftp atri.gsfc.nasa.gov
      (enter your FS FTP account name at the prompt)
      (enter your FS FTP password at the prompt)
      binary
      cd dist
      get fs-9.11.2.tgz
      quit

    The FS FTP area is also available via http://www.metsahovi.fi/fs/.

    The instructions for transferring the archive using DOS floppies
    are no longer included in this notice.  If you need to do this,
    please contact Ed (Ed.Himwich@nasa.gov).

(4) Log-out as prog and log-in as root.

(5) Extract the source from the archive:

      cd /
      tar -xzpf /tmp/fs-9.11.2.tgz

(6) Set the link for the new FS version:

      cd /usr2
      ln -sfn fs-9.11.2 fs

(7) It is recommended that your local files operations (control, proc,
    log, and sched directories) have the default ownership
    ("oper.rtx") and permissions ('rw-rw-rw').  To force this, please
    execute the script:

      /usr2/fs/misc/fix_perm

    Answer "y" to the prompt if you wish to proceed.  It is good idea
    to do this, unless you have purposely changed the ownerships and
    permissions to some other values.  If you don't want to restore
    the defaults, answer "n" (this is the last chance to abort the
    execution of the script).

(8) VERY IMPORTANT: Log-out as root, and log-in as prog.

(9) Make the FS:

      cd /usr2/fs
      make

(10) Recompile your station software.  This is necessary to pick-up
     changes to common blocks, shared memory, and library routines.

     Depending on the form of your source code, it may be necessary to
     make some changes before you will be able to successfully compile
     your station code.  The only known change that is expected is
     that if your C language source code includes the FS header files
     "params.h" and "fs_types.h", you will need to make sure that the
     "params.h" include occurs before the "fs_types.h" include.

     A workable, but tedious, way to discover if these changes are
     necessary and then make them is to try the instructions for
     "make"-ing below and seeing if any modules fail with an error
     like:

In file included from ../../fs/include/fs_types.h:46,
                 from ancom.c:12:
../../fs/include/tpicd_ds.h:7: error: 'MAX_DET' undeclared here (not in a function)
In file included from ../../fs/include/fs_types.h:47,
                 from ancom.c:12:
../../fs/include/onoff_ds.h:22: error: 'MAX_ONOFF_DET' undeclared here (not in a function)

     If so, the error in the module is probably due to the order of
     the "fs_types.h" and "params.h" includes.  After moving the
     "params.h" include to before the "fs_types.h" include in the
     source module, the next attempt to recompile may reveal another
     module that needs to be fixed.  The tedious part is that only one
     module per source directory will be discovered per "make".

     To recompile and reload your station software, the following
     steps should work if you have the "standard" configuration for
     station software:

       cd /usr2/st
       make rmdoto rmexe all

(11) Reboot the computer.  This is important for re-initializing
     shared memory.

(12) Log in as oper

(13) Modify your control files.  Four changes are needed: (A) Update
     your stcmd.ctl file for the increased number of supported
     devices, (B) update your dual polarization .rxg files to have two
     Trec values, (C) update your equip.ctl for new additional lines
     and the metserver port number, (D) create a dbbad.ctl file with
     the DBBC network communication parameters, (E) update your
     parpo.ctl file for the new field in line 1, and (F) update your
     skedf.ctl file if you want to use the new parameters
     AutoFTP_ABORT_TIME and/or default_dbbc_if_inputs with DRUDG.

     (A) Update your stcmd.ctl file with:

           cd /usr2/control
           /usr2/fs/misc/cmdctlfix5 stcmd.ctl

         The procedure will save the original version of stcmd.ctl as
         stcmd.bak.  If the script complains that you already have a
         stcmd.bak file, you need to either delete or rename it before
         re-running cmdctlfix5.

     (B) Update your .rxg files with:

           cd /usr2/control/rxg_files
           /usr2/fs/misc/rxgfix2 *.rxg

         The procedure will save the original versions of .rxg files
         that it updates with the a .bak extension.  If the script
         complains that you already have ".bak" files, you will need
         to delete or rename them before re-running rxgfix2.

     (C) Update your equip.ctl file:

           cd /usr2/control
           tail -8 /usr2/fs/st.default/control/equip.ctl >>equip.ctl 

         You may need to edit the equip.ctl to adjust met sensor type
         (if you use a MET3 or MET4), and the contents of the (just
         added) non-comment lines for DDC version, number of
         conditioning modules, and the IF power conversion factors.

         If you are using metserver to support a MET3 or MET4 sensor,
         you will need to change the met sensor field from "met3" to
         the port number to be used to communicate with the server.
         If you are using a prior version of metserver, the default
         port number was 30384.  For the new metserver, the default is
         50001.  A few stations already have the new version
         installed.  This can be checked by listing
         /etc/init.d/metserver.sh to see if there is a line
         PORT=... in the file.  If there is, you have the new version
         and this line gives the port number.

         If you don't have a DBBC, no further changes to equip.ctl are
         needed.

         If you have a DBBC, it is critical to update the DBBC DDC
         version number (one of v100, v101, or v102) and the number of
         conditioning modules to the correct number (if you don't have
         the typical number of four). The IF power conversion factor
         line must have the same number of entries as the number of
         conditioning modules.  If you do not know the actual IF power
         conversion factors for your DBBC, it should be fine to use
         the default value of 15000 for each.  This will only impact
         the accuracy of the power and Tsys for the IF power
         detectors.  The IF Tsys values will probably still be close
         to being reasonable.  The readings for individual BBC
         sidebands are unaffected.

     (D) Create a dbbad.ctl file:

           cd /usr2/control
           cp -a /usr2/fs/st.default/control/dbbad.ctl .
           chmod a+rw dbbad.ctl

         If you have a DBBC, you will need to edit the file, uncomment
         the last line, and update the address of the DBBC. Other
         fields in the file should not require modification.

     (E) Update your parpo.ctl file:

           cd /usr2/control
           tail -7 /usr2/fs/st.default/control/parpo.ctl >>parpo.ctl 

         These lines include comments explaining the effect of this
         change.  If you want to recover the previous behavior of the
         pointing analysis programs, you change the value of "3" in
         the last line to "0".  However, "3" is the recommended value.

     (F) Update your skedf.ctl file if you want use the
         AutoFTP_ABORT_TIME and/or default_dbbc_if_inputs parameters
         with DRUDG.

         The AutoFTP_ABORT_TIME parameter will be useful for stations
         that make DRUDG controlled disk2file transfers (typically in
         EVN astronomy schedules) and have large gaps between scans.
         This parameter will allow a station to have the transfer
         abort time (in case the transfer is going too slowly) after
         some reaonable interval after it is started rather waiting
         what may be many minutes untiil the next scan.

         The default_dbbc_if_inputs parameter will be useful for
         stations that have a fixed, or nearly fixed, DBBC IF input
         configuration.  DRUDG will insert the specified configuration
         if the scheduled does not specify one.  This can reduce the
         amout if procedure file editing that is needed after DRUDG
         generates the file.

         To enable either or both of these parameters, you will need
         to edit:

           /usr2/control/skedf.ctl

         and add either or both as appropriate. Please see:

           /usr2/fs/st.default/control/skedf.ctl

         for more information about the format of these parameters.

(14) Modify your procedure files.  Up to five changes may be needed:
     (A) update "onoff=..." set-up commands in your procedure for the
     added parameter (this step also removes any instances of the
     obsolete "calrx" command), (B) if you have a DBBC: create a
     version of station.prc for that device, C) if you want to use a
     DBBC for FIVEPT and ONOFF measurements, you will need to update
     your pointing procedure library, probably point.prc, and (D) if
     you use MAT devices, make sure there is an initial read of a MAT
     device in "initi".  Step (E) is only for stations upgrading from
     9.11.0.  Please note that before making these changes, you should
     make sure that the FS is not running.

     (A) Update your procedure files with:

           cd /usr2/proc
           /usr2/fs/misc/onoff_fix *.prc

         The procedure will save the original versions of procedure
         files that it updates with a .bak extension.  If the script
         complains that you already have .bak files, you will need to
         delete or rename them before re-running onoff_fix.

     (B) Stations without DBBC's can skip this sub-step.  If you have
         a DBBC, you will need to make, one or more versions, of your
         station.prc file for use with the DBBC.  You may want a
         version for receivers that use non-continuous cal and one for
         receiver that use continuous cal since the contents of the
         procedures are different (or you may prefer to have a
         different version for every receiver anyway).  In any event
         you should save a copy of your original station.prc before
         you begin, perhaps with:

           cd /usr2/proc
           cp -a station.prc stationold.prc

         There are many ways to make the new station.prc.  Two
         approaches you might follow are described here, which will be
         easier will depend on the details of your station.

         Please note that regardless of which approach is used, the
         biggest single change for DBBCs in existing procedures is
         that the structure of PREOB is quite different.  For
         continuous cal, there is no CALTSYS in PREOB.  In fact there
         should be no Tsys related commands in PREOB at all.  For
         non-continuous cal, a different procedure, CALTSYS_MAN, is
         used in PREOB.  This procedure is not executed until four
         seconds after PREOB starts.  For this case, any other
         commands needed in PREOB should be placed in the four second
         gap in PREOB.  Please see the PREOB in
         /usr2/fs/st.default/proc/dstation.prc for a sample PREOB and
         CALTSYS_MAN procedures..

         One approach for updating station.prc you might use is to
         start with the existing station.prc and modify it to agree
         with the example dstation.prc or dstationcc.prc, as
         appropriate, from /usr2/fs/st.default/proc.  You can place a
         copy of the example procedure library in /usr2/proc to
         facilitate copying of procedures from example to the station
         procure library. For example:

           cd /usr2/proc
           cp -a /usr2/fs/st.default/proc/dstation.prc .

         or

           cd /usr2/proc
           cp -a /usr2/fs/st.default/proc/dstationcc.prc .

         Then the pfmed "st" command can be used to copy procedures
         from the example file.  As an example, to copy the ifman
         procedure from the dstation.prc example, you could use:

           pfmed
            pf,station
            st,ifman::dstation,ifman
            ex

         A second approach is to copy an example DBBC procedure file,
         either dstation.prc (non-continuous cal) or dstationcc.prc
         (continuous cal) from /usr2/fs/st.default/proc to
         /usr2/proc/station.prc. For example, either:

           cd /usr2/proc
           cp -a /usr2/fs/st.default/proc/dstation.prc station.prc

         or

           cd /usr2/proc
           cp -a /usr2/fs/st.default/proc/dstationcc.prc station.prc

         You can then customize the new station.prc possibly using
         your old station.prc file (hopefully saved previously as
         suggested above) as a guide, possibly copying procedures you
         need to add from your back-up copy of the original .prc file
         using the PFMED, e.g. to replace the default initi procedure
         with the your original initi procedure, you might use:

           pfmed
            pf,station
            pu,initi
            st,initi::stationold,initi
            ex

     (C) Stations without DBBC's can skip this sub-step.  If you have
         a DBBC and wish to use FIVPT and ONOFF with it, you will need
         to make sure you modified your set-up in your pointing
         procedure library.  This will probably consist of two
         changes:

         (i)  changing the detector device(s) you want to use in the
              "fivept=..."and "onoff=..." commands (probably only for
              the "fivept=... though). See /usr2/fs/misc/dbbc.txt for
              a description of DBBC detector names.

         (ii) if you are using continuous cal and want to get good
              Tsys and Tcal values from ONOFF, you will need to
              increase the number of integration seconds to a large
              enough number to give stable measurements at the level
              of accuracy you want.

     (D) This change supports the MAT serial problem work around
         discussed in FS update item 11 given above.  This step is
         only for stations that use MAT devices and only for stations
         with an MAT device that is accessed with a command that only
         writes to, i.e. does not do readback,. Typically this is only
         VSI4 devices (typically at stations with Mark 5 or VLBA5
         racks).  These stations should put a "vsi4" as the first
         command in their "initi" procedures.

         If a station has other, local, MAT based command that does
         not read, they should put some command that does read as the
         first command in "initi".  If there is no command available
         for this case, please contact Ed.

     (E) This step is only for stations that are updating from 9.11.0
         and have a DBBC.  Please note the following changes have been
         made to the default versions dstation.prc and dstationcc.prc
         procedure libraries since 9.11.0:

         (i)   The first "ifd" command in MIDOB was changed to "ifb".

         (ii)  The command:

                 sy=run setcl &

               at the end of MIDOB was replaced with:

                 " the shown order of the commands from here to the end of this procedure is
                 " strongly recommended
                 mk5b_mode
                 !+1s
                 mk5=dot?
                 sy=run setcl adapt &

         (iii) The procedure MK5PANIC:
  
                 "mk5panic - dls - 5 december 2003
                 disk_record=off
                 mk5=bank_set=inc;
                 !+3s
                 disk_serial
                 mk5=bank_set?
                 mk5=vsn?

               was added.

         Please make the corresponding changes to any versions of
         station.prc that you have made at your station based on the
         examples libraries.  The first two changes, (i) and (ii), can
         be made with relatively easy edits in PFMED of your existing
         DBBC versions of MIDOB.  The third change, (iii), can be made
         either by creating a new procedure in your DBBC station.prc
         libraries with the shown contents or copying this procedure
         from some existing local .prc file that includes it, e.g.:

           pfmed
            pf,station
            st,mk5panic::stationold,mk5panic
            ex

(15) If you have a DBBC, you will need to update your .Xresources
     file. Please edit the ~oper/.Xresources. File the line:

       monit3*geometry:      32x17-0+120

     and change the 17 to 19:

       monit3*geometry:      32x19-0+120

     and save the file.  You may need to make other changes to this
     line if you are using non-default values for any of the
     parameters and/or want to make other changes in the default
     position or size of the monit3 (Tsys) window.

     After you have saved the file, if you are loggeing on the
     X-display on the machine, you should either log-out and log back
     in or just reload the X Resouces Data Base. You can do the latter
     with the alias commanded, if you have it defined:

       xrdb

     or if not:

       xrdb -merge ~/.Xresources

     Logging out and logging back in again is simpe and safe.

     You should also update the ~prog/.Xresources file (as "prog"). Be
     sure tolog out as "prog" when done.
     
(16) Test the FS as "oper". Generally speaking a fairly thorough test
     is to run a test experiment: start with DRUDG-ing a schedule,
     making listings, and any other pre-experiment preparation you
     normally do, then execute part of schedule, and perform any
     normal post-experiment plotting and clean-up that you do.  The
     idea here is to verify that everything works as you expect for
     normal operations.  In particular for this upgrade you should
     test that Mark 5 operations work as expected.

(17) Consider when to update your back-ups.  You certainly should not
     update them until you have performed the tests described above.
     It would be prudent to wait until you have successfully run an
     experiment or two and preferably received word that the
     experiment(s) produced good data.  The chances of needing your
     back-up before you update it is fairly small.  If something does
     happen, you can copy the pre-FS update back-up it to the (now
     assumed bad) FS updated disk.  You can then either run the
     recopied disk or apply the FS update again.  Handling this will
     be a lot safer if you have a third disk.
