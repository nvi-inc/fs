FTN4,X
C@IFDIS 
C 
      SUBROUTINE IFDIS(IP,ICLCM),IF DISTRIBUTOR DISPLAY C#870115:04:35# 
C 
C 1.1.   IFDIS gets data from the IF distributor and displays it
C 
C 2.  IFDIS INTERFACE 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of buffer from MATCN 
C        IP(2)  - number of records in class
C        IP(3)  - error return from MATCN 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # RECS 
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: SLOWP
C 
C     CALLED SUBROUTINES: character utilities 
C 
C 3.  LOCAL VARIABLES 
C 
      DIMENSION IBUF(30),IBUF2(30)
C               - input class buffer, output display buffer 
C        ILEN   - length of buffers, chars
C        NCH    - character counter 
      DIMENSION ITP(10) 
C               - buffer for ! data with TP 
C 
      LOGICAL KCOM,KDATA
      DIMENSION IREG(2) 
C               - registers from EXEC 
      EQUIVALENCE (REG,IREG(1)) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/60/ 
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED: 800215 
C# LAST COMPC'ED  870115:04:35 #
C 
C     PROGRAM STRUCTURE 
C 
C     1. First check error return from MATCN.  If not 0, get out
C     immediately.
C 
C 
      KCOM = IP(4).EQ.77B 
C 
      ICLASS = IP(1)
      NCREC = IP(2) 
      IERR = IP(3)
      NREC = 0
C 
      IF (KCOM) GOTO 200
      IF (IERR.LT.0) GOTO 990 
      IF (ICLASS.EQ.0.OR.ICLCM.EQ.0) GOTO 990 
C 
C 
C     2. Get class buffer with command in it.  Set up first part
C     of output buffer.  Get first buffer from MATCN. 
C 
200   REG = EXEC(21,ICLCM,IBUF2,-ILEN)
C 
      NCHAR = IREG(2) 
      NCH = ISCNC(IBUF2,1,NCHAR,75B)
C                   Scan for "="
      KDATA = NCH.EQ.0
C                   If our command was only "device" we are waiting for 
C                   data and know what to expect. 
      IF (NCH.EQ.0) NCH = NCHAR+1 
C                   If no "=" found, position after last character
      NCH = ICHMV(IBUF2,NCH,2H/ ,1,1) 
C                   Put / to indicate a response
C 
      IF (KCOM) GOTO 310
      IF (KDATA) GOTO 230 
C 
      DO 220 I=1,NCREC
        IF (I.NE.1) NCH=MCOMA(IBUF2,NCH)
C                   If not first parm, put comma before 
        REG = EXEC(21,ICLASS,IBUF,-ILEN)
        NCHAR = IREG(2) 
        NCH = ICHMV(IBUF2,NCH,IBUF(2),1,NCHAR-2)
C                   Move buffer contents into output list 
220     CONTINUE
      GOTO 500
C 
230   REG = EXEC(21,ICLASS,ITP,-10) 
      REG = EXEC(21,ICLASS,IBUF,-10)
C 
C 
C     3. Now the buffer contains: IFD=, and we want to add the data.
C 
      CALL MA2IF(IBUF,ITP,IA1,IA2,IN1,IN2,TP1IFD,TP2IFD,IREMIF) 
      GOTO 320
310   IA1 = IAT1IF
      IA2 = IAT2IF
      IN1 = INP1IF
      IN2 = INP2IF
C 
320   IERR = 0
      NCH = NCH + IB2AS(IA1,IBUF2,NCH,100000B+2)
C                   The first attenuator setting
      IF (IA1.NE.IAT1IF) IERR = -301
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = NCH + IB2AS(IA2,IBUF2,NCH,100000B+2)
C                   The second attenuator setting 
      IF (IA2.NE.IAT2IF) IERR = -302
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IIFED(-1,IN1,IBUF2,NCH,ILEN)
C                   Encode the IF1 input
      IF (IN1.NE.INP1IF) IERR = -303
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IIFED(-1,IN2,IBUF2,NCH,ILEN)
C                   Encode the IF2 input
      IF (IN2.NE.INP2IF) IERR = -304
C 
      IF (KCOM) GOTO 500
C 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = IIFED(-2,IREMIF,IBUF2,NCH,ILEN) 
C                   Encode the remote/local setting 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = NCH + IR2AS(TP1IFD,IBUF2,NCH,6,0) 
      NCH = MCOMA(IBUF2,NCH)
C 
      NCH = NCH + IR2AS(TP2IFD,IBUF2,NCH,6,0) 
C 
C 
C     5. Now send the buffer to SAM and schedule PPT. 
C 
500   ICLASS = 0
      NCH = NCH - 1 
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)  
C                   Send buffer starting with IFD to display, ignoring
      IF (.NOT.KCHECK) IERR = 0 
      IP(1) = ICLASS
      IP(2) = 1 
      IP(3) = IERR
      IP(4) = 2HQI
990   RETURN
      END 
