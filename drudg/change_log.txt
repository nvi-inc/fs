This file contains a summary of changes made and why.
2016Sep08 New keyword "vsi_align" in skedf.ctl. Following files changed: proc_dbbc_pfb_tracks.f, drudg_rdctl.f, drcom.ftni.
2016Sep08  proc_mk5_init2.f:  Output 'jiveab' commands if >2GBS
2016Sep06  proc_exper_initi.f:  Replace 'mk5=status?' with 'mk5_status'
2016Aug23  ../skdrut/stinp.f. 2016Jul28 fix did not work. (index of cfirstrec(i) was unitialized). This fixes it.  
2016Jul28
1. drudg_rdctl.f  Added 'cfirstrec_def' to capture default recorder if 'equipment override' is on in skedf.ctl
2. fdrudg.f       Use 'cfirstrec_def' if 'equipment override' is on in skedf.ctl.
3. ../skdrut/stinp.f   Initialize cfirstrec="1 " even if you  have an error in reading in terminal line. Changed dimension of crack to char*20
4. ../skdrut/unpvt.f   Changed dimension ofrack_type to char*20.

2016Apr07.
1. Fixed typographic bug in proc_disk_tracks with filag10 mode. 

2016Jan19 Lots of changes having to do with supporting DBBC_PFB. Here is a quick summary.
1. ../skdrincl/skparm.ftni: Max_bbc=16-->32
2. proc_setup.f:  Different handling of DBBC_DDC and DBBC_PFB. Modifed to not emit BBC commands if DBBC_PFB. 
3. proc_tracks.f: Call proc_dbbc_pfb_tracks instead of proc_disk_tracks for DBBC_PFB. 
3. proc_dbbc_pfb_tracks.f: New routine to handle various track stuff for DBBC_PFB
4. proc_ifd.f:  Fixed so that emit commands for all IFs. The issue is that DBBCs can re-use the same BBC number.
5. proc_mracks_vc.f:  Changed initialization of some variables since max_bbc-->32.
6. proc_vc_name.f.  Only write out command if cname_vc<> " ". (if DBBC_PFB/* then cname_vc=" ")
7. ../skdrincl/statn.ftni, ../skdrincl/valid_hardware.ftni.  dimensions of cstrack and cstrack_cap increased to handle longer names.
8. ../skdrincl/valid_hardware.ftni.  Increased number of valid racks. 
9. ../skdrut/valid_hardware_blk.f.   DBBC-->DBBC_DDC, added DBBC_PFB, DBBC_PFB/fila10g
10. ../skdrut/vmoinp.f, vunptrk.f  max_tracks-->2*max_tracks. This is because sign, magnitude can now be on same track (but drudg expects to be on different tracks.
11. ../skdrut/indexx_int2.f.   New routine. Sort an integer*2 array.
12. ../skdrut/indexx_string.f  New routine. Sort an array of strings. Used by proc_dbbc_pfb_tracks.f


2015Aug31 fdrudg.f Previously quit if first character of filename was "q" or "Q".  
2015Aug20 snap.f.  Allow disk2file for flexbuff.
2015Aug13 proc_norack.f    Output more information about lo, sidebands, etc.  proc_exper_initi.f  Minor changes.  
2015Jul29 proc_disk_tracks.f. Emit 'fila10g_mode' after "fila10g_mode=xxxx..."
2015Jul20. proc_exper_initi.f  Added "jiveab=version?" in exper_initi for Mark5C. 
2015Jul20. proc_setup.f    Don't output cont_cal_parity if turning cont_call off.
2015Jul17. Added support for cont_cal_polarity for DBBC racks.  drudg_rdctl.f, drcom.ftni, proc_setuup.f 
20145Jul06 proc_disk_tracks.f  Changed "geo_r" to "geo-r" and "geo_t" to "geo-t" for Chinese
          drudg_rdctl.f.  Initialized "dr_rack_Type, crec_default to " ". 
          fdrudg.f        If rack or recorder is "UNKNOWN" set to "none".  Onyly use equipment from skedf.ctl if explicitly called. 
2015Jun30 unpvt.f, stinp.f    Had to increase space for rack, recorder since size went char*8-->char*12
2015Jun19 proc_disk_tracks.f  Reorganized after adding CDAS and VLBAC rack types.  
          Checking tracks in (proc_disk_tracks) moved to subroutine check_csb_list.f 
          Modified init_hardware_commo to add CDAS and VLBAC types. 
2015Jun05. Replace "squeezewrite" by "drudg_write" which  a.) Remove spaces; B.)Lower case; C.) write it out. Affected routines:
   proc_disk_tracks.f, proc_patch.f snap.f,  snap_in2net_connect.f,  snap_pcalf.f,  snap_ready.f, snap.recp.f, snap_rollform.f,   
   snap_setup.f, snap_systracks.f, snap_tpicd.f
   drudg_rdctl.f:  Changed dimensions of variables that hold 'rack' and 'recorder' to char*12. (See 2015May19)
   proc_exper_initi.f:  Added 'dbbc=version' and 'fila10g=version' if appropriate.     
 
2015May29 proc_disk_tracks.f  Was using vdif for dbbc/fila10g and recorder Mark5B. Vdif is valid only for Mark6.
                    
2015May19 Added support for dbbc/fila10g rack and Mark6. Mostly minor changes. 
          Also changed size or variables that hold 'rack' and 'recorder' type: char*8-->char*12 Routines affected:          
  hardware.ftni 
  init_hardware_common.f 
  proc_disk_tracks.f 
  proc_mk5_init2.f
  proc_tracks.f
  snap.f
  snap_monitor.f
 ../skdrut/valid_hardware_blk.f 
 ../skdrincl/valid_hardware.ftni

2015Apr04 snap.f  Removed special treatment if two consecutive scans involve the same source. 
2015Mar31 snap.f  Fixed several problmems with phase-referencing. These occured in going from 9.11.4-->9.11.5 when the logic was simplified.
2015Mar30.  Got rid of obsolete parameter 'iperm' in call to drchmod.f
  drchmod.f, poiont.f, procs.f, prtmp.f, skdshft.f, snap.f
2015Jan29.  
../vmoinp.f  2014Dec09 change removed. Now all sidebands are treated as if normal LO. 
proc_disk_trakcs.f:   Flip sideband if inverted LOs. 
     
proc_trkf.f           Flip sideband for VEX if inverted LO. Previously only did for SKD files
proc_ifd.f            Added warning message if it doesn't find any valid LO inputs.
proc_mracks_vc.f      Added support for inverted Los. 
proc_disk_tracks.f, proc_trakcs.f 
                      Also added "ignore_mark5b_bad_mask"  flag. If mask is bad, will issue warning and continue. 
                      User needs to set flag in $misc section of skedf.ctl
procs.f               Previously did silent 'abort' if BBC frequencies were wrong. Now mushes on. 
---------------------------------------------------------------------------------------------------------------
2015Jan22 (Incorporate changes made from Jan13) Changes by JMG and JFHQ
Modifications to support astro2 and astro3 modes with DBBC 
BW written out to 3 places. Abort conditions all go to label 900.
../proc_disk_tracks.f 

2014Dec09 Changes to support 'inverted' IF.
../vmoinp.f.   Flip Sideband if LO freq>sky_freqls 

2014Dec06  Changes to support Mark5C. Affected files were:
proc_disk_tracks.f
fdrudg.f
proc_setup.f
proc_mk5_init1.f
proc_mk5_init2.f
proc_exper_initi.f
init_hardware_common.f
hardware.ftni
equip_type.ftni
../skdrut/stinp.f
../skdrut/ttape.f

2014Sep24
Increased number of modes from 20 to 40.  
../skdrincl/skparm.ftni  (max_frq =>40).
Removed warning message for about mode being not defined for a station.
../skdrut/itras.f
Fixed bug if VEX file did not define any passes, ie, PASS_ORDER not defined. 
../skdrut/gnpas.f

2014Jun02 proc_mracks_vc.f
This routine is called: call proc_mracks_vc(icode,ic,ib,ichan)
ic=channel #
ib=BBC #

The main idea is that this routine cycles through all channels one at a time and write lines like:
vc11=245.99,8.00,u
or
vc01=210.00,8.0,ul


To determine whether to write out "u", "l", or "ul" it checks to see if there are any channels that have the same channel # and bbc # that it was called with.  The code fragment that did the checking was:
        DO ichanx=ic,nchan(istn,icode) !remaining channels
           icx=invcx(ichanx,istn,icode) ! channel number
           if (ib.eq.ibbcx(icx,istn,icode)) then ! Same BBC?               
             if(itras(1,1,1,icx,1,istn,icode).ne.-99 .or. 
     >          itras(1,1,2,icx,1,istn,icode).ne.-99) ku=.true. 
             if(itras(2,1,1,icx,1,istn,icode).ne.-99 .or.
     >          itras(2,1,2,icx,1,istn,icode).ne.-99) kl=.true.                  
           endif
        enddo

This normally works because usually ic=ichan.   However in some cases ic>ichan, and hence it would not find the appropriate sideband in doing the check. (It would miss the channel number it was called with.) The routine was changed to start at 1.
Bug check:  Easiest to see the effect if you change the order of the 'codes' lines in a sked file. 






