#######################################################################
#                                                                     #
#                         makefile for DRUDG                          #
#                            HP 9000/7xx                              #
# 2005Sep02 JMG Cleaned up makefile.                                  #
#                                                                     #
#######################################################################
# For FS version
ifndef VERSION
VERSION = 9
SUBLEVEL = 5
PATCHLEVEL = 0
endif
#
# Set paths
#

SRCDIR=../

PROGRAM = drudg
DR = $(SRCDIR)drudg/
UTLIB = $(SRCDIR)skdrut/skdrut.a
LNLIB = $(SRCDIR)lnfch/lnfch.a
VEXLIB = $(SRCDIR)vex/vex.a
FLEXLIB = /usr/local/lib/flex/libfl.a
#
# Set objects
#
OBJECTS=\
b3of9.o bar1.o bbbuf.o bbsyn.o bcode.o blabl.o \
cazel.o cbinf.o checkmk5xlat.o chkgrpandwrite.o ckobs.o clist.o cmshf.o \
copen.o counter_init.o \
delete_comma_and_write.o drchmod.o drprrd.o drset.o drudg.o dsnout.o \
equip_type.o fakesum.o fc_chmod.o fdrudg.o find_num_chans_rec.o find_recorder_speed.o \
fix_snap_file.o fspin.o get_version.o getqual.o getstr.o gtshft.o gtsnp.o \
iaddk4.o iaddpc.o iaddtr.o init_hardware_common.o k4proc_type.o kcheckgrpor.o \
label.o lablog.o labsnp.o lists.o lspin.o lstsum.o lstsum_info.o lstsumo.o \
luff.o lv_open.o m3inf.o name_trkf.o nhdif.o \
point.o port.o prcov.o prcov_vex.o proc_exper_initi.o proc_mk5_init1.o \
proc_mk5_init2.o proc_postob_mk5a.o proc_write_define.o procintr.o procs.o \
prtmp.o prtxt.o psbar.o purge_file.o read_snap1.o read_snap6.o \
setprint.o setup_name.o setup_printer.o shfcop.o skdshft.o snap.o \
snap_bit_density.o snap_check.o snap_data_valid.o snap_disk_check.o \
snap_disk_end.o snap_disk2file_abort.o snap_enable.o snap_et.o snap_fast.o \
snap_hol_wrt.o snap_ifd.o snap_in2net_connect.o snap_info.o snap_midtp.o \
snap_monitor.o snap_pass.o snap_pcalf.o snap_prepass.o snap_readtime.o \
snap_ready.o snap_rec.o snap_recalc_speed.o snap_recp.o snap_rollform.o \
snap_rw.o snap_s2_loader.o snap_s2_unloader.o snap_setup.o snap_st.o \
snap_start_recording.o snap_systracks.o snap_tape.o snap_tapef.o snap_tpicd.o \
snap_unload_tape.o snap_unlod.o snap_wait_sec.o snap_wait_time.o snapintr.o \
snpshft.o spdstr.o squeezeleft.o squeezewrite.o sread.o strip_path.o \
timin.o timout.o trkall.o tshft.o unpsk.o vlbah.o vlbat.o \
wrdate.o wrday.o wrdur.o wrhead.o wrsor.o wrtap.o wrtrack.o xfer_override.o


# Set compiling and linking flags
# -g is for debugging
# -C checks for out of bounds during execution and aborts if found
FFLAGS=-C -c -g -cpp -DVERSION=$(VERSION) \
                     -DSUBLEVEL=$(SUBLEVEL) \
                     -DPATCHLEVEL=$(PATCHLEVEL)
# Use the -G flag to make the gmon.out file for the profiler gprof.
#FFLAGS=-C -c -G 
# f2c needs this others don't
#CFLAGS= -DF2C
CFLAGS= -c -g -DSYSV
#CFLAGS= -c -G -DSYSV
#
LDFLAGS=$(UTLIB) $(LNLIB) -lf -lm -lc $(VEXLIB) $(FLEXLIB) 
#
$(PROGRAM): $(OBJECTS) 
	rm -f ./core
	@echo Linking $(PROGRAM)...
#	f77 -G -o $(PROGRAM) \
#	$(OBJECTS) \
#               $(LDFLAGS) \
#	/opt/langtools/lib/end.o;
	gcc -g -o $(PROGRAM) \
	$(OBJECTS) /opt/langtools/lib/end.o \
               $(LDFLAGS) 
	@echo done.

#  The following are special dependency lines for compiling.
#
.F.o:
	cd $(<D); f77 $(FFLAGS) $<
.f.o:
	cd $(<D); f77 $(FFLAGS) $<
.c.o:
	cd $(<D); gcc $(CFLAGS) $<
