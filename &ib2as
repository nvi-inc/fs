FTN4,X
C@IB2AS 
C 
        INTEGER FUNCTION IB2AS(IN,IOUT,IC,NC),C#890516:19:12   V=2.0 #
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C       IB2AS 
C 1.1.   IB2AS          THIS ROUTINE RETURNS AN ASCII CHARACTER STRING
C                       FOR THE INTEGER IN IN STARTING AT THE IC CHARACTER
C                       IN IOUT AND GOING FOR NC CHARACTERS 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C               THIS ROUTINE WILL TRUNCATE IN THE SAME MANNER AS FORTRAN
C       IF THERE ARE TOO MANY CHARACTERS GENERATED IN THE PROCESS 
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: IGCNT=IB2AS(IN,IOUT,IC,NC) 
C 
C     INPUT VARIABLES:
C 
C       IN      - THE INTEGER TO BE CONVERTED
C 
C       IC      - SIGN CONTROL AND THE LOCATION OF THE FIRST CHARACTER
C                 TO USE IN IOUT
C 
C                       S0000000XXXXXXXX
C 
C                       S - IF 1 ALWAYS HAVE A LEADING SIGN 
C                           ELSE SIGN ONLY IF A NEGATIVE NUMBER INPUT 
C 
C                       XXXXXXXX - NUMBER OF CHARACTERS TO GENERATE IN IOUT 
C 
C       NC      - LEFT SHIFT CONTROL, ZERO PREFILL CONTROL, PREFILL 
C                 COUNT AND NUMBER OF CHARACTERS TO GENERATE
C 
C                       LZPPPPPPYYYYYYYY
C 
C                       L - IF 1 SHIFT RESULT TO LEFT IN IOUT 
C 
C                       Z - IF 1 PREFILL WITH ZEROS UP TO COUNT PPPPPP
C 
C                       PPPPPP - PREFILL COUNT LIMIT
C                       YYYYYYYY - THE NUMBER OF CHARACTERS TO GENERATE 
C                                  IN IOUT(MAXIMUM VALUE FOR IB2AS) 
C 
C     OUTPUT VARIABLES: 
C 
C       IB2AS   - THE NUMBER OF CHARACTERS GENERATED BY THIS ROUTINE OR 
C                 -1 IF AN ERROR OCCURS 
C 
      DIMENSION IOUT(2) 
C 
C       IOUT    - THE STRING INTO WHICH THE INTEGER IS TO BE PUT
C 
C 2.2.   COMMON BLOCKS USED 
C 
C       NONE
C 2.3.   DATA BASE ACCESSES 
C 
C       NONE
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C       NONE
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C       THIS IS A UTILITY PROGRAM FOR GENERAL USE 
C 
C     CALLED SUBROUTINES: SUB1, SUB2, ... (includes segments scheduled) 
C 
C 3.  LOCAL VARIABLES 
C 
C       I       - THE INTERNAL MODIFIED NUMBER TO BE CONVERTED
C 
C       IDO     - THE NUMBER OF BYTES THAT MUST BE HANDLED THIS ROUND 
C 
C       IIC     - FIRST CHARACTER IN IOUT TO MODIFY 
C 
C       IIP     - PREFILL LOOPING INDEX 
C 
C       ILPE    - WHERE THE INTEGER GENERATION  LOOP SHOULD END 
C 
C       ILPS    - WHERE THE INTEGER GENERATION LOOP STARTS
C 
C       INM     - NUMBER OF CHARACTERS GENERATED BY THIS ROUTINE
C 
C       IPFC    - INTERNAL PRE FILL LIMIT 
C 
C       IWDR    - THE NUMBER OF THE WORD PAST FIRST REFERENCED IN IOUT
C 
C       IWDS    - THE NUMBER OF WORDS MODIFIED IN IOUT BY THIS ROUTINE
C 
C       IWR0    - THE WORD PRIOR TO THE FIRST WORD IN IOUT MODIFIED 
C 
C       IXR     - THE WORD REFERENCE FOR IX INSIDE DO LOOP
C                       NOTE:  THE CHARACTER ARE DETERMINED FROM LOW
C                               ORDER FIRST TO HIGH ORDER ONE.  THIS IS 
C                               USED IN THE REFERENCE PROCESS 
C 
C       J       - CHARACTER PROCESSING LOOP PARAMETER 
C 
C       J1      - CHARACTER SHIFTING AND FILLING INDEX
C 
C       JM      - # OF CHARACTERS THAT NEED SHIFTING
C 
C       JP1     - POSITION LAST SHIFTED CHARACTER OCCUPIES
C 
C       JSHF    - THE DISTANCE THE CHARACTERS MUST BE SHIFTED 
C 
C       NIC     - THE NUMBER OF CHARACTERS IN IOUT TO BE FILLED 
C 
C 4.  CONSTANTS USED
C 
      DIMENSION ISGN(3) 
C 
      DATA ISGN/40B,55B,53B/
C 
C       ISGN    - THIS IS THE SIGN CHARACTER FOR THE OUTPUT 
C 
C                 40B - A BLANK FOR THE NONEGATIVE CASE 
C 
C                 55B - A MINUS SIGN FOR THE NEGATIVE CASE
C 
C                 53B - A PLUS SIGN FOR FORCED LEADING SIGN 
C 
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  890516:19:12urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C       6.1     INITIALIZE VARIABLES AND DECIDE WORK STRATEGY 
C 
        NIC=IAND(NC,377B) 
        IPFC=IAND(ICHAR(NC,1),77B)
        IIC=IAND(IC,377B) 
        JEND=IIC+NIC-1
        ISIGN=1 
        IF(IAND(IC,100000B) .NE. 0) ISIGN=3 
        I=IABS(IN)
        IF(IN .LT. 0) ISIGN=2 
C 
C               FILL OUTPUT WITH BLANKS FIRST 
C 
        CALL IFILL(IOUT,IIC,NIC,2H  ) 
C 
C       6.2     SETUP LOOPING PARAMETERS AND CONVERT NUMBER 
C 
                DO 200 JJ=JEND,IIC,-1 
C 
        J=JJ
C 
C                       GET TENS QUOTIENT 
C 
                IDT=I/10
C 
C                       GET THE DIGIT AND CONVERT IT TO ASCII 
C 
                CALL ICHMV(IOUT,J,(I-(10*IDT)+60B),2,1) 
C 
C                       UPDATE I FOR THE NEXT ROUND 
C 
                I=IDT 
C 
C                       HAS THE NUMBER ENDED (I. E. HAS ZERO BEEN REACHED)
C 
                IF(IDT .NE. 0) GO TO 200
C 
C               STEP J BACK FOR NEXT JOB
C 
        J=J-1 
C 
C                       IS ZERO PREFILL REQUESTED 
C 
                IF(IAND(NC,40000B) .EQ. 0) GO TO 130
C 
C                       FIND PREFILL COUNT LIMIT
C 
                IPFC=MIN0(IPFC,J-IIC+1) 
C 
C                       LEAVE ROOM FOR SIGN IF NEEDED 
C 
                IF(ISIGN .NE. 1) IPFC=IPFC-1
C 
C                       CHECK TO SEE IF ANYTHING LEFT TO FILL 
C 
                IF(IPFC .LE. 0) GO TO 130 
C 
C                       MOVE IN ZERO
C 
        CALL IFILL(IOUT,J-IPFC+1,IPFC,2H00) 
C 
C               RESET J FOR LATER USE 
C 
        J=J-IPFC
C 
130                     CONTINUE
C 
C                       IS A SIGN CHARACTER NEEDED
C 
                IF(ISIGN .EQ. 1) GO TO 140
C 
C                       IS THE RANGE EXCEEDED 
C 
                IF(J .LT. IIC) GO TO 910
C 
C                       INSERT SIGN THERE IS ROOM 
C 
                CALL ICHMV(IOUT,J,ISGN(ISIGN),2,1)
C 
C               STEP BEFORE THE SIGN INSERT 
C 
        J=J-1 
C 
140             CONTINUE
C 
C               STEP J TO LAST CHARACTER PUT IN STRING
C 
        J=J+1 
C 
C                       CHECK FOR LEFT SHIFT DESIRED AND NEEDED 
C 
                IF(IAND(NC,100000B) .EQ. 0 .OR. J .LE. IIC) GO TO 300 
C 
C               CALCULATE NUMBER OF CHARACTERS GENERATED
C 
        IB2AS=JEND-J+1
C 
C                SHIFT DATA OVER AND FILL THE REST WITH BLANKS
C 
        CALL IFILL(IOUT,ICHMV(IOUT,IIC,IOUT,J,IB2AS),NIC-IB2AS,2H  )
C 
                GO TO 999 
C 
200     CONTINUE
C 
C               IF EXIT HERE NUMBER TOO BIG FOR FIELD HENCE ERROR 
C 
        GO TO 910 
C 
300     CONTINUE
C 
C               ALL CHARACTERS USED SO TELL USER
C 
        IB2AS=NIC 
C 
C               NOW EXIT
C 
        GO TO 999 
C 
910     CONTINUE
C 
C               OVERFLOW HAS OCCURRED SENT DOLLAR SIGNS BACK($) 
C 
C       NUMBER TOO LONG FOR FIELD SEND DOLLAR SIGNS($)
C 
        CALL IFILL(IOUT,IIC,NIC,2H$$) 
C 
C               NOTE ERROR IN CALL
C 
        IB2AS=-1
C 
999     CONTINUE
        RETURN
      END 
        END$
