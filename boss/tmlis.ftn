FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@TMLIS 
C 
      SUBROUTINE TMLIS(IAS,IFC,IEC,ITLIS,IERR)
C 
C     TMLIS 
C 
C 1.  TMLIS PROGRAM SPECIFICATION 
C 
C 1.1.   TMLIS parses and decodes the SNAP <timelist> 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  TMLIS INTERFACE 
C 
C 2.1.   CALLING SEQUENCE: CALL TMLIS(III,III,...,OOO,OOO,...)
C 
C     INPUT VARIABLES:
C 
      DIMENSION IAS(1)
C               - string array
C        IFC,IEC- first,last characters of timelist in IAS
C 
C     OUTPUT VARIABLES: 
C 
C        IERR   - error return
      DIMENSION ITLIS(3,3)
C      ITIME - time list parameters                       781204
C              3 words each: start, period, stop. 
C                   ITIME(1,1) - start (IYR-1970)*1024 + IDAY 
C                   ITIME(2,1) - start HR*60+MIN
C                   ITIME(3,1) - start SEC*100 + MSEC/10
C                   ITIME(1,2) - period resolution code 
C                              1=msec/100    2=sec   3=min
C                   ITIME(2,2) - period multiplier (value)
C                   ITIME(3,2) - not used 
C                   ITIME(1,3) - stop (IYR-1970)*1024 + IDAY
C                   ITIME(2,3) - stop HR*60 + MIN 
C                   ITIME(3,3) - stop SEC*100 + MSEC/10 
C 
C 2.2  COMMON 
C 2.3.   DATA BASE ACCESSES 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: SPARS
C 
C     CALLED SUBROUTINES: GTTIM 
C 
C 3.  LOCAL VARIABLES 
C 
C        ICC1   - first comma location
C        ICC2   - second comma location 
      DIMENSION ITNOW(5)
C               - current time for comparing
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: nrv 
C     LAST MODIFIED: created 781204 
C# LAST COMPC'ED  870115:04:21 #
C
C     PROGRAM STRUCTURE
C
C     1. First initialize.  Check for a "cancel" condition.
C
      IF (IFC.LE.IEC) GOTO 200
      ITLIS(1,1) = -2
C                   We have an empty list.
      GOTO 999
C
C
C     2.  This is the first field section: start time.
C
200   ICC1 = ISCNC(IAS,IFC,IEC,54B)
      IF (ICC1.EQ.0) ICC1=IEC+1
      IF(ICHCM(IAS,IFC,2H!+,1,2).EQ.0) THEN
      IFC=IFC+2
      CALL GTTIM(IAS,IFC,ICC1-1,1,ITLIS(1,1),ITLIS(2,1),ITLIS(3,1),
     .           IERR)
      CALL REFTM(ITNOW,ITLIS,41B)
      ELSE
      CALL GTTIM(IAS,IFC,ICC1-1,0,ITLIS(1,1),ITLIS(2,1),ITLIS(3,1),
     .           IERR)
C                   Decode the start time
      ENDIF
  
      IF (IERR.NE.0) GOTO 999
C
      IF (ICC1.GE.IEC) GOTO 999
C                   There was only a start time
C
C
C     3.  There is more after the first comma.  Decode next field: period.
C
      ICC2 = ISCNC(IAS,ICC1+1,IEC,54B)
      IF (ICC2.EQ.0) ICC2=IEC+1
      CALL GTTIM(IAS,ICC1+1,ICC2-1,1,ITLIS(1,2),ITLIS(2,2),ITLIS(3,2),
     .           IERR)
C                   Decode the period 
      IF (IERR.NE.0) GOTO 999 
C 
C     3.1  Convert period to resolution and multiplier, a la
C     HP time fields. 
      IF (ITLIS(3,2).NE.0) GOTO 310 
C     3.11 No sec or msec specified, only minutes, so use that. 
      ITLIS(1,2) = 3
      GOTO 390
310   TSEC=ITLIS(2,2)*60.0 + ITLIS(3,2)/100.0 
C                   Compute total number of seconds in period 
      IF (TSEC*100.0.GT.32000) GOTO 320 
C     3.12 Period will fit into hundredths field. 
      ITLIS(2,2) = TSEC*100.0 
      ITLIS(1,2) = 1
      GOTO 390
320   IF (TSEC.GT.32000) GOTO 330 
C     3.13. Period fits into seconds
      ITLIS(2,2) = TSEC 
      ITLIS(1,2) = 2
      GOTO 390
C     3.14 Period fits into minutes 
330   ITLIS(2,2) = TSEC/60.0
      ITLIS(1,2) = 3
C
390   IF (ICC2.GE.IEC) GOTO 999
C
C
C     4.  There is more after the second comma: stop time.
C
      IF(ICHCM(IAS,ICC2+1,2H!+,1,2).EQ.0) THEN
      ICC2=ICC2+2
      CALL GTTIM(IAS,ICC2+1,IEC,1,ITLIS(1,3),ITLIS(2,3),ITLIS(3,3),
     .           IERR)
      CALL REFTM(ITNOW,ITLIS(1,3),41B)
      ELSE
      CALL GTTIM(IAS,ICC2+1,IEC,0,ITLIS(1,3),ITLIS(2,3),ITLIS(3,3),
     .           IERR)
      ENDIF
      IF (IERR.NE.0) GOTO 999
      IT11 = ITLIS(1,1)
      IT21 = ITLIS(2,1)
      IT31 = ITLIS(3,1)
      IT13 = ITLIS(1,3)
      IT23 = ITLIS(2,3)
      IT33 = ITLIS(3,3)
      IF (IT11.NE.-1) GOTO 400
      CALL EXEC(11,ITNOW,IY)
      IT11 = (IY-1970)*1024 + ITNOW(5)
      IT21 = ITNOW(4)*60 + ITNOW(3) 
      IT31 = ITNOW(2)*100 + ITNOW(1)
C 
400   IF (IT11/1024.NE.IT13/1024) IERR=-10
C                   Not possible to schedule over a year boundary 
      IF ((IT11.GT.IT13).OR.(IT11.EQ.IT13.AND.
     .IT21.GT.IT23).OR.(IT11.EQ.IT13.AND. 
     .IT21.EQ.IT23.AND.IT31.GT.IT33)) IERR=-11
C                   Stop time must be greater than start
C 
999   RETURN
      END 
