FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE BINIT(IP,LNAMES,NNAMES,ITSCB,NTSCB,IDCBSK,IERR)
C                INITIALIZE BOSS          <910322.1647>
C
C     NRV modified 801201
C     810730 NRV Add error calls to LOGIT in new format
C     850121 MWH Call RMPAR on return from ANTCN
C     850501 WEH Print a message if we didn't initialize ANCTN
C     880105 LAR Change LNAMES to contain names instead of hash codes
C
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
      DIMENSION IP(1)                     !  RMPAR values from BOSS
      DIMENSION IDCBSK(1)                 !  DCSs for schedule
      DIMENSION LNAMES(10,1)              !  List of command names
      DIMENSION ITSCB(13,1)               !  Time-scheduling control block
      DIMENSION IBUF(50)                  !  Input buffer containing command
      DIMENSION ITIME(9)                  !  Time array returned from SPARS
      DIMENSION LSEG(2)                   !  Segment name (obsolete)
      DIMENSION IREG(2),ISIZE(2)
      DIMENSION LMES1(10),LMES2(10),LMES3(10),LMES2A(10), 
     .          LMES5(10),LMES4(10),LMES6(19) 
      EQUIVALENCE (IREG(1),REG) 
      DATA ISIZE/50,0/
      DATA IBLEN/50/
      DATA LMES1  /2HCO,2HMM,2HAN,2HD ,2HLI,2HST,2H I,2HNI,2HT ,2H  / 
      DATA LMES2  /2HMA,2HTC,2HN ,2HIN,2HIT,2HIA,2HLI,2HZE,2HD ,2H  /
      DATA LMES2A /2HIB,2HCO,2HN ,2HIN,2HIT,2HIA,2HLI,2HZE,2HD ,2H  /
      DATA LMES4  /2HAN,2HTE,2HNN,2HA ,2HIN,2HIT,2HIA,2HLI,2HZE,2HD /
      DATA LMES5  /2HST,2HAT,2HIO,2HN ,2HCO,2HNF,2HIG,2H I,2HNI,2HT /
      DATA LMES6  /015446B,2HdB,2H!!,2H A,2HNT,2HEN,2HNA,2H N,2HOT,
     +             2H I,2HNI,2HTI,2HAL,2HIZ,2HED,32,2H!!,015446B,2Hd@/
C
C
C     1. First initialize values from RMPAR parameters.
C     IP(1) = LU for terminal input and messages
C     IP(2) = LU for logs and procedures (optional)
C
      LU = IP(1)
      IF (LU.EQ.0) LU = 1
      ICRLOG = IP(2)
C
      CALL EXEC(11,ITIME)
      ITODAY = ITIME(5)
C
C     INITIALIZE COMMON
C
C     CALL INCOM(IDCBSK,IERR)
      CALL EXEC(9,6HINCOM )
      CALL RMPAR(IP)
      IERR = IP(3)
      IF (IERR.NE.0) RETURN
C
      DO  I=1,NTSCB
        ITSCB(1,I) = -1
      ENDDO
C
      CALL EXEC(2,LU,LMES5,-20)
C
C
C     1.1 READ IN ALLOWED COMMAND NAMES
C
      INAME = 0
      CALL FmpOpen(IDCBSK,IERR,'/CONTROL/STCMD.CTL','ros',1)
      IF (IERR.LT.0) THEN
        CALL LOGIT(0,0,0,1,-110,2HBO,IERR)
        RETURN
      ENDIF
      IERR = 0
      ILEN = 0
        CALL READG(IDCBSK,IERR,IBUF,12,ILEN)
      DO WHILE (IBUF.NE.2H  )
        IF (IERR.NE.0) THEN
          CALL LOGIT(0,0,0,1,-111,2HBO,IERR)
          RETURN
        ENDIF
        IF (ILEN.GE.0) THEN
          INAME = INAME + 1
          IF (INAME.GT.NNAMES) THEN
            CALL LOGIT(0,0,0,1,-112,2HBO,NNAMES)
            RETURN
          ENDIF
          IDUMMY = ICHMV(LSEG,1,IBUF,14,4)
          ISS = IAS2B(IBUF,18,4)
          ITY = IAS2B(IBUF,23,2)
          DO J=1,6
            LNAMES(J,INAME) = IBUF(J)
          ENDDO
          LNAMES(7,INAME) = LSEG(1)
          LNAMES(8,INAME) = LSEG(2)
          LNAMES(9,INAME) = ISS
          LNAMES(10,INAME) = ITY
        ENDIF
        CALL READG(IDCBSK,IERR,IBUF,12,ILEN)
      ENDDO
      CALL FmpClose(IDCBSK,IERR)
      CALL FmpOpen(IDCBSK,IERR,'/FS/CONTROL/FSCMD.CTL','ros',1)
      IF (IERR.LT.0) THEN
        CALL LOGIT(0,0,0,1,-110,2HBO,IERR)
        RETURN
      ENDIF
      IERR = 0
      ILEN = 0
        CALL READG(IDCBSK,IERR,IBUF,12,ILEN)
      DO WHILE (IBUF.NE.2H  )
        IF (IERR.NE.0) THEN
          CALL LOGIT(0,0,0,1,-111,2HBO,IERR)
          RETURN
        ENDIF
        IF (ILEN.GE.0) THEN
          INAME = INAME + 1
          IF (INAME.GT.NNAMES) THEN
            CALL LOGIT(0,0,0,1,-112,2HBO,NNAMES)
            RETURN
          ENDIF
          IDUMMY = ICHMV(LSEG,1,IBUF,14,4)
          ISS = IAS2B(IBUF,18,4)
          ITY = IAS2B(IBUF,23,2)
          DO J=1,6
            LNAMES(J,INAME) = IBUF(J)
          ENDDO
          LNAMES(7,INAME) = LSEG(1)
          LNAMES(8,INAME) = LSEG(2)
          LNAMES(9,INAME) = ISS
          LNAMES(10,INAME) = ITY
        ENDIF
        CALL READG(IDCBSK,IERR,IBUF,12,ILEN)
      ENDDO
      CALL FmpClose(IDCBSK,IERR)
      NNAMES = INAME
      CALL EXEC(2,LU,LMES1,-20)
C
C
C     1.15 Initialize MATCN's names and addresses.
C
      CALL RDTMA(IDCBSK,IERR)
      IF (IERR.NE.0) THEN
        CALL LOGIT(0,0,0,1,-114,2HBO,IERR)
        RETURN
      ENDIF
      CALL EXEC(2,LU,LMES2,-20)
C
C
C     1.16 Initialize tables in IBCON
C
      CALL RDTIB(IDCBSK,IERR)
      IF (IERR.NE.0) THEN
        CALL LOGIT(0,0,0,1,-115,2HBO,IERR)
        RETURN
      ENDIF
      CALL EXEC(2,LU,LMES2A,-20)
C
C     1.17 Initialize the antenna interface, if any.
C
      IF (LUANT.EQ.0) LUANT = LU
      IERR = 0
      IF (LUANT.NE.LU) THEN
C                   For testing with LUANT=LU, don't issue CNs
        CALL EXEC(9,6HANTCN ,0)
        CALL RMPAR(IP)
        IERR = IP(3)
        IF (IERR.NE.0) THEN
          CALL LOGIT(0,0,0,1,-116,2HBO,IERR)
          RETURN
        ENDIF
        CALL EXEC(2,LU,LMES4,-20)
      ELSE
        CALL EXEC(2,LU,LMES6,-38)
        CALL BELL(LU,0)
      ENDIF
C
C     1.18 Start first log file
C
      LLOG = 'STATION'
      CALL NEWLG(IBUF,2H::)
C
      RETURN
      END
