FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE OPNPF(LPRC,IDCB,IBUF,IBLEN,LPROC,MAXPR,NPROC,IERR,OLD)
C     !OPEN PROC FILE AND MAKE DIRECTORY C#870115:04:19#
C
C     OPNPF opens the named procedure file and reads through
C     it, making a directory of the entries.
C
C     DATE   WHO CHANGES
C     810906 NRV CREATED
C     890509 MWH Modified to use CI files
C
C  INPUT:
C
C     LPRC - the file name
      CHARACTER*12 LPRC
C     IDCB - DCB for opening the file
C     IBUF - a buffer to use for reading
C     IBLEN - the length of IBUF in words
C     MAXPR - maximum number of entries in LPROC
C     OLD - 'N' if new procedure library, 'O' if old
      DIMENSION IDCB(1),IBUF(1)
      CHARACTER*(*) OLD
C
C  OUTPUT:
C
C     LPROC - the procedure directory information
C     NPROC - number of procedures in this file
      DIMENSION LPROC(10,1)
C
C  LOCAL:
C
C     IERR - error return from FMP routines
C     ICH - character counter
C     LNAMEF - full file name
      INTEGER*4 IREC,IOFF
      CHARACTER*28 LNAMEF
      integer*2 FmpReadString
      character*80 ibc
      dimension ib(40)
      equivalence (ib,ibc)
C
C
C     1. First try to open the file.
C     The file is opened non-exclusively and in update mode.
C
      LNAMEF = '/PROC/' // LPRC(1:8) // '.PRC'
      CALL FmpOpen(IDCB,IERR,LNAMEF,'rwosu',5)
      IF (IERR.LT.0) RETURN
C
C     2. The file is opened.  Read through all lines.
C     If we encounter DEFINE, then execute next section.
C
      NPROC = 0
210   ILEN = FmpReadString(IDCB,IERR,IBC)
      IF (ILEN.LE.0) GOTO 900
      IF (IERR.LT.0) GOTO 990
      IF (IBC(1:6).EQ.'DEFINE') THEN
C
C     3. Fill up LPROC with the information on this file location.
C
        IF (NPROC+1.GT.MAXPR) THEN
          CALL LOGIT(0,0,0,1,-126,2HBO,MAXPR)
          GOTO 990
        ENDIF
        NPROC = NPROC + 1
        id = FmpPosition(IDCB,IERR,IREC,IOFF)
        DO J=1,6
          LPROC(J,NPROC)=IB(4+J)
        ENDDO
        LPROC(8,NPROC) = IREC-1
        LPROC(10,NPROC) = IOFF
        IF(OLD.EQ.'N') THEN
          IREC=IREC-1
          CALL FMPSETPOSITION(IDCB,IERR,IREC,-IREC)
          IBC(23:34)='00000000000X'
          IERR=FmpWriteString(IDCB,IERR,IBC(:ILEN))
          IF(IERR.LT.0) GOTO 900
        ENDIF
      ENDIF
      GOTO 210
C
C     9. Normal ending because EOF is reached.
C
900   IERR = 0
C
990   id = FmpRewind(IDCB,IERR)
      RETURN
      END
