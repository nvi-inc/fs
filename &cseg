FTN4X 
      PROGRAM COMPC(3,96) 
C# LAST COMPC'ED  810929:21:53 *
C 
C  MODIFIED 790426 BY ARW TO USE IGETS INSTEAD OF IGET SO THAT COMPC CAN
C     BE LOADED AS A LB PROGRAM 
C  MODIFIED 790705 BY ARW TO NOT UPDATE C# CARD IF SECURITY CODE WRONG
C  MODIFIED 790722 BY ARW TO FIX BUG IN PARSING NAME OF ASMB ROUTINE
C  MODIFIED 790823 BY ARW SO "X" OR "Y" CONTROL IN FTN4 CONTROL STATEMENT 
C     IS AUTOMATICALLY PASSED THROUGH REGARDLESS
C  MODIFIED 800108 BY CMA FOR OUTPUT NAMELIST 
C  MODIFIED 800129 BY CMA TO CLOSE CPCPCP AFTER BREAK 
C  MODIFIED 800604 BY CMA TO FIX BLOCK DATA IN EMA SOURCE AND 
C     IMPLEMENT OTHERWISE IN CASE STRUCTURE 
C  MODIFIED 800923 BY ARW TO SUPPORT FTN4X
C  MODIFIED 801006 BY ARW TO ALLOW ALPHA CARTRIDGE LABEL
C  MODIFIED 801111 BY ARW TO SUPPORT $FILES DIRECTIVE AND $STRUC DIRECTIVE
C     (old STRUCTURED format still supported, but obsolete) 
C  MODIFIED 801112 BY ARW TO NAME SCRATCH FILES ACCORDING TO NAME OF CURRENT
C     COPY OF COMPC, AND TO PURGE ALL SCRATCH FILES ON TERMINATION
C     REMOVE ROUTINE WAITX TO PREVENT QUEUE-SCHEDULING BECAUSE NOT NEEDED 
C     ANY MORE
C  MODIFIED 810120 BY CMA TO HAVE SUMMARY LUII
C  MODIFIED 810205 BY CMA TO ALLOW STRING REPLACEMENT USING $PARM AND $PARMF
C     $INCLUDE TO ALLOW INCLUDING ENTIRE ROUTINES WITH NESTING
C  MODIFIED 810217 BY ARW TO GENERALIZE $INCLUDE, REMOVE $PARMF FEATURE,
C     AND ADD CAPABILITY TO SPECIFY SECURITY CODE FOR RELOCATABLES
C  MODIFIED 810304 BY ARW TO ALLOW UNCONDITIONAL OVERRIDE OF CARTRIDGE
C     SPECIFICATION IN $INCLUDE STATEMENTS
C  MODIFIED 810306 BY ARW TO ALLOW USE OF $PAGE AND $TITLE DIRECTIVES 
C     IN FTN4X
C  MODIFIED 810313 BY CMA TO MULTICOPY LITERAL FILE AND CHECK READ ERRORS 
C  MODIFIED 810331 BY CMA TO PROMPT FOR UNSUBSTITUTED $INCLUDE XX, CHANGE 
C     READI TO BLANK BUFFER UP TO 72
C  MODIFIED 810409 BY ARW TO PROPERLY IDENTIFY FTN4X FUNCTIONS WITH *n IN 
C     FUNCTION DECLARATION STATEMENT
C  MODIFIED 810428 BY CMA TO ALLOW :SC:CARTREF FOR COMPOSITE RELOCATABLE, 
C     CORRECT MINOR INCONVENIENCES
C  MODIFIED 810521 BY ARW TO SUPPORT RAT4 
C  MODIFIED 810626 BY CMA TO INSERT LI,%%GSFC::21 IN LOADR COMMAND FILES, 
C     CORRECT REPLACEMENT OF LABELED COMMONS IN COMBINED RELOCATABLE FILES
C  MODIFIED 810630 BY CMA TO RP AND OF FTN4X AS NEEDED
C  MODIFIED 810717 BY CMA TO ALLOW ADDING RELOCATABLES BEFORE SPECIFIED 
C     ROUTINES
C  MODIFIED 810722 BY ARW TO DO MORE SOPHISTICATED SELECTION OF SCRATCH CART
C  MODIFIED 810812 BY CMA TO HANDLE INCLUDE LIKE $INCLUDE AND TO ALLOW
C     SOURCE NAMR AS FIRST PARAMETER INTERACTIVELY
C  MODIFIED 810826 BY CMA TO PACK $PARM STRINGS AND RESTRICT $INCLUDE 
C  MODIFIED 810830 BY CMA TO HANDLE $INCLUDE IN FIRST LINE OF INCLUDED
C     FILE AND TO FIX BUG IN $PARM IN STRUCTURED CODE 
C  MODIFIED 810902 BY CMA TO FIX BUG WITH $PARM AND LITERAL DATA
C     AND DUPLICATE $PARM DEFINITIONS 
C 
C COMMON FOR COMPC
      COMMON /CNTRL/ NINC(4),IDCBI(528),IDCBO(656),IDCBIS,IDCBOS, 
     1 NAMI(3),ISECUP,ISECUI,ICRI,NAMT(3),NAMM(3),ICRO,NAMC(3),NAMDD(3),
     1 NAMS(4,60),NAMA(4),NAMSX,NAMO(4),NAMP(4),NAML(4),NAMD(4),
     2 IB(185),IBB(271),LFTN4(10,5),LCDQ(10),LF4XY(2),LF4X(2),LF4Y(2),
     2 LF4IJ(2),LF4I(2),LF4J(2),
     3 IMPAR(5),LUI,LUII,LUO,LUD,LUNAMT,NN,IN,KALL,IREG(2), 
     5 ICNTRL,ILIST,IDEBUG,KDATE, 
     6 ICOMNT,ICFLAG,ICDATE,ICP,L2C,
     7 KGO,KSTRUC,KSERR,KCP,ILABEL,KEMA,LLEMA(14),LLFILE(14),KCNC,
     8 IDCBP(144),IDCBL(144),KPAR,JPAR,MXPAR,LPR(300),KINCL,KINCR,KINCR1
      EQUIVALENCE (REG,IREG)
C GET RMPAR PARAMETERS
      CALL RMPAR(IMPAR) 
C GET BUFFER
      REG=EXEC(14,1,IB,-160)
C GET NAME OF COPY OF COMPC 
      IDAD=IGETS(1717B) 
      NAMC=IGETS(IDAD+12) 
      NAMC(2)=IGETS(IDAD+13)
      NAMC(3)=IGETS(IDAD+14)
C REPLACE LAST 2 CHARS OF POTENTIAL SCRATCH FILE NAMES WITH LAST 2 CHARS
C OF PROGRAM COPY NAME
      L2C=IOR(IAND(NAMC(2),177B)*400B,IAND(NAMC(3),77400B)/400B)
      NAMO(4)=L2C 
      NAMP(4)=L2C 
      NAML(4)=L2C 
      NAMD(4)=L2C 
C SET RECORD SIZE FOR $INCLUDE IDCBI SAVES
      CALL STOPN(IDCBIS+4)
C RP SEGMENTS 
      IF(IRP(6HCMSG1 ,0,JRP,-1).EQ.14) GO TO 1000 
      IF(IRP(6HCMSG2 ,0,JRP,-1).EQ.14) GO TO 1000 
      IF(IRP(6HCMSG3 ,0,JRP,-1).EQ.14) GO TO 1000 
C TERMINAL INPUT
100   CALL LINCA(6HCMSG1 ,6HINTRM ) 
C IMMEDIATE EXIT WITHOUT PROCESSING IF FLAG SET (ABORT OR NO ROUTINES)
      IF(KGO.EQ.1000) GO TO 1000
C ERROR EXIT FROM INPUT - PRINT MESSAGE AND CLEAN UP
      IF(KGO.GT.0) GO TO 500
C FIND ROUTINES 
200   CALL LINCA(6HCMSG3 ,6HFROUT ) 
C IF FINISHED OR ERROR, CLEAN UP
      IF(KGO.GT.0) GO TO 500
C INITIALIZE BYPASS RETURN
      CALL IBYP1(II)
      IF(II.EQ.2) GO TO 500 
C PROCESS ROUTINE AND PASS TO OUTPUT FILE 
300   CALL LINCA(6HCMSG2 ,6HPROUT ) 
C IF IRRECOVERABLE ERROR, CLEAN UP - OTHERWISE, COMPILE 
      IF(KGO.GT.0) GO TO 500
400   CALL LINCA(6HCMSG3 ,6HCOMPP ) 
C IF IRRECOVERABLE ERROR, EXIT - OTHERWISE, FIND NEXT ROUTINE 
      IF(KGO.GT.0) 500,200
C CLEAN UP SECTION
500   CALL LINCA(6HCMSG1 ,6HCLEAN ) 
C END OF PROCESSING 
1000  CONTINUE
C OF SEGMENTS 
      IF(JRP.EQ.23) GO TO 1001
      CALL IOF(6HCMSG1 ,JRP,0)
      CALL IOF(6HCMSG2 ,JRP,0)
      CALL IOF(6HCMSG3 ,JRP,0)
C CLOSE TRACKS USED FOR $INCLUDE IDCBI SAVES
1001  CALL STOPN(0) 
C RETURN GLOBALS
      CALL PRTN(IBB)
      END 
      PROGRAM CMSG1,5 
      EXTERNAL INTRM,CLEAN
      DIMENSION LS(7) 
      DATA LS     /  12,2HIN,2HTR,2HM ,2HCL,2HEA,2HN /
      CALL LINCB(LS,INTRM,CLEAN)
      END 
      PROGRAM CMSG2,5 
      EXTERNAL PROUT
      DIMENSION LS(4) 
      DATA LS     /   6,2HPR,2HOU,2HT / 
      CALL LINCB(LS,PROUT)
      END 
      PROGRAM CMSG3,5 
      EXTERNAL FROUT,COMPP
      DIMENSION LS(7) 
      DATA LS     /  12,2HFR,2HOU,2HT ,2HCO,2HMP,2HP /
      CALL LINCB(LS,FROUT,COMPP)
      END 
      FUNCTION ISTRU(I) 
C COMMON FOR COMPC
      COMMON /CNTRL/ NINC(4),IDCBI(528),IDCBO(656),IDCBIS,IDCBOS, 
     1 NAMI(3),ISECUP,ISECUI,ICRI,NAMT(3),NAMM(3),ICRO,NAMC(3),NAMDD(3),
     1 NAMS(4,60),NAMA(4),NAMSX,NAMO(4),NAMP(4),NAML(4),NAMD(4),
     2 IB(185),IBB(271),LFTN4(10,5),LCDQ(10),LF4XY(2),LF4X(2),LF4Y(2),
     2 LF4IJ(2),LF4I(2),LF4J(2),
     3 IMPAR(5),LUI,LUII,LUO,LUD,LUNAMT,NN,IN,KALL,IREG(2), 
     5 ICNTRL,ILIST,IDEBUG,KDATE, 
     6 ICOMNT,ICFLAG,ICDATE,ICP,L2C,
     7 KGO,KSTRUC,KSERR,KCP,ILABEL,KEMA,LLEMA(14),LLFILE(14),KCNC,
     8 IDCBP(144),IDCBL(144),KPAR,JPAR,MXPAR,LPR(300),KINCL,KINCR,KINCR1
      ISTRU=0 
      WRITE(LUII,9999)
9999  FORMAT("!!!!!-----STRUCTURED CODE NOT IMPLEMENTED-----!!!!!") 
      CALL EXEC(6)
      END 
      END 
      BLOCK DATA CNTRL
C COMMON FOR COMPC
      COMMON /CNTRL/ NINC(4),IDCBI(528),IDCBO(656),IDCBIS,IDCBOS, 
     1 NAMI(3),ISECUP,ISECUI,ICRI,NAMT(3),NAMM(3),ICRO,NAMC(3),NAMDD(3),
     1 NAMS(4,60),NAMA(4),NAMSX,NAMO(4),NAMP(4),NAML(4),NAMD(4),
     2 IB(185),IBB(271),LFTN4(10,5),LCDQ(10),LF4XY(2),LF4X(2),LF4Y(2),
     2 LF4IJ(2),LF4I(2),LF4J(2),
     3 IMPAR(5),LUI,LUII,LUO,LUD,LUNAMT,NN,IN,KALL,IREG(2), 
     5 ICNTRL,ILIST,IDEBUG,KDATE, 
     6 ICOMNT,ICFLAG,ICDATE,ICP,L2C,
     7 KGO,KSTRUC,KSERR,KCP,ILABEL,KEMA,LLEMA(14),LLFILE(14),KCNC,
     8 IDCBP(144),IDCBL(144),KPAR,JPAR,MXPAR,LPR(300),KINCL,KINCR,KINCR1
C BUFFER AND NAME ARRAY LIMITS
      DATA IDCBIS /528/, IDCBOS /656/, NAMSX /60/ 
C SCRATCH FILES AND CR (ICRO selects cartridge for scratch files according
C     to the following algorithm: 
C        If ICRO=-32767, set ISCRT=ICRI unconditionally.
C        If ICRO=0, set ISCRT to cartridge currently at top of current 'CL' 
C           list, but not lu2 or lu3. 
C        If ICRO is a valid cartref within the current 'CL' list, set ISCRT=ICRO
C           (including lu2 or lu3, if specified, but will not normally work 
C           under a Session Monitor system) 
C        Otherwise, set ICRO=ICRI unconditionally.
      DATA NAMO /6,2H&C,2H1*,2HXX/, NAMP /6,2H%C,2H2*,2HXX/,
     .     NAML /6,2H'C,2H3*,2HXX/, NAMDD/  2H%C,2H4*,2HXX/,
     .     NAMD /6,2H&C,2H5*,2HXX/
      DATA ICRO /0/ 
C OTHER INITIALIZATION
      DATA NN /0/, KALL /1HN/, KGO /0/, KCP /0/, ICNTRL /0/, ICFLAG /0/ 
      DATA NAMM /3*2H  /, LUD /0/ 
      DATA LF4X /2,2H,X/, LF4Y /2,2H,Y/,LF4I/2,2H,I/,LF4J/2,2H,J/ 
      DATA JPAR /1/, MXPAR /300/, LPR /300*0/, KINCL /0/, NINC /4*0/
      END 
