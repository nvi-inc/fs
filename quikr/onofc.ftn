FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@ONOFC 
C 
      SUBROUTINE ONOFC(IP),ONOFF SETUP CONTROL C#870115:04:56#
C 
C     ONOFC sets up the common variables necessary for
C      the proper execution of program ONOFF
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # REC
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C   COMMON BLOCKS USED
C 
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C     CALLED SUBROUTINES: NFDIS, utilities
C 
C   LOCAL VARIABLES 
C 
C        NCHAR  - number of characters in buffer
C        ICH    - character counter 
      DIMENSION IBUF(40)
C               - class buffer
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      DIMENSION VCBW(6) 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C 
C  INITIALIZED VARIABLES
C 
      DATA ILEN/80/ 
      DATA VCBW/.125,.25,.5,1.0,2.0,4.0/
C 
C  PROGRAMMER: MWH
C     CREATED: 840510 
C     LAST MODIFIED:
C 
C 
C     1. If we have a class buffer, then we are to set the
C     variables in common for ONOFF to use. 
C 
D     WRITE(LU,9002)
D9002 FORMAT("ENTERING ONOFC")
      CALL IFILL(IBUF,1,ILEN,40B) 
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
      IERR = -1 
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = MIN0(ILEN,IREG(2))
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
C                   Scan for "="
      IF (IEQ.EQ.0) GOTO 490
C                   If no parameters, schedule ONOFF
      IF(NCHAR.EQ.IEQ) GOTO 220 
D     WRITE(LU,9001)(IBUF(I),I=1,10)
D9001 FORMAT("IBUF IN ONOFC = "10A2)
      IF (JCHAR(IBUF,IEQ+1).NE.77B) GOTO 220
      IP(1) = 0 
      IP(4) = 77B 
      CALL NFDIS(IP,IBUF,ILEN,NCHAR)
      RETURN
C
C     2. Step through buffer getting each parameter and decoding it.
C     2.1 FIRST parm, number of repetitions
C
220   CONTINUE
      ICH=1+IEQ
      CALL GTPRM(IBUF,ICH,NCHAR,1,PARM)
      IF (JCHAR(PARM,1).EQ.54B) NREP = 2
C                 Default is 1 repetition
      IF (JCHAR(PARM,1).EQ.52B) NREP = NREPNF
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) NREP = IPARM
      IF (NREP.GE.1.AND.NREP.LE.10) GOTO 250
        IERR = -401
        GOTO 990
C
C  2.2  SECOND parm, integration period
C
250   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,1,PARM) 
      IF(JCHAR(PARM,1).EQ.54B) INTP = 1
      IF(JCHAR(PARM,1).EQ.52B) INTP = INTPNF
      IF(JCHAR(PARM,1).NE.54B.AND.JCHAR(PARM,1).NE.52B) INTP = IPARM
      IF(INTP.GE.1.AND.INTP.LE.10) GOTO 260
        IERR = -402
        GOTO 990
C
C     2.3 Third parm, detector device 1.
C
260   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B)
     .  LDV1=MDNAM(IPARM)
      IF (JCHAR(PARM,1).EQ.54B) IDUMM1 = ICHMV(LDV1,1,2HI1,1,2)
C                      Default is IF1
      IF (JCHAR(PARM,1).EQ.52B) IDUMM1 = ICHMV(LDV1,1,LDV1NF,1,2)
      IF(JCHAR(LDV1,1).EQ.111B.OR.JCHAR(LDV1,1).EQ.126B) GOTO 360
        IERR = -403
        GOTO 990
C           Illegal value entered
C
C     2.5 Third parm, detector device 2.
C
360   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B)
     .  LDV2=MDNAM(IPARM)
      IF (JCHAR(PARM,1).EQ.54B) IDUMM1 = ICHMV(LDV2,1,2HI2,1,2)
C                      Default is IF1
      IF (JCHAR(PARM,1).EQ.52B) IDUMM1 = ICHMV(LDV2,1,LDV2NF,1,2)
      IF(JCHAR(LDV2,1).EQ.111B.OR.JCHAR(LDV2,1).EQ.126B) GOTO 400
        IERR = -406
        GOTO 990
C           Illegal value entered
C
C  2.7  Fifth parm, cut off elevation
C
400   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,2,PARM)
      IF(JCHAR(PARM,1).EQ.54B) CTOF= 60.*PI/180.
      IF(JCHAR(PARM,1).EQ.52B) CTOF = CTOFNF
      IF(JCHAR(PARM,1).NE.54B.AND.JCHAR(PARM,1).NE.52B)
     +           CTOF = PARM*PI/180.
      IF(CTOF.GE.0.AND.CTOF.LE.90.1*PI/180.) GOTO 450
        IERR = -409
        GOTO 990
C 
C  2.8  Sixth parm, step size 
C 
450   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,2,PARM) 
      IF(JCHAR(PARM,1).EQ.54B) STEP= 5. 
      IF(JCHAR(PARM,1).EQ.52B) STEP = STEPNF
      IF(JCHAR(PARM,1).NE.54B.AND.JCHAR(PARM,1).NE.52B)
     +           STEP = PARM
      IF(STEP.GT.0.AND.STEP.LE.99) GOTO 470
        IERR = -410
        GOTO 990
C
C  3.0  Set common variables to their new values
C
470   CONTINUE
      IDUMM1 = ICHMV(LDV1NF,1,LDV1,1,4)
      IDUMM1 = ICHMV(LDV2NF,1,LDV2,1,4)
      NREPNF = NREP
      INTPNF = INTP
      CTOFNF = CTOF
      STEPNF = STEP
      GOTO 990
C
C  5.0  Schedule ONOFF to start working
C
C  Determine cal temp and frequency for device 1.
C
490   CONTINUE
      IF(JCHAR(LDV1NF,1).EQ.111B.OR.JCHAR(LDV1NF,1).EQ.126B) GOTO 500
        IERR = -503
        GOTO 990
C
500   CONTINUE
      IF(JCHAR(LDV1NF,1).NE.111B) GOTO 505
      IF(LDV1NF.NE.2HI1) GOTO 502
        CAL1 = CALTMP(1)
        BM1=BEAMSZ_FS(1)
        FX1=FLX1FX_FS
        GOTO 510
502   CONTINUE
      CAL1 = CALTMP(2)
      BM1=BEAMSZ_FS(2)
      FX1=FLX2FX_FS
      GOTO 510
505   CONTINUE
      INDVC = IA2HX(LDV1NF,2)
      IF(IABS(IFP2VC(INDVC)).NE.1) GOTO 507
        CAL1 = CALTMP(1)
        BM1=BEAMSZ_FS(1)
        FX1=FLX1FX_FS
        GOTO 510
507   CONTINUE
      IF(IABS(IFP2VC(INDVC)).NE.2) GOTO 508
      CAL1 = CALTMP(2)
      BM1=BEAMSZ_FS(2)
      FX1=FLX2FX_FS
      GOTO 510
508   CONTINUE
      IERR=-411
      GOTO 990
C
C  Now check the cal and freq values.
C
510   CONTINUE
      IF(CAL1.NE.0) GOTO 515
        IERR = -404
        GOTO 990
515   IF(BM1.GT.4.8E-8) GOTO 520
        IERR = -405
        GOTO 990
C
C   Determine cal temp and frequency for device 2.
C
520   CONTINUE
      IF(JCHAR(LDV2NF,1).NE.111B) GOTO 525
      IF(LDV2NF.NE.2HI1) GOTO 522
        CAL2 = CALTMP(1)
        BM2= BEAMSZ_FS(1)
        FX2=FLX1FX_FS
        GOTO 530
522   CONTINUE
      CAL2 = CALTMP(2)
      BM2=BEAMSZ_FS(2)
      FX2=FLX2FX_FS
      GOTO 530
525   CONTINUE
      INDVC = IA2HX(LDV2NF,2)
      IF(IABS(IFP2VC(INDVC)).NE.1) GOTO 527
        CAL2 = CALTMP(1)
        BM2  = BEAMSZ_FS(1)
        FX2=FLX1FX_FS
        GOTO 530
527   CONTINUE
      IF(IABS(IFP2VC(INDVC)).NE.2) GOTO 528
      CAL2 = CALTMP(2)
      BM2  = BEAMSZ_FS(2)
      FX2=FLX2FX_FS
      GOTO 530
528   CONTINUE
      IERR=-412
      GOTO 990
C
C  Now check the cal and freq values.
C
530   CONTINUE
      IF(CAL2.NE.0) GOTO 535
        IERR = -407
        GOTO 990
535   IF(BM2.GT.4.8E-8) GOTO 600
        IERR = -408
        GOTO 990
C
600   CONTINUE
      CAL1NF=CAL1
      CAL2NF=CAL2
      BM1NF_FS=BM1
      BM2NF_FS=BM2
      FX1NF_FS=FX1
      FX2NF_FS=FX2
      IF(JCHAR(LDV1NF,1).EQ.111B) GOTO 602
      INDVC = IA2HX(LDV1NF,2)
      IF(FREQVC(INDVC).GT.96.0.AND.FREQVC(INDVC).LT.504.00) GOTO 602
C           - VC MUST BE SETUP
        IERR = -504
        GOTO 990
602   CONTINUE
      IF(JCHAR(LDV2NF,1).EQ.111B) GOTO 604
      INDVC = IA2HX(LDV2NF,2)
      IF(FREQVC(INDVC).GT.96.0.AND.FREQVC(INDVC).LT.504.00) GOTO 604
C           - VC MUST BE SETUP
        IERR = -505
        GOTO 990
C
C          If it's not dormant, then error.
C
604   CONTINUE
      IF (IPGST(6HONOFF ).EQ.0) GOTO 610
      IF (IPGST(6HONOFF ).EQ.-1) GOTO 605
      IERR = -501
      GOTO 990
605   IERR = -502
      GOTO 990
610   CONTINUE
      CALL EXEC(10,6HONOFF )
C      Schedule ONOFF
990   IP(1) = 0
      IP(2) = 0
      IP(3) = IERR
      IP(4) = 2HQZ
      RETURN
      END 
