FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@MA
      SUBROUTINE MA(IP,NSUB),MAT AND ANTENNA COMMAND C#870115:04:35#
C 
C    MA transmits a buffer to MATCN or to ANTCN (OVRO ONLY) 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # REC
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C    COMMON BLOCKS USED 
C 
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C     CALLED SUBROUTINES: CHARACTER ROUTINES
C 
C   LOCAL VARIABLES 
C 
C     NSUB - which command are we processing
C            1=MAT, 8=ANTENNA 
C        NCHAR  - number of characters in buffer
C        NCH    - character counter 
C        ICOM    - character index of comma 
      DIMENSION IBUF(50)
C               - class buffer
      DIMENSION IBUF2(50) 
C               - output buffer for transmission
C        ILEN   - length of IBUF, chars 
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
C 
      EQUIVALENCE (REG,IREG(1)) 
C 
C    INITIALIZED VARIABLES
C 
      DATA ILEN/100/
C 
C   PROGRAMMER: NRV 
C     LAST MODIFIED: 800831 
C 
C 
C     1. Get the class buffer.  Messages for the MAT or for the antenna 
C     may be strung together, separated by commas.
C     Each set of characters between
C     commas is sent as a separate record in the class buffer.
C     Scan for a comma and write it out.
C
      ICLCM = IP(1)
      IF (ICLCM.NE.0) GOTO 110
100   IERR = -1
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)
C                   Scan for "="
C     WRITE(1,'(''NSUB,IBUF= '',I5,1X,50A2)')NSUB,IBUF
      IF (IEQ.EQ.0) GOTO 100
C                   If no parameters, get mad!
C
      NREC = 0
      ICLASS = 0
      IFC = 1+IEQ
C
200   ICOM = ISCNC(IBUF,IFC,NCHAR,54B)
C                   Scan for a comma
      IF (ICOM.EQ.0) ICOM = NCHAR + 1
      NCH = ICOM - IFC
      IF (NCH.LE.0) GOTO 210
C                   If there's nothing left, quit
      NENQ = ISCNC(IBUF,IFC,ICOM-1,11B)
C                   Scan for a tab character
      IF (NENQ.NE.0) IDUMM1 = ICHMV(IBUF,NENQ,5B,2,1)
C                   If we found one, substitute the enq character
      IDUMM1 = ICHMV(IBUF2(2),1,IBUF,IFC,ICOM-1,NCH)
C                   Move characters to output buffer starting at first
C                   character of this message up to just before comma.
      IF (NSUB.EQ.8) GOTO 205
      IBUF2(1) = 5
C                   Set up for MAT mode 5
      NCH = NCH + 2
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)
      GOTO 220
205   CALL EXEC(20,0,IBUF2(2),-NCH,2HFS,0,ICLASS)
C     WRITE(1,'(''NCH,IBUF2= '',I5,1X,50A2)')NCH,IBUF2
C                   For ANTCN, don't send the mode
220   NREC = NREC + 1
      IFC = ICOM + 1
C                   Start next scan after the comma
      IF (IFC.GT.NCHAR) GOTO 210
C                   If we are beyond the end, quit
      GOTO 200
C
210   IERR = 0
      IF (ICLASS.NE.0) GOTO 980
      IERR = -1
      GOTO 990
980   IF (NSUB.EQ.1) CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      IF (NSUB.EQ.8) CALL EXEC(23,6HANTCN ,4,ICLASS,NREC)
      CALL RMPAR(IP)
      CALL DEVDS(IP,ICLCM,NSUB)
      RETURN
C
990   IP(1) = 0
      IP(2) = 0
      IP(3) = IERR
      IP(4) = 2HQB
      RETURN
      END 
