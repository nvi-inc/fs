FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE DE(IP),DECODER CONTROLLER C#870115:04:37#
C
C 1.1.   DE controls the DECODER
C
C     INPUT VARIABLES:
      DIMENSION IP(1)
C        IP(1)  - class number of input parameter buffer.
C
C     OUTPUT VARIABLES:
C        IP(1) - CLASS
C        IP(2) - # REC
C        IP(3) - ERROR
C        IP(4) - who we are
C
C 2.2.   COMMON BLOCKS USED
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
C 2.5.   SUBROUTINE INTERFACE:
C     CALLING SUBROUTINES:
C     CALLED SUBROUTINES: GTPRM,JCHAR
C
C 3.  LOCAL VARIABLES
C        NCHAR  - number of characters in buffer
C        IMMODE - mode for MAT
C        ICH    - character counter
      DIMENSION IBUF(20)
C               - class buffer
      DIMENSION LMODE(12)
C               - modes for type of data from decoder
C        ILEN    - length of IBUF in chars
      DIMENSION IEM(3),IEMC(3) !ERROR COUNTER MODES
      DIMENSION NR(6),N1(6),N2(5),N3(2)
C                - number of requests, first code number, for
C                  each of the types of data
      DIMENSION IPARM(2)
C               - parameters returned from GDECRM
      DIMENSION IREG(2)
C               - registers from EXEC calls
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1))
C
C 5.  INITIALIZED VARIABLES
      DATA ILEN/40/
      DATA LMODE  /2HAU,2HX ,2HSY,2HN ,2HTI,2HME,2HDA,2HTA,2HER,2HR ,
     &             2HCR,2HC /
      DATA IEM    /2HB  ,2HF  ,2HR /
      DATA IEMC   /2H(  ,2H)  ,2H% /
      DATA NR/2,1,2,3,1,5/
      DATA N1/0,2,3,5,8,0/
      DATA N2/0,1,2,3,9/
      DATA N3/3,9/
C
C 6.  PROGRAMMER: NRV
C     LAST MODIFIED:  790320
C
C     PROGRAM STRUCTURE
C
C     1. If we have a class buffer, then we are to set up the data type.
C     If no class buffer, we have been requested to read the data.
C
      ICLCM = IP(1)
      IF (ICLCM.NE.0) GOTO 110
      IERR = -1
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = IREG(2)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)
C                   Scan for "="
      IF (IEQ.EQ.0) GOTO 500
C                   If no parameters, go read device
      IF (JCHAR(IBUF,IEQ+1).NE.77B) GOTO 140
      IP(1) = 0 
      IP(4) = 77B 
      CALL DEDIS(IP,ICLCM)
      RETURN
C 
140   IF (ICHCM(IBUF,IEQ+1,LTSRS,1,ILENTS).EQ.0) GOTO 600 
      IF (ICHCM(IBUF,IEQ+1,LALRM,1,ILENAL).EQ.0) GOTO 700 
C 
C 
C     2. Step through buffer getting each parameter and decoding it.
C     Command from user has these parameters:
C                   DECODE=<chan>,<datatype>,<counter>
C     where <chan>=A or B, default A.
C           <datatype>=AUX,SYN,TIME,DATA,ERR, or CRC.  Default ERR.
C           <counter>=B, F, R for BYTE, FRAME, RESET for error mode
C
C     2.1 CHAN, PARAMETER 1
C
210   ICH = 1+IEQ
      ICHAN = -1
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).EQ.52B) ICHAN = ICHAND
      IF (JCHAR(PARM,1).EQ.54B) ICHAN = 0
C                   Default is channel A
      IF (JCHAR(PARM,1).EQ.101B) ICHAN = 0
C                   Channel A
      IF (JCHAR(PARM,1).EQ.102B) ICHAN = 1
C                   Channel B
      IF (ICHAN.NE.-1) GOTO 220
      IERR = -201
      GOTO 990
C
C     2.2 DATA MODE, PARAMETERS 2
C
220   CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) GOTO 221
      IF (JCHAR(PARM,1).EQ.52B) IM = IMODDC
      IF (JCHAR(PARM,1).EQ.54B) IM = 5
C                   Default mode is 5, ERROR
      GOTO 230
221   DO 222 I=1,6
        IF (IPARM(1).EQ.LMODE(I*2-1).AND.IPARM(2).EQ.LMODE(I*2))
     .        GOTO 223
222     CONTINUE
      IERR = -202
      GOTO 990
223   IM =I
C
C     2.3 ERROR COUNTER CONTROL
C
230   CONTINUE
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) GOTO 231
      IF (JCHAR(PARM,1).EQ.52B) IE = IERRDC_FS
      IF (JCHAR(PARM,1).EQ.54B) IE = 1
C                   Default mode is 1, BYTE
      GOTO 233
231   CONTINUE
      DO I=1,3
        IE=I
        IF(ICHCM(PARM,1,IEM(I),1,1).EQ.0) GO TO 233
      ENDDO
      IERR = -203
      GOTO 990
233   CONTINUE
C
C
C     3. Now plant these values into COMMON.
C
300   IMODDC = IM
      ICHAND = ICHAN
      IERRDC_FS=IE
      IERR = 0
C
C     4. now set decode error counter mode
C
      IBUF(1)=0
      IBUF(2)=2HDE
      IDUMM1 = ICHMV(IBUF,5,IEMC(IERRDC_FS),1,1)
      ICLASS=0
      CALL EXEC(20,0,IBUF,-5,2HFS,0,ICLASS)
      NREC=1
      GOTO 800
C
C
C     5.  This is the read device section.
C     Fill up NR*3 buffers, using data modes starting with N1.
C     Format the buffer for the controller as follows.
C                   mmDE000000dd
C     where the first "d" has one bit telling the channel,
C     and the second "d" has the 4 bits for data type.
C     Then send ">" to transfer control and load the data, then
C      "/" to read back the data.
C
500   IBUF(1) = 0
      IBUF(2) = 2HDE
C                   Move in the channel bit
      ICLASS = 0
      DO 510 I=1,NR(IMODDC)
        IDUMM1 = ICHMV(IBUF,5,6H000000,1,6)
        IDUMM1 = ICHMV(IBUF,11,IHX2A(ICHAND),2,1)
        IF(IMODDC.EQ.3) THEN
          IDUMM1 = ICHMV(IBUF,12,IHX2A(N3(I)),2,1)
        ELSE IF(IMODDC.EQ.6) THEN
          IDUMM1 = ICHMV(IBUF,12,IHX2A(N2(I)),2,1)
        ELSE
          IDUMM1 = ICHMV(IBUF,12,IHX2A(N1(IMODDC)+I-1),2,1)
        ENDIF
C                   Put the proper mode number into buffer
        IBUF(1) = 0
        IBUF(2) = 2HDE
        CALL EXEC(20,0,IBUF,-12,2HFS,0,ICLASS)
        IBUF(1) = 8
        IBUF(2) = 2HDE
        IBUF(3) = 2H>
        CALL EXEC(20,0,IBUF,-5,2HFS,0,ICLASS)
        IBUF(3) = 2H/
        CALL EXEC(20,0,IBUF,-5,2HFS,0,ICLASS)
510     CONTINUE
C
      NREC = 3*NR(IMODDC)
      GOTO 800
C
C
C     6. This is the test/reset device section. 
C 
600   IBUF(1) = 6 
      IBUF(2) = 2HDE
      ICLASS=0
      CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
      NREC = 1
      GOTO 800
C 
C 
C     7. This is the alarm query and reset request. 
C 
700   IBUF(1) = 7 
      IBUF(2) = 2HDE
      ICLASS=0
      CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
      NREC = 1
      GOTO 800
C 
C 
C     8. All MATCN requests are scheduled here, and then DEDIS called.
C 
800   CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
      CALL DEDIS(IP,ICLCM)
      RETURN
C
990   IP(1) = 0
      IP(2) = 0
      IP(3) = IERR
      IP(4) = 2HQD
      RETURN
      END
