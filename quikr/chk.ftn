FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE CHK(IP),CHECK COMMAND C#870115:04:37#
C 
C   CHK parses the list of module mnemonics to be checked.
C************************* NOTE **************************
C The check/nocheck command has been changed. 
C Modules are automatically checked UNLESS then are specifically
C requested in the NOCHECK command to be ignored. 
C This routine interprets the same mnemonics as before. 
C 
C  COMMON:
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C     INPUT VARIABLES:
      DIMENSION IP(1) 
C               - parameters from SLOWP 
C        IP(1)  - class number of input parameter buffer
C        IP(2-5)- not used
C 
C     OUTPUT VARIABLES: 
C        IP(1) - class response 
C        IP(2) - number of records
C        IP(3) - ERROR RETURN 
C        IP(4) - who we are 
C 
C     CALLED SUBROUTINES: GTPRM,JCHAR 
C 
C   LOCAL VARIABLES 
      LOGICAL KMINUS
C               - true if parameter is preceded by a minus sign 
      DIMENSION ICK(20) 
C      - parameters to this command 
C        ICH    - character counter 
C     ILIST - counter through parameter list
C     NCHAR  - character count
      DIMENSION IBUF(50)
C               - class buffer, holding command 
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C   INITIALIZED VARIABLES 
      DATA ILEN/100/
C 
C  PROGRAMMER: NRV
C     LAST MODIFIED:  840308 by MWH  - changed from NOCHECK to CHECK, added * option
C                     840703 MWH - added RX to list of checkable modules
C 
C 
C     1. If class buffer contains command name with "=" then we have
C     parameters to get the modules.  If only the command name is present,
C     then list the modules being checked.
C 
      ICLCM = IP(1) 
      DO I=1,3
        IP(I)=0
      ENDDO
      IP(4) = 2HQN
      IF (ICLCM.EQ.0) THEN
        IP(3) = -1
        RETURN
      ENDIF  
      REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)              !      Scan for "="
      IF (IEQ.EQ.0) GOTO 500
C                   If no parameters, go report current list
C 
C     2. Step through buffer getting each parameter and decoding it.
C     Command from user looks like: 
C                   CHECK=<list>
C     where the parameters may be:
C                   ALL - all modules 
C                   V1 to V15 - video converters
C                   IF - IF distributor 
C                   FM - formatter
C                   TP - tape 
C                   VC - all video converters (1 to 15) 
C                   EVEN - video converters 2,4,6,8,10,12,14
C                   ODD - video converters 1,3,5,7,9,11,13
C 
      DO I=1,20 
        ICK(I) = 0
      ENDDO
C                   Turn off all of the parameters to start 
      ICH = 1+IEQ 
      ILIST = 0 
C  Handle * if present
      IF (JCHAR(IBUF,ICH).EQ.52B) THEN
        DO I=1,18 
          IF (ICHECK(I).GT.0) ICK(I)=1
        ENDDO
        IF (ICHK19.GT.0) ICK(19) = 1 
        IF (ICHK20.GT.0) ICK(20) = 1 
        ICH=ICH+2 
      ENDIF
C  Handle minus sign if present 
201   KMINUS = (JCHAR(IBUF,ICH).EQ.55B)
      IF (KMINUS) THEN
        ICH = ICH+1
        ISET = 0
      ELSE
        ISET = 1
      ENDIF
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      ILIST = ILIST + 1 
C                   Pick up each parameter as characters
      IF (JCHAR(PARM,1).EQ.54B) GOTO 300
      LPRM=MDNAM(IPARM)
C  Get 2-character mnemonic 
C    First check for RX (MDNAM doesn't recognize RX)
      IF (IPARM.EQ.2HRX) THEN
        ICK(19) = ISET 
C     Now check for HD
      ELSE IF (IPARM.EQ.2HHD) THEN
        ICK(20) = ISET 
C 
C     2.1 First check for ALL.
C 
      ELSE IF (LPRM.EQ.2HAL) THEN
        DO I=1,20
          ICK(I) = ISET
        ENDDO
C 
C     2.4 Try for EVEN. 
C 
      ELSE IF (LPRM.EQ.2HEV) THEN
        DO I=2,14,2
          ICK(I) = ISET
        ENDDO
C 
C     2.5 Might be ODD. 
C 
      ELSE IF (LPRM.EQ.2HOD) THEN
        DO I=1,13,2
          ICK(I) = ISET
        ENDDO
C 
C     2.6 One of the video converters.
C 
      ELSE IF (JCHAR(LPRM,1).EQ.126B) THEN
        II=JCHAR(LPRM,2)-60B
        IF (II.GT.9) II=II-7
        IF (II.LE.0 .OR. II.GT.15) THEN
          IP(3) = -201
          RETURN
        ENDIF
        ICK(II) = ISET
C 
C     2.7 IF distributor
C 
      ELSE IF (LPRM.EQ.2HIF) THEN
        ICK(16) = ISET
C 
C     2.8 Formatter 
C 
      ELSE IF (LPRM.EQ.2HFM) THEN
        ICK(17) = ISET
C 
C     2.90 Tape 
C 
      ELSE IF (LPRM.EQ.2HTP) THEN
        ICK(18) = ISET
C 
C     2.99 None of the above
C 
      ELSE
        IP(3) = -201
        RETURN
      ENDIF
      GOTO 201
C 
C     3. We are finished with the parsing.
C     Stash the check array into COMMON.
C 
300   DO I=1,18 
        IF (ICK(I).EQ.0.AND.ICHECK(I).GT.0) ICHECK(I) = -1
C                   If the module was set up, don't check it now
        IF (ICK(I).EQ.1.AND.ICHECK(I).LT.0) ICHECK(I) = +1
C                   If the module was previously ignored, check it now
      ENDDO
        IF (ICK(19).EQ.0.AND.ICHK19.GT.0) ICHK19 = -1
        IF (ICK(19).EQ.1.AND.ICHK19.LT.0) ICHK19 = +1
        IF (ICK(20).EQ.0.AND.ICHK20.GT.0) ICHK20 = -1
        IF (ICK(20).EQ.1.AND.ICHK20.LT.0) ICHK20 = +1
C 
      RETURN
C 
C     5. Report the modules currently being checked.
C 
500   CONTINUE
      NCH = ICHMV(IBUF,NCHAR+1,2H/ ,1,1)
      DO I=1,18
        IF (ICHECK(I).GE.1) THEN
          IF (I.LE.15) THEN
            NCH = ICHMV(IBUF,NCH,2HV ,1,1)
            NCH = NCH + IB2AS(I,IBUF,NCH,100000B+2)
          ELSE
            IF (I.EQ.16) NCH = ICHMV(IBUF,NCH,2HIF,1,2)
            IF (I.EQ.17) NCH = ICHMV(IBUF,NCH,2HFM,1,2)
            IF (I.EQ.18) NCH = ICHMV(IBUF,NCH,2HTP,1,2)
          ENDIF
          NCH = MCOMA(IBUF,NCH)
        ENDIF
      ENDDO
C
      IF (ICHK19.GE.1) NCH=ICHMV(IBUF,NCH,4HRX, ,1,3)
      IF (ICHK20.GE.1) NCH=ICHMV(IBUF,NCH,4HHD, ,1,3)
      NCH=NCH-1
      IF (ICHCM(IBUF,NCH,2H, ,1,1).EQ.0) NCH=NCH-1
      IF (ICHCM(IBUF,NCH,2H/ ,1,1).EQ.0)
     +  NCH=ICHMV(IBUF,NCH+1,8HDISABLED,1,8)-1
C 
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
      IP(1) = ICLASS
      IP(2) = 1
      RETURN
      END 
