FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE TPI(IP,ISUB)    !   SAMPLE TPIS     <880922.1527>
C 
C   TPI gets the total power integrator readings and stores 
C     them in common. 
C 
C     DATE   WHO CHANGES
C     810909 NRV Added VC zero capability 
C 
C     INPUT VARIABLES:
      DIMENSION IP(1) 
C               - parameters from SLOWP 
C        IP(1)  - class number of input parameter buffer
C        IP(2-5)- not used
C        ISUB   - which sub-function, 3=TPI, 4=TPICAL, 7=TPZERO 
C 
C     OUTPUT VARIABLES: 
C        IP(1) - CLASS
C        IP(2) - # RECS 
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
C     CALLED SUBROUTINES: TPLIS,TPPUT,IF2MA
C
C 3.  LOCAL VARIABLES
      DIMENSION ITPIS(16)
C      - which TPIs to read back
C        ICH    - character counter
C     NCHAR  - character count
      DIMENSION IBUF(60)
C               - class buffer, holding command
C        ILEN   - length of IBUF, chars
      DIMENSION IREG(2)
C               - registers from EXEC calls
      DIMENSION LVCN(15)
C               - VC names
C
      EQUIVALENCE (REG,IREG(1)) 
C 
C 5.  INITIALIZED VARIABLES 
      DATA ILEN/120/
      DATA LVCN   /2HV1,2HV2,2HV3,2HV4,2HV5,2HV6,2HV7,2HV8,2HV9,2HVA, 
     /             2HVB,2HVC,2HVD,2HVE,2HVF/
C 
C 
C     PROGRAM STRUCTURE 
C 
C     1. Call TPLIS to parse the command for us.  Check for errors. 
C     If none, we have the requested TPI readings in ITPIS. 
C
      ICLCM = IP(1)
      IF (ICLCM.EQ.0) RETURN
C                     Retain class for later response
      CALL TPLIS(IP,ITPIS)
      IERR = IP(3)
      ICLASS = 0
      NREC = 0
      IF (IERR.NE.0) GOTO 990
C
C     2. Now we are ready to send the big message to MATCN.
C     For each TPI requested, request the appropriate data.
C
      NREC = 0
      ICLASS = 0
      DO I=1,16
        IF(ITPIS(I).NE.0.AND.(I.LE.15.OR.(I.EQ.16.AND.ITPIS(15).EQ.0)))
     &    THEN
          IF (I.LE.14) THEN
            IBUF(1) = -2
            IBUF(2) = LVCN(I)
          ELSE
            IBUF(1) = -1
            IBUF(2) = 2HIF
          ENDIF
          CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS)
          NREC = NREC + 1
        ENDIF
      ENDDO
C
      CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
      IF (IP(3).LT.0) RETURN
C
C     5. Send the results to TPPUT for putting into COMMON.
C     Send back the response.
C     If this was a ZERO command, re-set the IFD.
C
      REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)
      IF (IEQ.EQ.0) IEQ=NCHAR+1
      NCH = ICHMV(IBUF,IEQ,2H/ ,1,1)
C                     Get the command part of the response set up
      CALL TPPUT(IP,ITPIS,ISUB,IBUF,NCH,ILEN)
      ICLASS = 0
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
      NREC = 1
C
990   IP(1) = ICLASS
      IP(2) = NREC
      IP(3) = IERR
      IP(4) = 2HQK
      RETURN
      END
