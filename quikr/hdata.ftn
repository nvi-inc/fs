FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE HDATA(IP,ITASK)  ! TAPE HEAD A2D READ OUT
C
C  INPUT VARIABLES:
C
      DIMENSION IP(1)
C        IP(1) - class # of input parameter buffer
C
C  OUTPUT VARIABLES:
C
C        IP(1) - class #
C        IP(2) - # of records
C        IP(3) - error return
C        IP(4) - who we are
C
C  COMMON BLOCKS USED:
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
C  LOCAL VARIABLES:
C
      REAL*4 VOLTS(8)
      DIMENSION IPARM(2),IREG(2),IBUF(40),IBUF2(40),IPAS(2)
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1))
C
      DATA ILEN /40/
C
C  HISTORY:
C
C  DATE  WHO  WHAT
C 900222 weh  created by cloning from new PASS command
C
C  1. Get class buffer and decide whether we have to move the heads,
C      or just monitor their position.
C
      IOCLAS = 0
      ICLASS = 0
      NREC = 0
      ICLCM = IP(1)
      IP(3) = 0
      IF (ICLCM.EQ.0) THEN                     ! ZERO CLASS NUMBER
        IP(3) = -1
        GOTO 990
      ENDIF
      REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)
      IF (IEQ.EQ.0) THEN
        GOTO 500
      ELSE IF (ICHCM(IBUF,IEQ+1,LALRM,1,ILENAL).EQ.0) THEN
        IBUF2(1) = 7
        GOTO 700
      ELSE IF (ICHCM(IBUF,IEQ+1,LTSRS,1,ILENTS).EQ.0) THEN
        IBUF2(1) = 6
        GOTO 700
      ELSE
        IP(3)=-281
        GOTO 990
      ENDIF
C
C  5. Here we read the device to get current head positions.
C
500   CONTINUE
C
      DO I=1,8
        CALL GET_ATOD(I,VOLTS(I),IP)
        IF(IP(3).NE.0) GOTO 800
      ENDDO
C
C  6. Now we must prepare a response.
C
600   CONTINUE
      NCH = IEQ
      IF (NCH.EQ.0) NCH = NCHAR+1
      NCH = ICHMV(IBUF,NCH,2H/ ,1,1)
C
      DO I=1,8
        NCH = NCH+IR2AS(VOLTS(I),IBUF,NCH,8,3)
        NCH = MCOMA(IBUF,NCH)
      ENDDO
C
      NCH = NCH-2
      NREC=0
      CALL ADD_CLASS(IBUF,-NCH,IOCLAS,NREC)
      IP(3) = 0
      GOTO 990
C
C  7. Reset alarm or Test/Reset
C
700   CONTINUE
      IBUF2(2) = 2HHD
      NCH=4
      ICLASS = 0
      NREC=0
      CALL ADD_CLASS(IBUF2,-NCH,ICLASS,NREC)
      CALL RUN_MATCN(ICLASS,NREC,IP)
      CALL CLASS_FRM(IBUF,NCHAR,IP)
      RETURN
C
C   turn off LVDT, for an error
C
800   CONTINUE
      IF(IP(2).NE.0) CALL CLRCL(IP(1))
      IP(2)=0
      CALL LOGIT(0,0,0,0,IP(3),IP(4),IP(5))
      CALL LVDOFN('UNLOCK',IP)
C
C  9. That's all for now.
C
990   IP(1) = IOCLAS
      IP(2) = NREC
      IP(4) = 2HQ@
      RETURN
      END
