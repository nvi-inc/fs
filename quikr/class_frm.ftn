FTN77,Y,I  
$CDS ON
      SUBROUTINE CLASS_FRM(IPRE,ICH,IP)
      IMPLICIT NONE
      INTEGER*2 IPRE(1),ICH,IP(5)
C
C  CLASS_FRM: format class contents from MATCn and seend to class
C
C  INPUT:
C     IPRE - command to extract log entry prefix from
C            the prefix is the part upto the first equal or end
C            whichever comes first
C     IP - Field System Return Parameters
C     IP(1) - class number
C     IP(2) - number of records in the class
C
C  If PREFIX + / + buffer exceeds MAX_CHARS, it is truncated.
C
      INTEGER*2 MAX_WDS,MAX_CHARS,LEN_WDS,LEN_CHARS
      PARAMETER (
     &          MAX_CHARS=120,
     &          MAX_WDS=(MAX_CHARS+1)/2,
     &          LEN_CHARS=20,
     &          LEN_WDS=(LEN_CHARS+1)/2
     &          )
      INTEGER*2 NREC,I,IBUF(LEN_WDS),NCFSR,IBUF2(MAX_WDS),NCH
      INTEGER*2 ICHMV,MCOMA,IMOV,nchs,ISCNC,ICLASS
C
      ICLASS=0
      NREC=0
C
      IF (IP(2).NE.0) THEN
        IMOV=ISCNC(IPRE,1,ICH,2H==)-1
        IF(IMOV.LE.0) IMOV=ICH
        NCH=1
        NCH=ICHMV(IBUF2,NCH,IPRE,1,MIN(IMOV,MAX_CHARS))
        NCH=ICHMV(IBUF2,NCH,2H//,1,1)
        NCHS=NCH
        DO while(ip(2).gt.0)
          CALL GET_CLASS(IBUF,-LEN_CHARS,IP,NCFSR)
          IF(NCH.NE.NCHS.AND.NCH+NCFSR-2.GT.MAX_CHARS)THEN
            CALL ADD_CLASS(IBUF2,NCH-1,ICLASS,NREC)
            NCH=NCHS
          ENDIF
          IF (NCH.NE.NCHS) NCH=MCOMA(IBUF2,NCH)
          NCH = ICHMV(IBUF2,NCH,IBUF(2),1,MIN(NCFSR-2,MAX_CHARS-NCH+1))
        ENDDO
        IF(NCH.NE.NCHS) CALL ADD_CLASS(IBUF2,NCH-1,ICLASS,NREC)
      ENDIF
C
      IP(1)=ICLASS
      IP(2)=NREC
C
      RETURN
      END
