FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE WX(IP),WEATHER MODULE C#870115:04:36#
C 
C 1.1.   WX controls the weather module 
C 
C     INPUT VARIABLES:
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C        IP(1) - error
C        IP(2) - class
C        IP(3) - number of records
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C 2.5.   SUBROUTINE INTERFACE:
C     CALLING SUBROUTINES: QUIKR
C     CALLED SUBROUTINES: GTPRM,JCHAR 
C 
C 3.  LOCAL VARIABLES 
C        NCHAR  - number of characters in buffer
C        IMMODE - mode for MAT
C        ICH    - character counter 
      DIMENSION IBUF2(40),IBUF(20)             !  class buffers
      DIMENSION LCHAR(4)
      DIMENSION IPARM(2)           !  parameters returned from GTPRM
      DIMENSION IREG(2)       !  registers from EXEC calls
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C 5. INITIALIZED VARIABLES
      DATA ILEN/40/,ILEN2/80/          !  lengths of class buffers
      DATA IL/10/,LCHAR/2H+ ,2H% ,2H! ,2H? /
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED:  800315
C 
C     PROGRAM STRUCTURE 
C 
C   1. We have been requested to read the WX module.
C 
      ICLCM = IP(1) 
      DO I=1,3
        IP(I) = 0
      ENDDO
      IP(4) = 2HQX
      IF (ICLCM.EQ.0) THEN
        IP(3) = -1
        RETURN
      ENDIF
      REG = EXEC(21,ICLCM,IBUF2,-ILEN2)
      NCHAR = IREG(2) 
      IEQ = ISCNC(IBUF2,1,NCHAR,75B)          !  Scan for "="
      IF (IEQ.NE.0) THEN
        IP(3) = -1              !  It is an error to specify parameters
        RETURN
      ENDIF
C 
C     2. Fill up a request for the three numbers: + (temp), % (humidity), 
C     and ! (pressure). 
C 
      IBUF(2) = 2HWX
      NCH = 5 
      NREC = 1
      IBUF(1) = 8 
      DO I=1,3
        ICLASS = 0
        IBUF(3) = LCHAR(I)
        CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
        CALL EXEC(23,6HMATCN ,ICLASS,NREC)
C       CALL EXEC(23,5HDEBUG,ICLASS,NREC,0,0,0,+21HRU,DEBUG,+P,MATCN::12
C    .,-21)
        CALL RMPAR(IP)
        IF(IP(3).LT.0) RETURN 
        ICLASS = 0
        CALL SUSP(2,1)
        IBUF(3) = LCHAR(4)
        CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
        CALL EXEC(23,6HMATCN ,ICLASS,NREC)
        CALL RMPAR(IP)
        ICLASS = IP(1)
        IF(IP(3).LT.0) RETURN 
        REG = EXEC(21,ICLASS,IBUF(I*5+1),-IL)
      ENDDO
C 
C     4. Now decode the message to get temp, humid, pres. 
C     The temperature buffer: 
C                   WX000atttt   (in degrees C*10)
C     where a=B for t>0, a=C for t<0. 
C     The humidity buffer:
C                   WX00000hhh   (in percent*10)
C     The pressure buffer:
C                   WX000Ppppp   (in mbars*10)
C     If the response is FFFFF, the instrument is down. 
C     After conversion, store parameters in common. 
C 
      TEMPWX = DAS2B(IBUF,17,4,IERR)/10.0 
      IF (JCHAR(IBUF,16).EQ.103B) TEMPWX = -TEMPWX  
      IF (IERR.NE.0) THEN
        IERR = -301
        TEMPWX = 1.0E20
      ENDIF
      HUMIWX = DAS2B(IBUF,27,4,IERR)/10.0
      IF (IERR.NE.0) THEN
        IERR = -302
        HUMIWX = 1.0E20
      ENDIF
C     The additional .001 is to fix the problem of 1000.0 
C     which IR2AS doesn't handle properly.
      PRESWX = DAS2B(IBUF,36,5,IERR)/10.0  + .001
      IF (IERR.NE.0) THEN
        IERR = -303
        PRESWX = 1.0E20
      ENDIF
C 
C     5. Finally, code up the message for BOSS and the display and log. 
C 
      NCH = ICHMV(IBUF2,NCHAR+1,2H/ ,1,1)
      NCH = NCH + IR2AS(TEMPWX,IBUF2,NCH,5,1) 
      NCH = MCOMA(IBUF2,NCH)
      NCH = NCH + IR2AS(PRESWX,IBUF2,NCH,7,1) 
      NCH = MCOMA(IBUF2,NCH)
      NCH = NCH + IR2AS(HUMIWX,IBUF2,NCH,5,1) 
C 
      NCH = NCH - 1 
      ICLASS = 0
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)
C 
      IP(1) = ICLASS
      IP(2) = 1
      IP(3) = IERR
      IP(4) = 2HQX
      RETURN
      END 
