FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
C@MATLD 
C 
      SUBROUTINE MATLD(IP),MAT DOWN-LOAD COMMAND C#870115:04:41#
C 
C     MATLD formats a command which downloads to MATs 
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # REC
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES:
C 
C     CALLED SUBROUTINES: GTPRM,JCHAR 
C 
C 3.  LOCAL VARIABLES 
C 
C     NHXBYT - number of hex bytes (2-char) in data 
C        NCHAR  - number of characters in buffer
C        ICH    - character counter 
      DIMENSION IBUF(40)
C               - class buffer, for input and output
      DIMENSION LLOC(2) 
C                     - location for down load
      DIMENSION LDATA(30) 
C                     - data bytes to be downloaded 
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C 4.  CONSTANTS USED
C 
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/80/ 
      DATA IDLEN/60/
C 
C 
C     PROGRAM STRUCTURE 
C 
C     1. If we have a class buffer, then we are to format a message.
C     If no class buffer, this is an error. 
C 
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
      IERR = -1 
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = IREG(2) 
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
C                   Scan for "="
      IF (IEQ.NE.0) GOTO 210
      IERR = -101 
      GOTO 990
C                   If no parameters, ERROR 
C 
C 
C     2. Get the parameters and decode them:
C             MATLOAD=<address>,<location>,<data> 
C     where 
C             <address> is any 2-char hex address 
C             <location> is a 4-char hex location 
C             <data> is the hex data bytes to be sent 
C 
C     PARAMETER 1: MAT ADDRESS
C 
210   ICH = 1+IEQ 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) GOTO 211 
      IERR = -101 
      GOTO 990
211   LADR = IPARM
      IADR1 = IA22H(LADR) 
      IF (IADR1.GE.0.AND.IPARM(2).EQ.2H  ) GOTO 220 
      IERR = -201 
      GOTO 990
C 
C     PARAMETER 2: LOCATION 
C 
220   CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) GOTO 221 
      IERR = -102 
      GOTO 990
221   IDUMM1 = ICHMV(LLOC,1,IPARM,1,4)
      IADR1 = IA22H(LLOC) 
      IADR2 = IA22H(LLOC(2))
      IF (IADR1.GE.0.AND.IADR2.GE.0) GOTO 230 
      IERR = -202 
      GOTO 990
C 
C     PARAMETER 3: DATA BYTES 
C 
230   IC1 = ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF (JCHAR(PARM,1).NE.52B.AND.JCHAR(PARM,1).NE.54B) GOTO 231 
      IERR = -103 
      GOTO 990
231   NCH = ICH-1-IC1 
C                     The total number of characters in the data
      IF (NCH.GT.0.AND.NCH.LE.IDLEN) GOTO 232 
      IERR = -203 
      GOTO 990
232   IDUMM1 = ICHMV(LDATA,1,IBUF,IC1,NCH)
      NHXBYT = (NCH+1)/2
      DO 235 I=1,NHXBYT 
        IF (IA22H(LDATA(I)).GE.0) GOTO 235
        IERR = -203 
        GOTO 990
235     CONTINUE
C 
C 
C     3. Format the buffer for the MAT.  This will be a mode 5 request. 
C     The buffer looks like:
C               #aa:nnhhll00<data>cc
C     where 
C              aa is the MAT unit address 
C              nn is the total number of hex data bytes 
C              hh is the high order byte of the location
C              ll is the low order byte of the location 
C              00 is an unused spot 
C              <data> is an exact copy of the data bytes typed in 
C              cc is the checksum including everything from the nn to cc. 
C 
300   IBUF(1) = 5 
      IBUF(2) = 2H# 
      IBUF(3) = 2H :
      IDUMM1 = ICHMV(IBUF,4,LADR,1,2) 
      IDUMM1 = IB2AS(NHXBYT,IBUF,7,40000B+400B*2+2) 
      IBUF(5) = LLOC(1) 
      IBUF(6) = LLOC(2) 
      IBUF(7) = 2H00
      IDUMM1 = ICHMV(IBUF,15,LDATA,1,NHXBYT*2)
D9901 FORMAT("NB,IBUF="2I5,20A2)  
C 
C     Now form the check sum
C 
      DO 310 I=4,NHXBYT+4 
        ICHKS = ICHKS+IA22H(IBUF(I))
310     CONTINUE
      ICHKS = 256 - MOD(ICHKS,256)
      IBUF(NHXBYT+8) = IH22A(ICHKS) 
D     WRITE(LU,9901)NHXBYT, (IBUF(I),I=1,NHXBYT+8)  
C 
C 
C     8. Schedule MATCN and check for error return. 
C 
      ICLASS = 0
      NCH = (NHXBYT+8)*2
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
      CALL EXEC(23,6HMATCN ,ICLASS,1) 
      CALL RMPAR(IP)
      RETURN
C 
C 
C 
990   IP(1) = 0 
      IP(2) = 0 
      IP(3) = IERR
      IP(4) = 2HQL
      RETURN
      END 
