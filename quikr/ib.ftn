FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE IB(IP),HPIB COMMUNICATIONS C#870115:04:36# 
C 
C  IB transmits a buffer to HPIB
C 
C     INPUT VARIABLES:
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C        IP(1) - CLASS #
C        IP(2) - # RECORDS IN CLASS 
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C 
C     CALLED SUBROUTINES: CHARACTER ROUTINES
C 
C   LOCAL VARIABLES 
C        NCHAR  - number of characters in buffer
C        NCH    - character counter 
C        IFC     - character index of comma 
      DIMENSION IBUF(20)                      !  class buffer
      DIMENSION IBUF2(20)                     !  output buffer
      DIMENSION IREG(2)                       !  registers from EXEC calls
      DIMENSION IPARM(2)                      !  parameters from GTPARM
      EQUIVALENCE (REG,IREG(1)) 
      EQUIVALENCE (PARM,IPARM(1)) 
C 
C 5.  INITIALIZED VARIABLES 
      DATA ILEN/40/                           !  length of IBUF, characters
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED: CREATED  790309
C 
C     1. Get the class buffer.  Messages for the HPIB consist of
C     the LU followed by data, separated by commas. 
C 
      ICLCM = IP(1) 
      IP(1) = 0
      IP(2) = 0                               !  Set up return parameters
      IP(4) = 2HQB
      IF (ICLCM.EQ.0) THEN
        IP(3) = -1
        RETURN
      ENDIF
      REG = EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR = MIN0(IREG(2),ILEN)
      IEQ = ISCNC(IBUF,1,NCHAR,75B)           !  Scan for "="
      IF (IEQ.EQ.0) THEN
        IP(3) = -1
        RETURN
      ENDIF
      IFC = 1+IEQ 
      CALL GTPRM(IBUF,IFC,NCHAR,1,PARM)       !  Scan for an LU number
      IF (JCHAR(PARM,1).EQ.54B) THEN
        IP(3) = -101                          !  No default for LU number
        RETURN
      ENDIF
      IBUF2(2) = IPARM                        !  Put LU in 2nd word for IBCON
      IF (NCHAR.LT.IFC) THEN
        IBUF2(1) = -1                         !  Read from LU
        NCH = 4
      ELSE
        IBUF2(1) = -2                         !  Write to LU
        NCH = NCHAR - IFC + 1
        IDUMM1 = ICHMV(IBUF2,5,IBUF,IFC,NCH)
        NCH = NCH + 4
      ENDIF
      ICLASS = 0
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)
      IF (ICLASS.EQ.0) THEN 
        IP(3) = -1
        RETURN
      ENDIF
      CALL EXEC(23,6HIBCON ,ICLASS,1)
      CALL RMPAR(IP)
      CALL DEVDS(IP,ICLCM,0)
      RETURN
      END 
