FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      SUBROUTINE PARTY(IP),CHECK PARITY & SYNC ERRORS C#870115:04:38#
C
C  HISTORY:
C  WHO  WHEN    DESCRIPTION
C  GAG  910124  Added reproduce electronics logic to setting ITRAKA and
C               ITRAKB
C
C   IDECPA_FS IS IN COMMON AND HOLDS THE CHANNELS FOR DECODER AS SUPPLIED
C             BY THE USER
C       0 = AB    default
C       1 = A
C       2 = B
C
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
      LOGICAL KBIT,KEVEN,KODD,KREADY
      DIMENSION IP(1)
      DIMENSION IBUF(50),IBUF2(10),IBUF3(10)
      DIMENSION IREG(2),IPARM(2)
      DIMENSION PERR(28),ISERR(28),ITRK(28),IAUX(28),IPTR(2)
      DIMENSION IG1(4)
      INTEGER ITRKPALO(2)
      INTEGER*2 IDECPA
      LOGICAL*2 KDOAUX
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1))
      DATA ILEN/100/
      DATA IG1/0,1,14,15/
      DATA PTH/600./,STH/12./
C
C  Set flag for PCALR to stop
      IPCFLG=1
      ICHOLD=ICHECK(18)
C
C  1.  Get the command
C
      ICLASS=0
      NREC=0
      ICLCM=IP(1)
      IF (ICLCM.EQ.0) THEN
        IERR=-302
        GOTO 990
      END IF
      REG=EXEC(21,ICLCM,IBUF,-ILEN)
      NCHAR=MIN0(ILEN,IREG(2))
      IEQ=ISCNC(IBUF,1,NCHAR,75B)
      IF (IEQ.EQ.0) GOTO 500
      IF (JCHAR(IBUF,IEQ+1).EQ.77B) THEN
        IP(4)=77B
        GOTO 700
      END IF
C
C  2. Get parameters.
C
C  2.1  Parity error threshhold
C
      ICH=IEQ+1
      CALL GTPRM(IBUF,ICH,NCHAR,1,PARM,IERR)
      IF (JCHAR(PARM,1).EQ.54B) THEN
        PETH=PTH
      ELSE IF (JCHAR(PARM,1).EQ.52B) THEN
        PETH=PETHR
      ELSE IF(IERR.NE.0) THEN
        IERR=-201
        GOTO 990
      ELSE
        PETH=IPARM
      END IF
C
C  2.2  Sync error threshhold
C
      CALL GTPRM(IBUF,ICH,NCHAR,1,PARM,IERR)
      IF (JCHAR(PARM,1).EQ.54B) THEN
        ISETH=STH
      ELSE IF (JCHAR(PARM,1).EQ.52B) THEN
        ISETH=ISETHR
      ELSE IF(IERR.NE.0) THEN
        IERR=-202
        GOTO 990
      ELSE
        ISETH=IPARM
      END IF
C
C  2.3  Channel(s)
C
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM,IERR)
      IF (JCHAR(PARM,1).EQ.54B) THEN
        IDECPA = 0
      ELSE IF((JCHAR(IPARM,1).EQ.101B).AND.(JCHAR(IPARM,2).EQ.102B))
     .    THEN  !                  A                           B
        IDECPA = 0
      ELSE IF (JCHAR(IPARM,1).EQ.101B) THEN
        IDECPA = 1
      ELSE IF (JCHAR(IPARM,1).EQ.102B) THEN
        IDECPA = 2
      ELSE
        IERR = -203
        GOTO 990
      END IF
C
C  2.4 AUX check ON or OFF
C
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).EQ.54B) THEN
        KDOAUX=.TRUE.
      ELSE IF (ICHCM(PARM,1,2HON,1,2).EQ.0) THEN
        KDOAUX=.TRUE.
      ELSE IF (ICHCM(PARM,1,4HOFF ,1,3).EQ.0) THEN
        KDOAUX=.FALSE.
      ELSE
        IERR = -204
        GOTO 990
      END IF
C
C  2.5  List of tracks
C
C
      DO I=1,28
        ITRK(I)=0
      END DO
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
      IF (JCHAR(PARM,1).EQ.54B) THEN
        DO I=1,28
          ITRK(I)=ITRKENUS_FS(I)
        END DO
      ELSE
        DO I=1,28
          IF(JCHAR(IPARM,1).GE.60B.AND.JCHAR(IPARM,1).LE.71B) GOTO 255
          IF (JCHAR(IPARM,1).EQ.52B) THEN
            IERR = -310
            GOTO 990
          END IF
          IF (JCHAR(IPARM,1).NE.107B) THEN
            IERR = -205
            GOTO 990
          END IF
          IG=IAS2B(IPARM,2,1)
          IF(IG.LT.1.OR.IG.GT.4) THEN
            IERR = -206
            GOTO 990
          END IF
          DO J=1,14,2
            ITRK(J+IG1(IG))=1
          END DO
          GOTO 270
255       NC=1
          IF(JCHAR(IPARM,2).NE.40B) NC=2
          IT=IAS2B(IPARM,1,NC)
          IF(IT.LE.0.OR.IT.GT.28) THEN
            IERR = -207
            GOTO 990
          END IF
          ITRK(IT)=1
270       CALL GTPRM(IBUF,ICH,NCHAR,0,PARM)
          IF(JCHAR(PARM,1).EQ.54B) GOTO 295
        END DO
      END IF
  
295   IERR=0
C
D     WRITE(LU,9001)(ITRK(I),I=1,28)
D9001 FORMAT("ITRKs = "28I2)
C
C  3. Plant values in COMMON
C
      PETHR=PETH
      ISETHR=ISETH
      IDECPA_FS=IDECPA
      KDOAUX_FS=KDOAUX
      DO I=1,28
        IF(ITRK(I).EQ.1) CALL SBIT(ITRKPA,I,1)
        IF(ITRK(I).EQ.0) CALL SBIT(ITRKPA,I,0)
      END DO
      GOTO 990
C
C  5.  Measure errors
C
500   continue
      ICHECK(18) = 0
      ITRKPALO(1)=0
      ITRKPALO(2)=0
      IF (RPRO_FS.LT.0.OR.RPRO_FS.GT.2) THEN
         IERR = -308
         GOTO 990
      END IF
      IF(IBYPAS.EQ.0) THEN
        KEVEN=.FALSE.
        KODD=.FALSE.
        DO I=1,28
          IF (ITRK(I).EQ.1) THEN
            IF (MOD(I,2).EQ.0) KEVEN=.TRUE.
            IF (MOD(I,2).EQ.1) KODD=.TRUE.
          END IF
        END DO
        IF ((RPRO_FS.EQ.1.OR.RPRO_FS.EQ.2).AND.KEVEN.AND.KODD) THEN
          IERR = -309
          GOTO 990
        END IF
      ENDIF
      DO I=1,28
        IF (KBIT(ITRKPA,I)) THEN
          IV=I
          IF (RPRO_FS.EQ.2.AND.IBYPAS.EQ.0) THEN         !EVEN
            IF (MOD(IV,2).EQ.1) IV = IV + 1
          ELSE IF (RPRO_FS.EQ.1.AND.IBYPAS.EQ.0) THEN    !ODD
            IF (MOD(IV,2).EQ.0) IV = IV - 1
          END IF
          CALL SBIT(ITRKPALO,IV,1)
        END IF
      END DO
      DO I=1,28
        IF(KBIT(ITRKPALO,I))GOTO 501
      END DO
        IERR=-306
        GOTO 990
501   DO I=1,28
        PERR(I)=0
        ISERR(I)=0
      END DO
      IF(IDECPA_FS.EQ.0) THEN
        IPTR(1)=1
        IPTR(2)=2
        NPTR=2
      ELSE
        IPTR(1)=IDECPA_FS
        NPTR=1
      ENDIF
      I=0
      DO WHILE (I.LT.28)
        J=0
        ITRK(1)=0
        ITRK(2)=0
        DO WHILE (J.LT.NPTR.AND.I.LT.28)
          I=I+1
          IF(KBIT(ITRKPALO,I)) THEN
            J=J+1
            ITRK(IPTR(J))=I
          ENDIF
        ENDDO
        IF(J.EQ.0) GOTO 600
        IF(ITRK(1).NE.0) ITRAKA=ITRK(1)
        IF(itrk(2).NE.0) ITRAKB=ITRK(2)
        CALL MEZHR(AVPEA,AVPEB,ISERRA,ISERRB,IP,IAUXA,IAUXB,ITRK)
        IF(IP(3).LT.0) GOTO 998
        IF(ITRK(1).NE.0) THEN
          PERR(ITRAKA)=AVPEA
          ISERR(ITRAKA)=ISERRA
          IAUX(ITRAKA)=IAUXA
        ENDIF
        IF(ITRK(2).NE.0) THEN
          PERR(ITRAKB)=AVPEB
          ISERR(ITRAKB)=ISERRB
          IAUX(ITRAKB)=IAUXB
        ENDIF
        IF(IFBRK(IDUM).LT.0) GOTO 600
C            If BREAK is requested, go ahead and report what's already done
      END DO
C
C  6.  Set up response
C
600   CONTINUE
C
C  Parity errors first
C
      ICLASS=0
      NREC=0
      NCH=NCHAR+1
      NCH=ICHMV(IBUF,NCH,2H/ ,1,1)
      DO I=1,28
        IF (KBIT(ITRKPA,I)) THEN
          IV=I
          IF (RPRO_FS.EQ.2.AND.IBYPAS.EQ.0) THEN         !EVEN
            IF (MOD(IV,2).EQ.1) IV = IV + 1
          ELSE IF (RPRO_FS.EQ.1.AND.IBYPAS.EQ.0) THEN    !ODD
            IF (MOD(IV,2).EQ.0) IV = IV - 1
          END IF
          NC=IB2AS(I,LWHAT,1,2)
          IF (PERR(IV).GT.PETHR) THEN
            CALL LOGIT(0,0,0,0,-303,2HQG,LWHAT)
          END IF
          IF (IAUX(IV).NE.0) THEN
            CALL LOGIT(0,0,0,0,-305,2HQG,LWHAT)
          END IF
          NCH=NCH+IR2AS(PERR(IV),IBUF,NCH,5,0)
          NCH=MCOMA(IBUF,NCH)
          IF (NCH.GE.95) THEN
            NCH=NCH-2
            CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
            NREC=NREC+1
            NCH=NCHAR+2
          END IF
        END IF
      END DO
C
      IF (NCH.NE.1) THEN
        NCH=NCH-2
        CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
        NREC=NREC+1
      END IF
C
C  Now sync errors
C
      NCH=ICHMV(IBUF,1,7HPARITY/,1,7)
      DO I=1,28
        IF (KBIT(ITRKPA,I)) THEN
          IV=I
          IF (RPRO_FS.EQ.2.AND.IBYPAS.EQ.0) THEN         !EVEN
            IF (MOD(IV,2).EQ.1) IV = IV + 1
          ELSE IF (RPRO_FS.EQ.1.AND.IBYPAS.EQ.0) THEN    !ODD
            IF (MOD(IV,2).EQ.0) IV = IV - 1
          END IF
          IF (ISERR(IV).GT.ISETHR) THEN
            NC=IB2AS(I,LWHAT,1,2)
            CALL LOGIT(0,0,0,0,-304,2HQG,LWHAT)
          END IF
          NCH=NCH+IB2AS(ISERR(IV),IBUF,NCH,100003B)
          NCH=MCOMA(IBUF,NCH)
          IF (NCH.GE.95) THEN
            NCH=NCH-2
            CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
            NREC=NREC+1
            NCH=NCHAR+2
          END IF
        END IF
      END DO
  
      IF (NCH.NE.1) THEN
        NCH=NCH-2
        CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
        NREC=NREC+1
      END IF
      GOTO 990
C
C  7.  Display settable parameters
C
700   ICLASS=0
      NCH=NCHAR-1
      NCH=ICHMV(IBUF,NCH,2H/ ,1,1)
      NCH=NCH+IB2AS(INT(PETHR),IBUF,NCH,100005B)
      NCH=MCOMA(IBUF,NCH)
      NCH=NCH+IB2AS(ISETHR,IBUF,NCH,100003B)
      NCH=MCOMA(IBUF,NCH)
      IF (IDECPA_FS.EQ.0) THEN
        NCH= ICHMV(IBUF,NCH,2HAB,1,2)
      ELSE IF (IDECPA_FS.EQ.1) THEN
        NCH= ICHMV(IBUF,NCH,2HA ,1,1)
      ELSE IF (IDECPA_FS.EQ.2) THEN
        NCH= ICHMV(IBUF,NCH,2HB ,1,1)
      END IF
      NCH=MCOMA(IBUF,NCH)
      IF (KDOAUX_FS) THEN
        NCH= ICHMV(IBUF,NCH,2HON,1,2)
      ELSE
        NCH= ICHMV(IBUF,NCH,3HOFF,1,3)
      ENDIF
      NCH=MCOMA(IBUF,NCH)
      NTRK=0
      DO I=1,28
        IF (KBIT(ITRKPA,I)) THEN
          NCH=NCH+IB2AS(I,IBUF,NCH,100002B)
          NCH=MCOMA(IBUF,NCH)
          NTRK=NTRK+1
        END IF
      END DO
      IF(NTRK.EQ.0) NCH=ICHMV(IBUF,NCH,5HNONE ,1,5)
      NCH=NCH-2
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS)
      NREC=1
C
C
C  That's all
C
990   IP(4)=2HQG
999   IP(1)=ICLASS
      IP(2)=NREC
      IP(3)=IERR
998   IPCFLG=0
      ICHECK(18)=ICHOLD
      RETURN
      END
