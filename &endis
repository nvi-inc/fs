FTN4,X
C@ENDIS 
C 
      SUBROUTINE ENDIS(IP,ICLCM),TRACK ENABLE DISPLAY C#870115:04:40# 
C 
C 1.1.   ENDIS gets data from the tape controller regarding enabled tracks
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of buffer from MATCN 
C        IP(2)  - number of records in class
C        IP(3)  - error return from MATCN 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - error
C        IP(2) - class
C        IP(3) - number of records
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C     CALLED SUBROUTINES: character utilities 
C 
C 3.  LOCAL VARIABLES 
C 
      DIMENSION IBUF(20),IBUF2(50)
C               - input class buffers, output display buffer
C        ILEN   - length of buffers, chars
C        NCH    - character counter 
C        I      - bit, converted to 0 or 1
C        IA     - hex char from MAT 
      DIMENSION ITRK(28)
      LOGICAL KCOM,KDATA
C              - true if COMMON variables wanted
C 
      DIMENSION IREG(2) 
C               - registers from EXEC 
      EQUIVALENCE (REG,IREG(1)) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/40/ 
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED: CREATED 790319 
C# LAST COMPC'ED  870115:04:40 #
C 
C     PROGRAM STRUCTURE 
C 
C     1. First check error return from MATCN.  If not 0, get out
C     immediately.  If setup data wanted ( ? ), skip class read.
C 
C 
      KCOM = IP(4).EQ.77B 
C 
      ICLASS = IP(1)
      NCREC = IP(2) 
      IERR = IP(3)
      NREC = 0
C 
      IF (KCOM) GOTO 200
      IF (IERR.LT.0) GOTO 990 
      IF (ICLASS.EQ.0.OR.ICLCM.EQ.0) GOTO 990 
C 
C 
C     2. Get class buffer with command in it.  Set up first part
C     of output buffer.  Get first buffer from MATCN. 
C 
200   REG = EXEC(21,ICLCM,IBUF2,-ILEN)
C 
      NCHAR = IREG(2) 
      NCH = ISCNC(IBUF2,1,NCHAR,75B)
C                   Scan for "="
      KDATA = NCH.EQ.0
C                   If our command was only "device" we are waiting for 
C                   data and know what to expect. 
      IF (NCH.EQ.0) NCH = NCHAR+1 
C                   If no "=" found, position after last character
      NCH = ICHMV(IBUF2,NCH,2H/ ,1,1) 
C                   Put / to indicate a response
C 
      IF (KCOM) GOTO 310
      IF (KDATA) GOTO 230 
C 
      DO 220 I=1,NCREC
        IF (I.NE.1) NCH=ICHMV(IBUF2,NCH,2H, ,1,1) 
C                   If not first parm, put comma before 
        REG = EXEC(21,ICLASS,IBUF,-ILEN)
        NCHAR = IREG(2) 
        NCH = ICHMV(IBUF2,NCH,IBUF(2),1,NCHAR-2)
C                   Move buffer contents into output list 
220     CONTINUE
      GOTO 500
C 
230   REG = EXEC(21,ICLASS,IBUF,-ILEN)
C 
C 
C     3. Now the buffer contains: ENABLE=, and we want to add the data. 
C     Format of data received from tape controller: 
C 
C     % data:       TPtttttttt
C     where each "t" contains 3 or 4 bits regarding tape track status 
C 
      CALL MA2EN(IBUF,IENA,ITRK,NTRK) 
      GOTO 400
C 
310   NTRK = 0
      DO 311 I=1,28 
        ITRK(I) = ITRKEN(I) 
        IF (ITRK(I).EQ.1) NTRK = NTRK + 1 
311     CONTINUE
      IENA = IENATP 
C 
C 
C     4. Format up the buffer for display.
C 
400   IERR = 0
      IF (NTRK.NE.0) GOTO 401 
      NCH = ICHMV(IBUF2,NCH,8HDISABLED,1,8) 
      GOTO 500
C 
401   DO 410 I=1,28 
        IF (ITRK(I).NE.ITRKEN(I)) IERR = -300-I 
        IF (ITRK(I).EQ.0) GOTO 410
        NCX = IB2AS(I,IBUF2,NCH,100000B+2)
        NCH = ICHMV(IBUF2,NCH+NCX,2H, ,1,1) 
410     CONTINUE
      NCH = NCH-1 
C 
C 
C     5. Now send the buffer to SAM.
C 
500   ICLASS = 0
      NCH = NCH - 1 
      CALL EXEC(20,0,IBUF2,-NCH,2HFS,0,ICLASS)  
C                   Send buffer starting with TP to display 
C 
      IF (.NOT.KCHECK) IERR = 0 
C 
      IP(1) = ICLASS
      IP(2) = 1 
      IP(3) = IERR
      IP(4) = 2HQE
990   RETURN
      END 
