FTN77,I,Y
$ALIAS /FSCOM/ , NOALLOCATE
$FILES 0,1
$CDS ON
      PROGRAM HEADP
C
C  HEADP WRITES THE RESULT OF THE LAST HDCALC AND WORM COMMANDS
C  TO FILE /CONTROL/HEAD.NEW
C
      character*3 slow
      character*4 type(0:2)
      character*6 inttodecimal
      character*8 posit
      character*13 TBuff
      character*63 name
      logical kspd,kcal
      integer*2 it(6),trimlen
      integer*4 TotalSeconds,Seconds
C
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
      DATA TYPE/' ALL',' ODD','EVEN'/
C
      NAME=' '
      CALL RCPAR(1,NAME)
C
      KCAL=KSREAD_FS.AND.KSWRITE_FS.AND.KSDREAD_FS.AND.KSDWRITE_FS
      KCAL=KCAL.AND.KBDWRITE_FS.AND.KBDREAD_FS
      IF(.NOT.KCAL) WRITE(1,*)
     &  'Head calibration has not been completed successfully.'
C
      KSPD=KRDWO_FS.AND.KWRWO_FS
      IF(.NOT.KSPD) WRITE(1,*)
     &  'Inch worm speeds have not been successfully calibrated.'
C
      IF((.NOT.KCAL).OR.(.NOT.KSPD)) THEN
        WRITE(1,*) 'No output file generated.'
        GOTO 99999
      ENDIF
C
      IF(NAME.EQ.' ') NAME='/CONTROL/HEAD.NEW'
      OPEN(6,FILE=NAME,STATUS='NEW',IOSTAT=IERR,ERR=99)
C
33    CONTINUE
      CALL EXEC(11,IT,IT(6))
      TotalSeconds=Seconds(it,it(6))
      Call NumericTime(TotalSeconds,TBuff)
C
      WRITE(6,9010)
      WRITE(6,9020)
      WRITE(6,9025) TBuff(1:11)
      WRITE(6,9020)
      WRITE(6,9026)
      WRITE(6,9027) TBuff(1:6),LNAANT
      WRITE(6,9020)
      WRITE(6,9030)
      WRITE(6,9040)
     &        TYPE(WRHD_FS),TYPE(RDHD_FS),TYPE(RPRO_FS),TYPE(RPDT_FS)
      WRITE(6,9020)
      if(kadapt_fs) then
        posit='ADAPTIVE'
      else
        posit='FIXED  '
      endif
      IF(KIWSLW_FS) THEN
        slow='YES'
      ELSE
        slow='NO'
      ENDIF
      WRITE(6,9044)
      WRITE(6,9045) POSIT,SLOW,LVBOSC_FS,ILVTL_FS
      WRITE(6,9020)
      WRITE(6,9050)
      WRITE(6,9060) FOWO_FS
      WRITE(6,9070) SOWO_FS
      WRITE(6,9020)
      WRITE(6,9080) RBDWRITE_FS,RBDREAD_FS
      WRITE(6,9020)
      WRITE(6,9090) FIWO_FS
      WRITE(6,9100) SIWO_FS
      WRITE(6,9020)
      WRITE(6,9110) RSDWRITE_FS,RSDREAD_FS
      WRITE(6,9020)
      WRITE(6,9120) RSWRITE_FS,RSREAD_FS
      WRITE(6,9130) RSWRITE_FS,RSREAD_FS
C
      WRITE(1,*) 'Output in file: '//NAME(:MAX(1,TRIMLEN(NAME)))
      CLOSE(6)
      GOTO 99999
C
99    CONTINUE
      WRITE(1,'(''File: '',A)') NAME(:MAX(1,TRIMLEN(NAME)))
      IF(IERR.EQ.502) THEN
        WRITE(1,'(A)') 'Already exists, it will not be overwritten.'
      ELSE
        WRITE(1,991) IERR
991     FORMAT('Error ',I6,' creating it.')
      ENDIF
      GOTO 99999
C
9010  FORMAT("* /CONTROL/HEAD.CTL - Head Parameter Control File")
9020  FORMAT("*")
9025  FORMAT("* History:                 Last Edited: <",A11,">")
9026  FORMAT("* Who  When   What")
9027  FORMAT("* xxx  ",A6," Created at ",4A2)
9030  FORMAT(
     & "* Write Heads  Read Heads  Reproduce: Electronics  Detector")
9040  FORMAT(5X,A4,8X,A4,20X,A4,8X,A4)
9044  FORMAT("*  Positioning  Slow  Osc (MHz)  A/D Tol. (bits)")
9045  FORMAT(5X,A8,2X,A3,1X,F10.4,2X,I6)
9050  FORMAT("* Write    Read")
9060  FORMAT(2(F7.1,1X),"  Fast Out Inchworm Speed (microns/sec)")
9070  FORMAT(2(F7.1,1X),"  Slow Out Inchworm Speed (microns/sec)")
9080  FORMAT(2(F7.1,1X),"  Absolute Head Offset    (microns)")
9090  FORMAT(2(F7.1,1X),"  Fast In  Inchworm Speed (microns/sec)")
9100  FORMAT(2(F7.1,1X),"  Slow In  Inchworm Speed (microns/sec)")
9110  FORMAT(2(F7.1,1X),"  Forward-Reverse Relative Offset (microns)")
9120  FORMAT(2F8.2,     "  Positive Voltage Scale (microns/volt)")
9130  FORMAT(2F8.2,     "  Negative Voltage Scale (microns/volt)")
C
99999 CONTINUE
      END
