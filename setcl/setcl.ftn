FTN77,I,Y  
$ALIAS /FSCOM/ , NOALLOCATE
$CDS ON
      PROGRAM SETCL           !   SET CLOCK FROM FORMATTER     <910323.0201>
C 
C     This program reads the formatter to get the 
C     correct time and then sets the computer clock.
C 
C************************************************************ 
C 
C     **NOTE** THE MARK III FIELD SYSTEM MUST BE UP
C              AND RUNNING TO USE THIS PROGRAM.
C
C     CAUTION: THIS PROGRAM SHOULD BE RUN *ONLY* DURING
C     REALLY QUIESCENT PERIODS OF SYSTEM OPERATION.
C     MAKE SURE THAT NO PROGRAMS ON THE TIME LIST
C     WILL HAVE THEIR EXECUTION TIMES FOREVER IN THE
C     PAST WHEN THE TIME IS UPDATED.
C     IF THIS DOES HAPPEN, THE SYSTEM COMMAND TO
C     RESTART THE PROGRAM IS:  *ON,<program name>,NOW
C
C************************************************************
      INCLUDE /FS/INCLUDE/FSCOM.FTNI
C
C  INPUT:
C
      DIMENSION IP(5)
C      - IP(1) = lu for error messages
C
C  LOCAL:
C
      DIMENSION IBUF(10),IBUFT(10),IT(6)
C      - buffer from MATCN
      DIMENSION IBUF2(10)
C      - output buffer for MESSS
C
C  ROUTINES CALLED:
C
C     MATCN - to get the formatter time
C     SETTM - to set the computer clock
      INTEGER*2 SETTM
C
C  LAST MODIFIED:  880509 LAR   Read formatter twice.
C
C
C     1. Get the operator's LU.
C     Set up the two buffers for MATCN and schedule it.
C
      EQUIVALENCE (IHS,IT(1)),(IS,IT(2)),(IMIN,IT(3)),(IHR,IT(4))
      EQUIVALENCE (IDOY,IT(5)),(IT(6),IYR)
C
      CALL RMPAR(IP)
      LUOP = IP(1)
      NERR = 0
      ICLASM = 0
      REG = CLRQ(1,ICLASM)
      ICLASM = IOR(20000B,ICLASM)
50    CONTINUE
        IBUF(1) = -3
        IBUF(2) = 2HFM
        CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASM)
        IBUF(1) = -4
        CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASM)
        CALL EXEC(23,6HMATCN ,ICLASM,2)
        CALL RMPAR(IP)
        ICLASS = IP(1)
        NCREC = IP(2)
        IERR = IP(3)
        IF (IERR.LT.0 .AND. NERR.GE.2) THEN
          WRITE(LUOP,'(9H ERROR MA,I5)') IERR
          GOTO 190
        ENDIF
        IF (ICLASS.NE.0.AND.NCREC.EQ.2) GOTO 198
        IF (NERR.GT.2) WRITE (LUOP,'(9H ERROR -1)')
190     IF (ICLASS.NE.0.AND.NCREC.NE.0) THEN
          DO I=1,NCREC
            CALL EXEC(21,ICLASS,IBUF,-20)
          ENDDO
        ENDIF
        NERR = NERR + 1
        IF (NERR.LE.2) GOTO 50
        GOTO 999
C
C
C     2. Get back the first buffer from MATCN, with the yddd.
C     Fill in the year and date in the output buffer.
C     Get back the second buffer and fill in the hms.
C     The message we are formatting for the system is:
C         TM,yyyy,ddd,hh,mm,ss
C
198   CONTINUE
      CALL EXEC(21,ICLASS,IBUFT,-20)
      CALL EXEC(21,ICLASS,IBUF,-20)
      NCH = ICHMV(IBUF2,1,3HTM,,1,3)
      NCH = NCH+IB2AS(iyrctl_fs/10,ibuf2,nch,3)
      NCH = ICHMV(IBUF2,NCH,IBUF,4,1)
C                   The last digit of the year
      NCH = MCOMA(IBUF2,NCH)
      NCH = ICHMV(IBUF2,NCH,IBUF,5,3)
C                   The day of the year
      NCH = MCOMA(IBUF2,NCH)
      IYR = IAS2B(IBUF,4,1) + IYRCTL_FS
      IDOY = IAS2B(IBUF,5,3)
      IDUM=ICHMV(IBUF,1,IBUFT,1,20)
      NCH = ICHMV(IBUF2,NCH,IBUF,3,2)
C                   The hours
      NCH = MCOMA(IBUF2,NCH)
      NCH = ICHMV(IBUF2,NCH,IBUF,5,2)
C                   Minutes
      NCH = MCOMA(IBUF2,NCH)
      IHR = IAS2B(IBUF,3,2)
      IMIN = IAS2B(IBUF,5,2)
      IS = IAS2B(IBUF,7,2)
      IHS = IAS2B(IBUF,9,2)
      CALL IADT(IT,8,1)
      IDEL=100-IHS
      CALL IADT(IT,IDEL,1)
C
      DO I=1,13
        IF(IDAY0(IYR,I).GE.IDOY) GOTO 15
      ENDDO
15    IMON = I-1
      IDAY = IDOY - IDAY0(IYR,IMON)
C
      IF(IDEL.NE.0) CALL EXEC(12,0,1,0,-IDEL)
C                   We add 1 to the integer seconds so as to
C                   always round up to the next second.
      NCH = NCH + IB2AS(IS,IBUF2,NCH,100000B+2) - 1
C*****************THE REAL THING*******************
      IERR = SETTM(IHR,IMIN,IS,IMON,IDAY,IYR)
      IF (IERR.NE.0) THEN
        WRITE(LUOP,'(9H ERROR FROM SETTM,I5)') IERR
        NERR = NERR+1
        IF (NERR.GT.2) GOTO 999
        GOTO 50
      ENDIF
C  Finally send this message to the computer
      CALL EXEC(2,LUOP,IBUF2,-NCH)
C
999   STOP
      END
