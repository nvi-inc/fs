FTN4,X
        PROGRAM DDOUT(3,70) 
     .,C#900306:00:35    DISPLAY AND DISK LOG V=1.2#
      INCLUDE #FSCOM::FS
        DIMENSION IP(5),IBUF(60),IREG(2),IDCBL(144),IBUL(60)
        DIMENSION IPARM(2),LNAMEF(3),LHELP(22),IBUR(60),IWHAT(2)
        LOGICAL KACK,KP,KK
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB),(IBUF(9),IBS) 
        EQUIVALENCE (PARM,IPARM(1)) 
      DATA LHELP  /2H!!,2H H,2HEL,2HP!,2H *,2H* ,2HER,2HRO,2HR ,2H  , 
     /             2H  ,2H W,2HRI,2HTI,2HNG,2H L,2HOG,2H F,2HIL,2HE , 
     /             2H(x,2Hx)/ 
C 
C               ZERO IDSCL FOR ALLOCATION UPON USE
C 
        IDSCL=0 
C 
C               SAVE FIRST LOG LU AS A DEFAULT FOR ERRORS 
C 
        ILOGLU=ICRLOG 
C 
C               SAVE FIRST LOG NAME AS A DEFAULT
C 
        LLOG0=LLOG
C 
10000   CONTINUE
C 
C               CONSTRUCT CLASS REFERENCE THAT WIILL NOT
C               BE DEALLOCATED, BUT WWILL WAIT
C 
        ICLB=IOR(IAND(ICLBOX,17777B),20000B)
C 
C               MAKE TEST CLASS NUMBER
C 
        ICLT=IOR(IAND(ICLB,157777B),160000B)
C 
20000   CONTINUE
C 
C 
C               WAIT FOR SOMETHING TO DO
C 
        REG=EXEC(21,ICLB,IBUF,-120,IR1,IR2,IR3) 
D       WRITE(LU,1001) IR1,IR2,IR3,(IBUF(I),I=1,(IRGB+1)/2) 
D1001   FORMAT("DDOUT: IR1 = ",O7," IR2 = ",O7," IR3 = ",O7 
D    ./"DDOUT: IBUF = ",40A2) 
C 
C               SAVE LENGTH READ IN 
C 
        IBUFL=IRGB
C 
C               SAVE LOG COPY 
C 
        IBULL=ICHMV(IBUL,1,IBUF,1,IBUFL)
C 
        IBULL=ICHMV(IBUL,IBULL,2H  ,1,1)-2
C 
C               CHECK FOR NEW LOG REQUEST 
C 
        IF(IR2 .NE. 2HNL)GO TO 30000
C 
C               RESET LOG RETRY ERROR 
C 
        IERRX=0 
C 
C               RESET FIRST LOG TRY 
C 
        LLOGO=0 
C 
22000   CONTINUE
C 
C               BUILD FILE NAME 
C 
      LNAMEF(1) = 2H[L
      LNAMEF(2) = 2HOG
      LNAMEF(3) = LLOG
C 
        CALL OPEN(IDCBL,IERR,LNAMEF,1,0,ICRLOG,144) 
C                   Open the new log file 
      IF (IERR.GE.0) GOTO 23000 
      CALL CREAT(IDCBL,IERR,LNAMEF,50,3,0,ICRLOG) 
      IF (IERR.GE.0) GOTO 22000 
      IF (LLOG.EQ.LLOG0.AND.ILOGLU.EQ.ICRLOG) GOTO 90000
        LLOGO=LLOG
      LLOG = LLOG0
      ICRLOG = ILOGLU 
C                   Assume the original log was on the standard 
C                   and try again 
      IERRX = IERR
      GOTO 22000
C                   If error opening log file, try creating.
C                   Then close and re-open in non-exclusive mode. 
23000  NREC = 0 
24000  CALL READF(IDCBL,IERR,IBUF,IBLEN,IL) 
      NREC = NREC + 1 
      IF (IERR.EQ.0) CALL LOCF(IDCBL,IERX,IRC,IRB,IOF)
      IF (IERR.LT.0) CALL APOSN(IDCBL,IERX,IRC,IRB,IOF) 
C                   If we encounter a wrong-length record, back 
C                   up over it and quit reading the file. 
      IF (IERR.LT.0) GOTO 26000 
25000  IF(IL .GE. 0)GO TO 24000 
26000   CONTINUE
C 
C               OUTPUT ALTERNATE ERROR IF PRESENT 
C 
        IF(IERRX .NE. 0)CALL LOGIT(ICLBOX,0,0,0,0,IERRX,2HDD,LLOGO) 
C 
C               DECIDE IF NEW FILE WAS OPENED
C 
        IF(NREC .GT. 1)GO TO 50000
C 
C               SAVE MESSAGE FOR FIRST RECORD IN FILE 
C 
30000   CONTINUE
C 
C               SEARCH FOR ACK RESPONSE 
C 
C 
C               RESET KACK
      KACK = .FALSE.
C 
C               CHECK FOR RESPONSE
C 
        IF(ICHAR(IBUF,10) .NE. 57B) GO TO 39000 
C                           / 
C                   If this isn't a response, don't bother
      ICH = ISCNC(IBUF,11,IBUFL,57B) + 1
C                   Find the / in the response buffer 
      IF (ICH.EQ.1) GOTO 39000
C                   Again, if there's no chance of ACK don't bother 
      KACK = .TRUE. 
38000    CALL GTPRM(IBUF,ICH,IBUFL,0,PARM)
C                   Pick up each parameter in the response ...
      IF (ICHAR(PARM,1).EQ.54B) GOTO 39000
C                   ... if there are no more, we're done ...
      IF (ICHCM(PARM,1,4HACK ,1,4).EQ.0) GOTO 38000 
C                   Compare the parameter to "ACK", and if it 
C                   matches, go get the next one. 
      KACK = .FALSE.
C                   If no match, set the flag to false, and we're done
C 
39000    CONTINUE 
C 
C               SEE IF ENTRY IS FROM PROCEDURE STREAM 
C 
        KP=ICHAR(IBUF,10) .EQ. 44B
C 
C               PROCESS INFORMATION FOR DISPLAY AND LOG 
C 
        IF(.NOT.KXDISP .AND. (IR2 .NE. -1 .AND.(KP.OR.KACK)))GO TO 40000
C 
C 
C               IF AN ERROR SEND TO FHELP FIRST 
C 
        IF(ICHAR(IR2,1) .NE. 102B)GO TO 39500 
C 
C               CHECK THAT FHELP IS ALIVE AND WELL
C 
        IF(IPGST(6HFHELP ) .NE. 0)GO TO 39500 
C 
C               RESET IWHAT INFO
C 
        IWHE=0
        IWHS=0
        IWL=0 
C 
C               SEE IF WHAT FIELD PRESENT 
C 
        IWHS=ISCNC(IBUF,11,IBUFL,50B) 
C 
C               IF NO WHAT FIELD SKIP TO GET MESSAGE
C 
        IF(IWHS .EQ. 0)GO TO 39200
C 
C               GET THE END OF THE WHAT FIELD 
C 
        IWHE=ISCNC(IBUF,11,IBUFL,51B) 
C 
C               CHECK FOR WHAT END
C 
        IF(IWHE .EQ. 0)GO TO 39200
C 
C               GET WHAT LENGTH 
C 
        IWL=MIN0(4,IWHE-IWHS-1) 
C 
C 
C               SAVE WHAT INFO
C 
        CALL ICHMV(IWHAT,1,IBUF,IWHS+1,IWL) 
C 
39200   CONTINUE
C 
C               GET IWHS IF NOT PRESENT 
C 
        IF(IWHS .EQ. 0)IWHS=IBUFL+1 
C 
C               IF AN ERROR LET FHELP HAVE IT ALL 
C 
        CALL EXEC(23,6HFHELP ,LU,0,0,0,0,IBS,16-IBUFL)
C 
C               GET THE RETURNED INFORMATION
C 
        REG=EXEC(14,1,IBUR,-80) 
C 
C               NOTE THE INFORMATION IF RETURNED
C 
        IF(IRGA .NE. 0)GO TO 39500
C 
C               SAVE RETURNED LENGTH
C 
        IBURL=IRGB
C 
C               SKIP IF NOTHING FOUND 
C 
        IF(IBURL .EQ. 4 .AND. ICHCM(IBUR,1,4HNONO,1,4) .EQ. 0)
     .  GO TO 39500 
C 
C               IF NOW WHAT FIELD INPUT SKIP TO DISPLAY 
C 
        IF(IWL .EQ. 0)GO TO 39300 
C 
C               CHECK FOR ?W
C 
        REG=DXPM(IBUR,IBURL,2H?W,2) 
C 
C               CHECK FOR ?W FOUND
C 
        IF(IRGA .EQ. 0)GO TO 39300
C 
C               FIND MAX REPLACEMENT LENGTH 
C 
        IWM=MIN0(IRGB,IWL)
C 
C               MOVE WHAT FIELD INTO RETURNED INFO
C 
        CALL ICHMV(IBUR,IRGA,IWHAT,1,IWM) 
C 
39300   CONTINUE
C 
C               REMOVE LEADING WHAT PARENTHESIS 
C 
        IWHS=ICHMV(IBUF,IWHS,2H  ,1,1)
C 
C               MOVE RETURNED INFO INTO OUTPUT MESSAGE FOR DISPLAY
C 
        IBUFL=ICHMV(IBUF,IWHS,IBUR,1,IBURL)-1 
C 
C               NOW CHECK RETURNED MESSAGE FOR ?F 
C 
        REG=DXPM(IBUF,IBUFL,2H?F,2) 
C 
C               CHECK IF FMGR MESSAGE TO BE APPENDED
C 
        IF(IRGA .EQ. 0)GO TO 39500
C 
C               MOVE WHAT FIELD INTO ?F FIELD 
C 
        IWM=MIN0(IRGB,IWL)
C 
        CALL ICHMV(IBUF,IRGA,IWHAT,1,IWM) 
C 
C               NOW MAKE FM MESSAGE FOR FHELP 
C 
        CALL IFILL(IBUR,1,20,40B) 
C 
        CALL ICHMV(IBUR,1,3HFM ,1,3)
C 
        CALL ICHMV(IBUR,4,IWHAT,1,IWM)
C 
C               NOW GO GET FM MESSAGE IF PRESENT
C 
        CALL EXEC(23,6HFHELP ,LU,0,0,0,0,IBUR,-8) 
C 
C               GET RETURNED INFORMATION
C 
        REG=EXEC(14,1,IBUR,-80) 
C 
C               CHECK FOR SOMETHING RETURNED
C 
        IF(IRGA .NE. 0)GO TO 39500
C 
C               CHECK FOR NOTHING RETURNED
C 
        IF(IRGB .EQ. 4 .AND. ICHCM(IBUR,1,4HNONO,1,4) .EQ. 0) 
     . GO TO 39500
C 
C               CHECK FOR BUFFER LIMIT
C 
        IRGB=MIN0(119,IBUFL+IRGB)-IBUFL 
C 
C               MOVE IN A BLANK FIRST 
C 
        IBUFL=ICHMV(IBUF,IBUFL+1,2H  ,1,1)
C 
C               APPEND RETURNED INFO TO MESSAGE 
C 
        IBUFL=ICHMV(IBUF,IBUFL,IBUR,1,IRGB)-1 
C 
39500   CONTINUE
C 
C               APPEND BELL IF AN ERROR 
C 
        IF(ICHAR(IR2,1) .EQ. 102B)IBUFL=ICHMV(IBUF,IBUFL+1,2H ,1,1)-1
C 
C               NOW DISPLAY INFORMATION 
C                  Send log entry to each LU requested
C 
      DO 39900 I=1,NLULOG 
        CALL EXEC(18,LULOG(I),IBUF,-IBUFL,2HFS,IR2,IDSCL) 
39900   CONTINUE
C 
C               IF FIRST TIME START CLOUT 
C 
        IF(IP(2) .EQ. IDSCL)GO TO 40000 
C 
C               START CLOUT 
C 
        CALL EXEC(24,6HCLOUT ,IDSCL)
C 
C               NOTE STARTED
C 
        IP(2)=IDSCL 
C 
40000   CONTINUE
C 
C               NOW CHECK FOR SENDING TO LOG
C 
        IF(.NOT.KXLOG .AND. (KP .OR. KACK))GO TO 50000
C 
C               SEND IT TO LOG FILE NOW 
C 
        CALL WRITF(IDCBL,IERR,IBUL,(IBULL+1)/2) 
C 
C               CHECK FOR ERRORS WRITING TO THE LOG 
C 
        IF(IERR .LT. 0)GO TO 90000
C 
50000   CONTINUE
C 
C               HAS END OCCURREDED
C 
        IF(IR2 .EQ. -1)GO TO 60000
C 
C               CHECK FOR MORE INFO WAITING 
C 
        REG=EXEC(21,ICLT,IBUFF,-2)
C 
C               IF MORE INFO WAITING GO GET IT NOW
C 
        IF(IRGA .GE. 0 )GO TO 20000 
C 
60000   CONTINUE
C 
C               NO INFO WAITING - POST DCB TO GET IT OUT OF HERE
C 
        CALL POST(IDCBL,IERR) 
C 
C               IF NOT END LOOP BACK
C 
        IF(IR2 .NE. -1)GO TO 20000
C 
C               NOW EXIT
C 
        GO TO 99999 
C 
90000   CONTINUE
C 
C               MOVE IN ERROR CODE
C 
        CALL IB2AS(IERR,LHELP,19,4) 
C 
C               MOVE LOG ID IN
C 
        CALL ICHMV(LHELP,42,LLOG,1,2) 
C 
C               WRITE ERROR LOGGING MESSAGE OUT NOW 
C 
        CALL EXEC(18,LU,LHELP,-44,2HFS,IR2,IDSCL) 
C 
C               CONTINUE AS BEST AS POSSIBLE
C 
        IF(IR2 .NE. -1)GO TO 20000
C 
C               GO TO TERMINATE NOW ITS ALLLLL OVER 
C 
99999   CONTINUE
C 
C               TELL FHELP TO GO AWAY 
C 
        IF(IPGST(6HFHELP ) .NE.-1)CALL EXEC(23,6HFHELP ,LU,-1)
C 
C               CLOSE FILE TO GET OUT LAST RECORD 
C 
        CALL CLOSE(IDCBL,IERR)
C 
C               NOW DE-ALLOCATE CLASS AND EXIT
C 
        ICLB=IOR(IAND(ICLB,117777B),100000B)
C 
C               NOW LET CLASS GO
C 
        CALL EXEC(21,ICLB,IBUF,-2,IR1,IR2,IR3)
C 
C               CLEAR IP
C 
        CALL IFILL(IP,1,10,0) 
C 
C               GET OUR ID ADDRESS
C 
        IDAD=IGID(6HDDOUT ) 
C 
C               VANISH IF NOT IN SYSTEM 
C 
        CALL IDOFF(IGID(6HDDOUT ))
C 
        END 
        END$
