FTN4,X
C@FM
C 
      SUBROUTINE FM(IP),FORMATTER CONTROL C#870115:04:34# 
C 
C 1.1.   FM controls the formatter
C 
C     INPUT VARIABLES:
C 
      DIMENSION IP(1) 
C        IP(1)  - class number of input parameter buffer. 
C 
C     OUTPUT VARIABLES: 
C 
C        IP(1) - CLASS
C        IP(2) - # REC
C        IP(3) - ERROR
C        IP(4) - who we are 
C 
C 2.2.   COMMON BLOCKS USED 
C 
      INCLUDE #FSCOM::FS
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES:
C 
C     CALLED SUBROUTINES: GTPRM,ICHAR 
C 
C 3.  LOCAL VARIABLES 
C 
C        NCHAR  - number of characters in buffer
C        ICH    - character counter 
      DIMENSION IBUF(20)
C               - class buffer
C        ILEN   - length of IBUF, chars 
      DIMENSION IPARM(2)
C               - parameters returned from GTPRM
      DIMENSION IREG(2) 
C               - registers from EXEC calls 
C        INP,IMODE,IRATE,ISYN 
C               - indices for input, mode, rate, synch test 
      DIMENSION LZEROS(3) 
C               - fill in unused characters 
      DIMENSION LAUX(6) 
C              - auxilliary data, from user 
C     NCHAUX - number of chars in aux data
C 
      LOGICAL KFMRST
C                      - fromatter reset
C 
      EQUIVALENCE (REG,IREG(1)),(PARM,IPARM(1)) 
C 
C 4.  CONSTANTS USED
C 
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA ILEN/40/ 
      DATA LZEROS/2H00,2H00,2H00/ 
      DATA LAUX/6*0/
C                         Initialize to nulls 
C 
C 6.  PROGRAMMER: NRV 
C     LAST MODIFIED:  810207
C# LAST COMPC'ED  870115:04:34 #
C 
C     PROGRAM STRUCTURE 
C 
C     1. If we have a class buffer, then we are to set the FM.
C     If no class buffer, we have been requested to read the FM.
C 
      KFMRST=.FALSE.
      ICHOLD = -99
      ICLCM = IP(1) 
      IF (ICLCM.NE.0) GOTO 110
      IERR = -1 
      GOTO 990
110   REG = EXEC(21,ICLCM,IBUF,-ILEN) 
      NCHAR = IREG(2) 
      IEQ = ISCNC(IBUF,1,NCHAR,75B) 
C                   Scan for "="
      IF (IEQ.EQ.0) GOTO 500
C                   If no parameters, go read device
      IF (IEQ.EQ.NCHAR.OR.ICHAR(IBUF,IEQ+1).NE.77B) GOTO 140
      IP(1) = 0 
      IP(4) = 77B 
      CALL FMDIS(IP,ICLCM)
      RETURN
C 
140   IF (ICHCM(IBUF,IEQ+1,LTSRS,1,ILENTS).EQ.0) GOTO 600 
      IF (ICHCM(IBUF,IEQ+1,LALRM,1,ILENAL).EQ.0) GOTO 700 
C 
C 
C     2. Step through buffer getting each parameter and decoding it.
C     Command from user has these parameters: 
C                   FM=<output>,<rate>,<input>,<synch>,<aux>,<MATmode>
C     Choices are <input>: NOR, EXT, CRC.  Default NOR. 
C                <output>: A, B, C, D.  Default mode B. 
C                  <rate>: 0.125,0.25,0.5,1,2,4,8.  Default 4.
C                 <synch>: ON or OFF.  Default ON.
C                   <aux>: auxilliary data, up to 12 hex characters.
C                          Default blanks.
C 
C     2.1 OUTPUT, PARAMETER 1 
C 
210   ICH = 1+IEQ 
      IC1 = ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
C                   Get the mode, ASCII 
      IF (ICHAR(PARM,1).NE.52B.AND.ICHAR(PARM,1).NE.54B) GOTO 211 
      IF (ICHAR(PARM,1).EQ.52B) IMODE = IMODFM
      IF (ICHAR(PARM,1).EQ.54B) IMODE = 1 
C                   The default mode is B.
      GOTO 220
211   CALL IFMED(1,IMODE,IBUF,IC1,ICH-2)
      IF (IMODE.GE.0) GOTO 220
      IERR = -201 
      GOTO 990
C 
C     2.2 SAMPLE RATE, PARAMETER 2
C 
220   IC1 = ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,2,PARM) 
C                   Get the sample rate setting, real number
      IF (ICHAR(PARM,1).NE.54B.AND.ICHAR(PARM,1).NE.52B) GOTO 222 
      IF (ICHAR(IPARM,1).EQ.52B) IRATE = IRATFM 
      IF (ICHAR(IPARM,1).EQ.54B) IRATE = 7
C                   The default sample rate is 4 Mbits
      GOTO 230
222   CALL IFMED(2,IRATE,IBUF,IC1,ICH-2)
      IF (IRATE.GE.0) GOTO 230
      IERR = -202 
      GOTO 990
C 
C     2.3 INPUT, PARAMETER 3
C 
230   IC1=ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF (ICHAR(PARM,1).NE.52B.AND.ICHAR(PARM,1).NE.54B) GOTO 231 
      IF (ICHAR(PARM,1).EQ.52B) INP = INPFM 
      IF (ICHAR(PARM,1).EQ.54B) INP = 0 
C                   If default, use "NOR" 
      GOTO 240
231   CALL IFMED(3,INP,IBUF,IC1,ICH-2)
      IF (INP.GE.0) GOTO 240
      IERR = -203 
      GOTO 990
C 
C     2.4 SYNCH TEST, PARAMETER 4 
C 
240   IC1 = ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      IF (ICHAR(IPARM,1).NE.54B.AND.ICHAR(IPARM,1).NE.52B) GOTO 241 
      IF (ICHAR(IPARM,1).EQ.52B) ISYN = ISYNFM
      IF (ICHAR(IPARM,1).EQ.54B) ISYN = 1 
C                   Default value is "ON" 
      GOTO 250
241   CALL IFMED(4,ISYN,IBUF,IC1,ICH-2) 
      IF (ISYN.GE.0) GOTO 250 
      IERR = -204 
      GOTO 990
C 
C     2.5 AUX DATA, PARAMETER 5 
C 
250   IC1 = ICH 
      CALL GTPRM(IBUF,ICH,NCHAR,0,PARM) 
      NCHAUX = 0
      IF (ICHAR(PARM,1).EQ.54B) GOTO 260
C                   If no aux data, skip on 
      NCHAUX = MIN0(ICH-IC1-1,12) 
      CALL ICHMV(LAUX,1,IBUF,IC1,NCHAUX)
C                   Use max of 12 chars, rest is blanks 
C 
C     2.6 MAT MODE, PARAMETER 6 
C 
260   GOTO 300
C260   CALL GTPRM(IBUF,ICH,NCHAR,1,PARM)
C     IMMODE = 0
C     IF (ICHAR(PARM,1).NE.54B) IMMODE = IPARM(1) 
C     IF (IMMODE.GE.0.AND.IMMODE.LE.5) GOTO 300 
C     IERR = -206 
C     GOTO 990
C 
C     3. Finally, format the buffer for the controller. 
C     We have a valid LINP,LMODE,RATE,LSYN.  The buffer is set
C     up as follows:
C                   mmFM00000smr  then  ; 
C     where each letter represents a character (half word). 
C                   mm = mode, binary integer 
C                   FM = tells MAT formatter
C                    ; = strobe character for set-up data 
C                   00 = these bits unused
C                   s  = synch test 
C                   m  = input/output mode
C                   r  = sample rate code 
C 
300   IBUF(1) = 0 
      IBUF(2) = 2HFM
C     CALL ICHMV(IBUF,5,2H; ,1,1) 
C                   ***NOTE*** FOR JIM LEVINE'S FORMATTER WE MUST SEND
C                   THE STROBE *AFTER* THE DATA UPDATE
C                   Strobe character for first word 
      CALL ICHMV(IBUF,5,LZEROS,1,5) 
C                   Fill unused fields with zeros 
      CALL IB2AS(ISYN,IBUF,10,1)
C                   Synch test bit has its own character
      CALL ICHMV(IBUF,11,IHX2A(INP*4+IMODE),2,1)
C                   Put input and output into one word (2 bits each)
      CALL IB2AS(IRATE,IBUF,12,1) 
C                   Last character is sample rate 
C 
C 
C     4. Now plant these values into COMMON.
C     Next send the buffer to SAM.
C     Finally schedule BOSS to request that MATCON gets the data. 
C 
      ICHOLD = ICHECK(17) 
      ICHECK(17)=0
      INPFM = INP 
      IMODFM = IMODE
      IRATFM = IRATE
      ISYNFM = ISYN 
      CALL ICHMV(LAUXFM,1,LAUX,1,12)
C 
      ICLASS=0
      NCH = 12
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C 
      NCH = 3 
      IBUF(1) = 5 
      IBUF(2)=2H; 
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   ***NOTE***SEND THE STROBE CHARACTER AS SEPARATE 
C                   MESSAGE FOR JIM LEVINE'S FORMATTER
C                   USE MODE 5 TO SIMPLY TRANSMIT THIS CHARACTER
      NREC = 2
C 
C IF AUX DATA, SEND TWO MORE BUFFERS, WITH ! AND % CONTROLS 
      IF (NCHAUX.EQ.0) GOTO 400 
C 
      IBUF(1) = 0 
      IBUF(2) = 2HFM
      CALL ICHMV(IBUF,5,LAUX,1,8) 
      NCH = 12
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   Send out the first 8 chars ...
      IBUF(1) = 5 
      IBUF(2) = 2H! 
      NCH = 3 
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   ... as ! type data
      IBUF(1) = 0 
      IBUF(2) = 2HFM
      CALL ICHMV(IBUF,5,LAUX,9,4) 
      CALL ICHMV(IBUF,9,LZEROS,1,4) 
      NCH = 12
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   Send out the last 4 chars and zeros ... 
      IBUF(1) = 5 
      IBUF(2) = 2H% 
      NCH = 3 
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   ... as % type data
      NREC = 6
C                   ***NOTE***This code is for Jim Levine's style 
C                   formatter.  For NRAO, setup is different. 
400   CONTINUE
      NCH=3 
      IBUF(1)=5 
      IBUF(2)=2H+ 
      CALL EXEC(20,0,IBUF,-NCH,2HFS,0,ICLASS) 
C                   ***NOTE***SEND THE STROBE CHARACTER AS SEPARATE 
C                   MESSAGE FOR FIFO RESET
C                   USE MODE 5 TO SIMPLY TRANSMIT THIS CHARACTER
      KFMRST=.TRUE. 
      NREC=NREC+1 
      GOTO 800
C 
C 
C     5.  This is the read device section.
C     Fill up two class buffers, one requesting ( data (mode -3), 
C     the other ) (mode -4).
C 
500   IBUF(2) = 2HFM
      ICLASS = 0
      DO 510 I=3,4
        IBUF(1) = -I
        CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
510     CONTINUE
C 
      NREC = 2
      GOTO 800
C 
C 
C     6. This is the test/reset device section. 
C 
600   IBUF(1) = 6 
      IBUF(2) = 2HFM
      ICLASS=0
      CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
      NREC = 1
      GOTO 800
C 
C 
C     7. This is the alarm query and reset request. 
C 
700   IBUF(1) = 7 
      IBUF(2) = 2HFM
      ICLASS=0
      CALL EXEC(20,0,IBUF,-4,2HFS,0,ICLASS) 
      NREC = 1
      GOTO 800
C 
C 
C     8. All MATCN requests are scheduled here, and then FMDIS called.
C 
800   CALL EXEC(23,6HMATCN ,ICLASS,NREC)
      CALL RMPAR(IP)
      IF(KFMRST) CALL SUSP(2,1) 
      IF (ICHOLD.NE.-99) ICHECK(17)=ICHOLD
      IF (ICHOLD.GE.0) ICHECK(17)=1 
      CALL FMDIS(IP,ICLCM)
      RETURN
C 
990   IP(1) = 0 
      IP(2) = 0 
      IP(3) = IERR
      IP(4) = 2HQF
      RETURN
      END 
