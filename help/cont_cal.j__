	cont_cal - continuous calibration control (DBBC3 racks)


            Syntax:     cont_cal=state,polarity,freq,option,samples,filter,ifa,...,ifh

            Response:   cont_cal/state,polarity,freq,option,samples,filter,ifa,...,ifh


Settable parameters:
            state       off, on, or undef. Default is off. See Comments.
            polarity    0, 1, 2, or 3.  Default is the previous value.
                        See the Comments for more information.
            freq        8-300000 Hz.  Default is the previous value.
                        See the Comments for more information.
            option      0=pulsed, 1=output is always on.  Default is the
                        previous value.  See the Comments for more information.
            samples     number of samples to use for Tsys, a non-negative
                        integer.  Default is the previous value, which is
                        initially 10.  See the Comments for more information.
            filter      filter number to apply to averaged data, '0' or '1'.
                        '0' disables filtering.  Only one filter is currently
                        available, select it with '1'.  Default is the
                        previous value, which is initially '0'.  See the
                        Comments for more information.
            ifX         filter parameter for IF X, X=a,...,h. Floating point
                        number. Default is previous value, which is initially
                        '-1'.  Not displayed if the value is negative.  See the
                        Comments for more information.

Monitor-only parameters: None.

Comments:
If 'state' is 'off', a 'polarity' of '0' is always sent to the device'. A warning
is issued if a different 'polarity' had been requested. A value of '0' is
necessary to get the TPI values in the expected positions for decoding.

If 'state' is 'on', this command causes the DBBC3 to generate a TTL square-wave
to control noise injection. The receiver must use the square-wave to inject a
switched calibration signal for this to be useful.

Polarity values affect the order of 'on'/'off' values in the device responses.
A value of '2' causes them to be swapped. A value of '0' does not cause a swap.
The setting of the polarity does not affect the FS's interpretation of the
values returned, only how the DBBC3 populates the returned values. It should be
set to agree with the polarity of your cal signal so that the reported values
from the bbcNNN commands are in the order 'on' then 'off'. Polarity '0'
corresponds to noise injection when the TTL signal is "low" (0 volts); '2',
when "high".

For some early releases of firmware DDC_V v124, a value of '1' or '3' used an
embedded 1 PPS in the cal signal, but was otherwise equivalent to values '0'
and '2', respectively. In any event, the only values that should be used are
'0' and '2'.

For 'polarity', 'frequency', and 'option', the default is the last value
commanded.  On FS start-up, these default to not sending a value.  Not
commanding persists until a new non-negative values is used.  A value of '-1'
can be used to disable commanding of that parameter after a non-negative value
has been used. The 'samples', 'filter', and 'ifX' parameters also behave this
way, but are software-only parameters and are not sent to the device (so '-1'
does not have this meaning).  This behavior is atypical of how FS commands
normally work; they normally have a specific value for any default and a '*'
would be used for the previous value.  The current behavior is to simplify
operations, including interactions with 'drudg', until a more comprehensive
solution is implemented.  You can set defaults for these parameters in 'initi'
or manually; they will then be used by 'drudg' generated procedures.

If the 'state' is 'undef' the settings are not sent to the device. This
provides a way to set the defaults for the other parameters (perhaps in
'initi') without actually sending a command to the device. The value of 'state'
in the FS's model (shared memory) is not affected.

The 'samples' sets the exponential decay time-constant in seconds for a
trailing average of Tsys calculated from the multicast.  The average for a
channel or IF detector is restarted after: (i) 'tpicd' is started or restarted,
typically for a mode setup, (ii) the 'cont_cal' parameters are changed, or
(iii) the average is reset manually with a 'tpicd=reset' command.  If multicast
packets are lost or Tsys values are invalid (detector overflow, infinite Tsys,
or on/off zero) or out-of-range (less than -999. or greater than +999.9) they
are ignored.  The remaining data are treated as though they have uniform one
second spacing.

The 'samples' also sets the number of cycles of 'tpicd' for logging the
averaged Tsys data.  It is expected that the cycle period for 'tpicd' will
normally be set to '100' centiseconds, in which case the Tsys values will be
logged every 'samples' seconds.  If the cycle period of 'tpicd' is set to
longer than '100' centiseconds, the logging period will be correspondingly
longer.

The special value of '0' for 'samples' disables averaging and sets the number
of cycles of 'tpicd' for logging the Tsys data to one.  The logged (and
displayed) Tsys values are truly statistically independent only if '0' is used.
This was the behavior of FS 10.1, which did not average.

If 'samples' is non-zero then Tsys can also be filtered.  This will prevent
values that differ by more than a threshold amount from the average from
contributing to it.  Filtering occurs on a per detector basis with a threshold
set per IF.  If 'filter' is '0', there is no filtering.  If it is '1',
filtering is enabled after an initial average has been formed.  This requires
'samples' valid in-range values for a detector each time the average is reset.

The filter parameters 'ifX' set the threshold in percent for rejecting, or
"clipping", values for detectors on that IF.  For example, if 'ifa' is '50',
then values that differ from the detector's average by more than +/- 50% on IF
A are clipped.  If an 'ifX' is '0' the average will never change for detectors
on that IF after the initial average has been formed. If 'ifX' is negative,
filtering is disabled on that IF and just averaging is used. Non-negative
values only need to be supplied for IFs that are to be filtered.  Other
filters, selected by 'filter' values larger than '1', may be added in the
future.

When the values are filtered, the background color of the value in the Tsys
monitor display window (monit7) is changed when a value is "clipped". For the
first and second clipped value in a row, the color is green; third through
fifth, yellow; six or more, red. On monochrome terminals inverse video is used
instead.

When filtering is in use, if the clipping reaches the red zone (clipped six
times or more) for a detector, and the long-term average for the detector is
more than the filtering percentage from the average of the last 'samples'
samples, the long-term average is "auto-reset" to the more current average and
shown with a blue background (inverse video on monochrome terminals).

A separate shadow average is maintained for auto-resetting. It is reinitialized
every 'samples' samples so that it is only dependent on the most recent data.
Thus if the long-term average in use is significantly skewed by older data with
either RFI or from a different elevation, a more up-to-date value will be
substituted.  The device must be in the red clipping zone on the sample that
completes the shadow average for a reset to occur.
