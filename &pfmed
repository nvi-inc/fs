FTN4,X
C@PFMED 
C 
      PROGRAM PFMED (3,99),FIELD SYSTEM FMGR/EDITR C#870115:05:40 
C 
C     PFMED 
C 
C 1.  PFMED PROGRAM SPECIFICATION 
C 
C 1.1.   PFMED is a simplified FMGR and EDITR for use in the Mark III field 
C        system.  FMGR features are described in FFM and FFMP,
C        EDITR features in FED. 
C 
C 1.2.   RESTRICTIONS - Only SNAP procedures may be accessed. 
C 
C 1.3.   REFERENCES - Field system manual 
C 
C 2.  PFMED INTERFACE 
C 
C 2.1.   CALLING SEQUENCE: none 
C 
C 2.2.   COMMON BLOCKS USED:
C 
      INCLUDE #FSCOM::56  
C 
C        LSKD   - current schedule
C        LNEWSK - next version of procedure file
C        LNEWPR - next version of station procedure file
C 
      INCLUDE #PFMED::56  
C 
C 2.3.   DATA BASE ACCESSES: none 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C     INPUT VARIABLES:
C 
C     RMPAR      - (1) INPUT LU - DEFAULT = 1 
C                  (2) OUTPUT LU - DEFAULT = INPUT
C 
C     TERMINAL   - IB 
C 
C     OUTPUT VARIABLES: ending message
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: none 
C 
C     CALLED SUBROUTINES: RMPAR, EXEC, FED, FFM, FFMP, PFCOP
C 
C 3.  LOCAL VARIABLES 
C 
C        ICHI   - number of characters from keyboard
C        REG    - A and B registers equivalenced to real
C        LPROC  - active procedure file for PFMED 
      DIMENSION IB(51)
C               - line and record buffer
      DIMENSION IAB(2)
C               - A and B registers 
      DIMENSION IMPAR(5)
C               - RMPAR parameters from RU or EXEC schedule 
      DIMENSION LPRMPT(20)
C               - contains the cartridge prompt for procedures when 
C                 the Field System is not running.  
C 
      EQUIVALENCE (REG,IAB),(ICHI,IAB(2)) 
C 
C 4.  CONSTANTS USED
C 
      DIMENSION LCOL(5),LEND(6),LDEF(17)
      DIMENSION LM1(18),LM2(18),LM3(22) 
C 
      DATA LM1/2HCu,2Hrr,2Hen,2Ht ,2Hsc,2Hhe,2Hdu,2Hle,2H p,2Hro,2Hce,
     .   2Hdu,2Hre,2H f,2Hil,2He:,2H  ,2H  /
      DATA LM2/2HCu,2Hrr,2Hen,2Ht ,2Hst,2Hat,2Hio,2Hn ,2Hpr,2Hoc,2Hed,
     .   2Hur,2He ,2Hfi,2Hle,2H: ,2H  ,2H  /
      DATA LM3/2HPr,2Hoc,2Hed,2Hur,2He ,2Hfi,2Hle,2H c,2Hur,2Hre,2Hnt,
     .   2Hly,2H a,2Hct,2Hiv,2He ,2Hin,2H P,2HFM,2HED,2H: ,2H  /
      DATA LCOL   /2H&,2HdB,2H:,2H&d,2H@_/
C               - FMGR-like prompt with reverse video 
      DATA LEND   /2HPF,2HME,2HD ,2HEN,2HDE,2HD / 
C               - ending message - PFMED ENDED
      DATA LDEF   /2HDE,2HFI,2HNE,2H  ,2HNN,2HNN,2HNN,2HNN,2HNN,2HNN, 
     /             2H  ,2H00,2H00,2H00,2H00,2H00,2H0 /
      DATA LPRMPT /2HCA,2HRT,2HRI,2HDG,2HE ,2HFO,2HR ,2HPR,2HOC,2HED, 
     /             2HUR,2HES,2H (,2H::,2H T,2HO ,2HEN,2HD),2H ?,2H_ / 
      DATA NLPRMT /39/
C               - DEFINE record - 12 char name begins col. 9, 
C                 time field YYDDDHHMMSS begins col. 23 
C 
C 5.  INITIALIZED VARIABLES 
C 
      DATA IB /51*0/, LPROC /0/ 
C 
C 6.  PROGRAMMER: C. Ma 
C     LAST MODIFIED: <840504.1940>
C     MODIFIED 840307 BY MWH To add opening messages about procedure files
C# LAST COMPC'ED  870115:05:40 #
C 
C     PROGRAM STRUCTURE 
C 
C     Set input and output LU's.
      CALL RMPAR(IMPAR) 
      LUI=IMPAR(1)
      IF (LUI.EQ.0) LUI=1 
      LUO=IMPAR(2)
      IF(LUO.EQ.0) LUO=LUI
C 
C     If the Field System is not running, check to see if BOSS is 
C     present.
C 
      IF(IPGST(6HBOSS  ).NE.-1) GO TO 90
      ICRPRC=IMPAR(3) 
      LSKD=0
      LPRC=0
      IF(ICRPRC.NE.0) GO TO 90
80    CALL EXEC(2,LUI,LPRMPT,-NLPRMT) 
      REG=EXEC(1,LUI+400B,IB,-100)
      IF(IB.EQ.2H::) GO TO 900
      ICRPRC=IAS2B(IB,1,ICHI) 
      IF(ICRPRC.EQ.0.OR.ICRPRC.EQ.-32768) GO TO 80
C 
C     Set active procedure file for PFMED to schedule procedure file or 
C     station procedure file. 
C90   IF(LSKD.NE.0) LPROC=LSKD
90    LPROC = LSKD
      IF(LPROC.EQ.0) LPROC=LPRC 
C  Print messages about current procedure files 
      L1=LSKD 
      IF(L1.EQ.0)L1=2H  
      ICN=ICHMV(LM1,35,L1,1,2)
      CALL EXEC(2,LUI,LM1,-36)
      L1=LPRC 
      IF(L1.EQ.0)L1=2H  
      ICN=ICHMV(LM2,35,L1,1,2)
      CALL EXEC(2,LUI,LM2,-36)
      L1=LPROC
      IF(L1.EQ.0)L1=2H    
      ICN=ICHMV(LM3,43,L1,1,2)
      CALL EXEC(2,LUI,LM3,-44)
C     Copy current procedure file to scratch file 3.
      CALL PFCOP(LPROC,ICRPRC,LUI,IB) 
C     Prompt and read input line with echo. 
100   CALL EXEC(2,LUI,LCOL,-10) 
      REG=EXEC(1,LUI+400B,IB,-100)
C     If nothing entered, re-prompt.
      IF(ICHI.EQ.0)GOTO 100 
C     If EX or ::, exit.
      IF(IB.EQ.2HEX.OR.IB.EQ.2H::) GO TO 900
C     Check mode. 
      IF(IB.EQ.2HED) 400,499
400   CALL FED(LUI,LUO,ICRPRC,IB,ICHI,LPROC,LDEF) 
      GO TO 100 
499   CONTINUE
      IF(IB.EQ.2HPF) 500,599
500   CALL FFM(LUI,LUO,ICRPRC,IB,ICHI,LPROC,LNEWSK,LNEWPR)
      GO TO 100 
599   CONTINUE
      CALL FFMP(LUI,LUO,ICRPRC,IB,ICHI,LPROC,LDEF)
      GO TO 100 
C     Exit. 
900   CALL CLOSE(IDCB3) 
      CALL PURGE(IDCB2,IERR,LSF2,0,ICRPRC)
      CALL EXEC(2,LUI,LEND,-11) 
      CALL EXEC(6)
      END 
