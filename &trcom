FTN4,X
      SUBROUTINE TRCOM(LUANT,IBUF,NCH,LU,KECHO,ILEN,
     .     IERR),TR-85 ANTENNA COMMUNICATIONS C#840622:22:28#   
C 
C     TDCOM handles the actual communications with the
C     TDPS antenna pointing interface.
C 
C     NRV  840113 
C     MARK HAYES 84 MARCH 
C     WEH  840620 
C 
C  INPUT: 
C 
C     LUANT - LU of antenna 
      DIMENSION IBUF(1) 
C      - buffer with message to be transmitted
C     NCH - number of characters in message 
C     LU - terminal for echoed message
      LOGICAL KECHO 
C      - true if we are to echo the communications on terminal
C     ILEN - available length of IBUF 
C 
C 
C  OUTPUT:
C 
C     IBUF - response to message
C     NCH - number of characters in response
C           (NCH=0 means there was no response) 
C     IERR - error return 
C            0 = ALL OK 
C           -2 = timeout (no response from antenna) 
C           -5 = error return from antenna (?)          
C 
C 
C  LOCAL: 
C 
C     LTERM - characters to be appended to transmitted message  
C             (e.g. <CR> or <LF><CR>)   
C     NTERM - number of characters in LTERM 
      DIMENSION IREG(2),IESC(2) 
      EQUIVALENCE (IREG(1),REG) 
C 
C 
C  INITIALIZED: 
C 
C*****Use the following for <CR> to terminate messages  
      DATA LTERM/6400B/, NTERM/1/ ,IESC/15502B,2H_  / 
C*****Use the following for tests using a CRT as "antenna"
C     DATA LTERM/5015B/,  NTERM/2/, IESC/2H  ,2H_ / 
C                <LF><CR> 
C 
C 
C               ESCAPE B
C 
C     1.  Fix up the message before sending it.  First
C     append the characters in LTERM.  Then, add the "_"
C     to suppress DVF00's insane desire to add <LF><CR> 
C     to every message. 
C 
      CALL EXEC(3,LUANT,0)
      NCH = NCH + 1 
C                       Set to start adding characters after
C                       the current end of IBUF.
      IF (NTERM.GT.0) 
     .NCH = ICHMV(IBUF,NCH,LTERM,1,NTERM)     
      NCH = ICHMV(IBUF,NCH,2H_ ,1,1) -1 
      IF (KECHO) CALL EXEC(2,LU,IESC,-3)
      CALL EXEC(2,LUANT,IESC,-3)
      IF (KECHO) CALL EXEC(2,LU,IBUF,-NCH)
      CALL EXEC(2,LUANT,IBUF,-NCH)
C 
C 
C     2. Now read the response with the following controls. 
C     For tests with a CRT on the HP, use 400B in the read request. 
C        400B = 0 0 0 1 0 0 
C                     | echo characters 
C     For actual communications, use 3200B in the read request. 
C       3200B = 0 1 1 0 1 0 
C                 | | | | | ASCII read
C                 | | | | no master reset on initialization 
C                 | | | no echo 
C                 | | transmit spec. char. (LF, CR) 
C                 | buffer mode 
C     Echo the response on terminal if required.
C 
200   CONTINUE
      NCH = 0 
C********************THIS IS THE REAL THING*********************
C 
C  READ TWICE TO DISCARD ECHOED <CR>
C 
      REG = EXEC(1,3200B+LUANT,IBUF,-ILEN)
      REG = EXEC(1,3200B+LUANT,IBUF,-ILEN)
C*******************FOR TERMINAL TESTING ONLY************************ 
C     REG = EXEC(1,400B+LUANT,IBUF,-ILEN) 
      NCH = MIN0(IREG(2),ILEN)
      IF (KECHO) CALL EXEC(2,LU,IBUF,-NCH)
C 
C 
C     3. The response, if any arrived, resides in IBUF. 
C     First check for a time-out. 
C     Then check for an error response. 
C     Then check for "ack" and substitute ACK.
C 
      IERR = -2 
      IF (IAND(IREG,10B).NE.0) GOTO 900 
      IERR = -5 
      IF (ICHAR(IBUF,1).EQ.77B) GOTO 900
      IERR = 0
      IF (ICHAR(IBUF,1).EQ.6B) NCH=ICHMV(IBUF,1,3HACK,1,3)-1
      IF (ICHAR(IBUF,1).EQ.15B) NCH=ICHMV(IBUF,1,2HCR,1,2)-1
C 
900   RETURN
      END 
