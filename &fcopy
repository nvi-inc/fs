FTN4,X
C AI2CM 
C 
C PROGRAM TO COPY, PACK, MOVE, AND REPLACE FILES WITH RECORD LENGTHS UP 
C TO 4600 WORDS 
C 
C COPY - MAKES A NEW, PACKED COPY 
C PACK - ELIMINATES EXTENTS AND RELEASES EXCESS BLOCKS
C MOVE - MAKES A NEW, PACKED COPY AND PURGES OLD FILE 
C REPLACE - TWO MODES: 1. REPLACES OUTPUT FILE ONLY IF IT EXISTS
C                      2. REPLACES OUTPUT FILE IF IT EXITS OR 
C                         CREATES OUTPUT FILE IF IT DOES NOT EXIST
C 
C TO USE: RU,FCOPY,INPUT-UNIT(OPTIONAL),ACTION(OPTIONAL),NAME-FILE(OPTIONAL)
C 
C        IF ACTION IS NOT GIVEN, THE PROGRAM WILL PROMPT EACH TIME FOR
C        THE ACTION TO BE TAKEN. IF ACTION IS GIVEN, ONLY THAT
C        ACTION WILL BE TAKEN FOR ALL THE FILES.
C        THE PROGRAM PROMPTS FOR INPUT AND OUTPUT FILE INFORMATION. 
C 
C        ACTION = C - COPY
C                 P - PACK
C                 M - MOVE
C                 CR - COPY/REPLACE ONLY IF OUTPUT FILE ALREADY EXISTS
C                 CS - AS ABOVE BUT OUTPUT FILE NOT SHORTENED 
C                 MR - MOVE/REPLACE ONLY IF OUTPUT FILE ALREADY EXISTS
C                 MS - AS ABOVE BUT OUTPUT FILE NOT SHORTENED 
C                 CU - COPY/REPLACE UNCONDITIONAL 
C                 CV - AS ABOVE BUT OUTPUT FILE NOT SHORTENED 
C                 MU - MOVE/REPLACE UNCONDITIONAL 
C                 MV - AS ABOVE BUT OUTPUT FILE NOT SHORTENED 
C 
C INPUT FORMAT: FILE-NAME:SECURITY-CODE(OPTIONAL):CARTRIDGE(OPTIONAL) 
C 
C NAMEI = INPUT FILE NAME - MANDATORY 
C ISECUI = INPUT FILE SECURITY CODE (DEFAULT - 0) 
C ICRI = INPUT FILE CARTRIDGE (DEFAULT - FIRST FILE FOUND)
C NAMEO = OUTPUT FILE NAME (DEFAULT - SAME AS INPUT FILE NAME)
C ISECUO = OUTPUT FILE SECURITY CODE (DEFAULT - 0 OR SAME AS INPUT FOR MOVE)
C ICRO = OUTPUT FILE CARTRIDGE (DEFAULT - FIRST CARTRIDGE WITH SPACE) 
C 
C USE OF NAME FILE:  IF THE THIRD RUN PARAMETER IS A FILE NAME, 
C                    THE CONTROL INPUT IS READ FROM THAT FILE. THE INPUT
C                    HAS THE FORM NAMEI:ISECUI:ICRI,NAMEO:ISECUO:ICRO FOR 
C                    COPY AND MOVE. ONLY NAMEI IS MANDATORY. PACK REQUIRES
C                    ONLY THE INPUT FILE INFORMATION. THERE IS ONE LINE FOR 
C                    EACH FILE TO BE PROCESSED. 
C 
C FILES TYPES 1-49 CAN BE HANDLED BY FCOPY
C 
      PROGRAM FCOPY,3 
C 
C# LAST COMPC'ED  870115:05:30
C 
      DIMENSION IMPAR(5)
      DIMENSION IDCBI(1296),NAMEI(3),ISIZE(2) 
      DIMENSION IDCBO(1296),NAMEO(3)
      DIMENSION IDCBN(144)
      DIMENSION NAMEX(3)
      DIMENSION IOBUF(4600) 
      DIMENSION IPBUF(10),INBUF(20),IREG(2) 
      EQUIVALENCE(REG,IREG) 
      DATA IOPTN /0/, ICONI /0/, ICONR /0/, ICONT /40B/ 
      DATA KFILE /0/
      DATA NAMEX /2HCM,2HAC,2HMA/ 
      DATA LC /1HC/, LP /1HP/, LM /1HM/, LE /1H:/ 
      DATA LR /1HR/, LU /1HU/, LS /1HS/, LV /1HV/ 
C GET CONTROL LU
      CALL RMPAR(IMPAR) 
      REG=EXEC(14,1,INBUF,-40)
      IF(IMPAR(1).NE.0) LUI=IMPAR(1)
C GET OVERRIDE OPERATION TYPE 
      ICONI=IMPAR(2)
      CALL IPUTC(ICONT,1,IGETC(ICONI,2))
      CALL IPUTC(ICONI,2,40B) 
C CHECK FOR VALID COMMANDS
      IF(ICONI.NE.LC.AND.ICONI.NE.LP.AND.ICONI.NE.LM) IMPAR(2)=0
      IF(ICONT.NE.LR.AND.ICONT.NE.LU.AND. 
     .   ICONT.NE.LS.AND.ICONT.NE.LV.AND.ICONT.NE.2H  ) IMPAR(2)=0
      IF(ICONI.EQ.LP.AND.ICONT.NE.2H  ) IMPAR(2)=0
      IF(ICONT.EQ.LR.OR.ICONT.EQ.LS) ICONR=1HR
      IF(ICONT.EQ.LU.OR.ICONT.EQ.LV) ICONR=1HU
C READ NAME FILE NAME, IF ANY 
40    ISCR=1
      DO 50 I=1,5 
      IF(NAMR(IPBUF,INBUF,IREG(2),ISCR).LT.0) GO TO 70
50    CONTINUE
      KFILE=1 
      CALL OPEN(IDCBN,IERR,IPBUF,1,IPBUF(5),IPBUF(6)) 
      IF(IERR.LT.0) 60,70 
60    WRITE(LUI,9070) IERR,(IPBUF(I),I=1,3),IPBUF(5),IPBUF(6) 
9070  FORMAT(" ERROR",I4," OPENING NAME FILE ",3A2,":",I5,":",I5) 
      KFILE=0 
70    CONTINUE
C INITIALIZE OR RE-INITIALIZE 
100   CONTINUE
      ISIZE(1)=-1 
      ISIZE(2)=0
      IL=4600 
      IDCBX=1280
      NR=0
      KR=0
      IREG(2)=20
101   IF(IMPAR(2).NE.0) GO TO 102 
      WRITE(LUI,9000) 
9000  FORMAT("(C)OPY, (P)ACK, (M)OVE, (CR/U/S/V), (MR/U/S/V), OR END(::)
     . ? _")
      ICONT=2H
      READ(LUI,9001) ICONI,ICONT
9001  FORMAT(2A1) 
      IF(ICONI.EQ.LE) GO TO 499 
      ICONR=0 
C CHECK FOR VALID COMMAND 
      IF(ICONI.NE.LC.AND.ICONI.NE.LP.AND.ICONI.NE.LM) GO TO 101 
      IF(ICONT.NE.LR.AND.ICONT.NE.LU.AND. 
     .   ICONT.NE.LS.AND.ICONT.NE.LV.AND.ICONT.NE.2H  ) GO TO 101 
      IF(ICONI.EQ.LP.AND.ICONT.NE.2H  ) GO TO 101 
      IF(ICONT.EQ.LR.OR.ICONT.EQ.LS) ICONR=1HR
      IF(ICONT.EQ.LU.OR.ICONT.EQ.LV) ICONR=1HU
C RESET OPTION FLAG IF USING NAME FILE
102   IF(KFILE.EQ.1) IMPAR(2)=ICONI 
C GET INPUT FILE INFORMATION
105   IF(KFILE.EQ.0) 110,120
110   WRITE(LUI,9100) 
9100  FORMAT(" INPUT-FILE-NAME:SECURITY-CODE:CARTRIDGE ? _")
      READ(LUI,9101) INBUF
9101  FORMAT(20A2)
C EXIT IF "::"
      IF(INBUF(1).EQ.2H::) GO TO 499
      GO TO 130 
C READ NAME FILE FOR INPUT FILE NAME
120   CONTINUE
      CALL READF(IDCBN,IERR,INBUF,20,LEN) 
      IF(LEN.EQ.-1) WRITE(LUI,9120) 
9120  FORMAT("FCOPY FINISHED")
C EXIT IF EOF OR BREAK
      IF(LEN.EQ.-1.OR.IFBRK(IDUM).NE.0) GO TO 480 
      IF(IERR.LT.0) 121,122 
C READ ERROR, RESUME INTERACTIVE MODE 
121   KFILE=0 
      WRITE(LUI,9121) IERR
9121  FORMAT(" ERROR",I4," READING NAME FILE FOR INPUT NAME") 
      GO TO 110 
122   IREG(2)=LEN*2 
130   CONTINUE
C PARSE FILE NAME:SECURITY CODE:CARTRIDGE 
      ISTRC=1 
      IDUM=NAMR(IPBUF,INBUF,IREG(2),ISTRC)
      NAMEI(1)=IPBUF(1) 
      NAMEI(2)=IPBUF(2) 
      NAMEI(3)=IPBUF(3) 
      ISECUI=IPBUF(5) 
      ICRI=IPBUF(6) 
C OPEN INPUT FILE 
      CALL OPEN(IDCBI,ITYP,NAMEI,IOPTN,ISECUI,ICRI,IDCBX) 
C IF TYPE 1 FILE, RE-OPEN WITH MINIMUM DCB
      IF(ITYP.EQ.1) CALL OPEN(IDCBI,ITYP,NAMEI,IOPTN,ISECUI,ICRI) 
C IF TYPE 6 FILE, RE-OPEN AS TYPE 1 WITH MINIMUM DCB
      IF(ITYP.EQ.6) CALL OPEN(IDCBI,ITXP,NAMEI,4,ISECUI,ICRI) 
C CHECK FOR ERROR 
      IF(ITYP.GT.0.AND.ITYP.LE.49) GO TO 109
      WRITE(LUI,9102) ITYP,NAMEI,ISECUI,ICRI
9102  FORMAT("ERROR",I4," OPENING INPUT FILE ",3A2,":",I5,":",I5) 
C IF READING FROM FILE, EXIT UNLESS FILE NOT FOUND
      IF(KFILE.EQ.1.AND.ITYP.NE.-6) GO TO 480 
      GO TO 100 
109   CONTINUE
C GET INFORMATION FROM DCB
      CALL LOCF(IDCBI,IERR,IREC,IRB,IOFF,JSEC,JLUI,JTY,JREC)
      IF(JTY.EQ.1) IL=128 
      IF(JTY.EQ.1) IDCBX=128
      IF(JTY.EQ.2) ISIZE(2)=JREC
      IF(JTY.EQ.1.OR.JTY.EQ.2) ISIZE(1)=JSEC/2
C GET OUTPUT FILE INFORMATION IF COPY OR MOVE 
      IF(ICONI.EQ.LC.OR.ICONI.EQ.LM) GO TO 200
      GO TO 219 
200   CONTINUE
      IF(KFILE.EQ.0) 201,202
201   WRITE(LUI,9200) 
9200  FORMAT("OUTPUT-FILE-NAME:SECURITY-CODE:CARTRIDGE ? _")
      READ(LUI,9101) INBUF
      IF(INBUF.EQ.2H::.AND.INBUF(2).EQ.2H  ) GO TO 499
      GO TO 209 
C ZERO IPBUF FOR NAME FILE MODE 
202   CONTINUE
      DO 204 I=1,10 
204   IPBUF(I)=0
      GO TO 209 
209   CONTINUE
C PARSE STARTING AT BEGINNING FOR INTERACTIVE, MIDDLE IF NAME FILE
      IF(KFILE.EQ.0) ISTRC=1
      IDUM=NAMR(IPBUF,INBUF,IREG(2),ISTRC)
      IF(IPBUF(1).NE.0) GO TO 212 
      GO TO 213 
212   NAMEO(1)=IPBUF(1) 
      NAMEO(2)=IPBUF(2) 
      NAMEO(3)=IPBUF(3) 
      GO TO 214 
C NULL NAME - USE INPUT NAME
213   NAMEO(1)=NAMEI(1) 
      NAMEO(2)=NAMEI(2) 
      NAMEO(3)=NAMEI(3) 
C IF MOVE OF NON-ZERO SECURITY CODE AND NONE SPECIFIED, USE INPUT CODE
      IF(ICONI.EQ.LM.AND.ISECUI.NE.0.AND.IAND(IPBUF(4),12).EQ.0)
     1 IPBUF(5)=ISECUI
214   CONTINUE
      ISECUO=IPBUF(5) 
      ICRO=IPBUF(6) 
219   CONTINUE
C IF REPLACE, OPEN OUTPUT FILE
      IF((ICONR.NE.LR.AND.ICONR.NE.LU).OR.ICONI.EQ.LP) GO TO 220
      KR=LR 
      CALL OPEN(IDCBO,NSEC,NAMEO,0,ISECUO,ICRO,IDCBX) 
C IF TYPE 6, RE-OPEN AS TYPE 1 WITH MINIMUM DCB 
      IF(ITYP.EQ.6) CALL OPEN(IDCBO,ITXP,NAMEO,4,ISECUO,ICRO) 
C CHECK FOR SECURITY CODE MISMATCH
      IF(NSEC.GT.0.AND.IAND(IDCBO(8),100000B).EQ.0) NSEC=-7 
      IF(NSEC.GT.0) GO TO 299 
      KR=0
      IF(ICONR.EQ.LU.AND.NSEC.NE.-7) WRITE(LUI,9219) NSEC,NAMEO,ISECUO, 
     1  ICRO
9219  FORMAT("ERROR",I4," OPENING REPLACE FILE ",3A2,":",I5,":",I5, 
     1  " - FILE WILL BE CREATED")
      IF(ICONR.EQ.LR.OR.NSEC.EQ.-7) WRITE(LUI,9218) NSEC,NAMEO,ISECUO,
     1  ICRO
9218  FORMAT("ERROR",I4," OPENING REPLACE FILE ",3A2,":",I5,":",I5, 
     1  " - FILE NOT REPLACED") 
      IF(NSEC.EQ.-7) CALL CLOSE(IDCBO)
      IF(ICONR.EQ.LR.OR.NSEC.EQ.-7) GO TO 223 
220   CONTINUE
C CREATE OUTPUT FILE USING REST OF DESTINATION DISK 
C IF COPY OR MOVE, FILE IS ON NEW CATRIDGE
      IF(ICONI.EQ.LC.OR.ICONI.EQ.LM)
     1  CALL CREAT(IDCBO,NSEC,NAMEO,ISIZE,ITYP,ISECUO,ICRO,IDCBX) 
C IF PACK, FILE IS ON SAME DISK LOGICAL UNIT
      IF(ICONI.EQ.LP) 
     1  CALL CREAT(IDCBO,NSEC,NAMEX,ISIZE,ITYP,ISECUI,-JLUI,IDCBX)
C IF TYPE 6, RE-OPEN AS TYPE 1 WITH MINIMUM DCB 
      IF(ITYP.EQ.6) CALL OPEN(IDCBO,ITXP,NAMEO,4,ISECUO,ICRO) 
      NBLK=NSEC/2 
      IF(NSEC.GT.0) GO TO 299 
      IF(ICONI.EQ.LC.OR.ICONI.EQ.LM) WRITE(LUI,9220) NSEC,NAMEO,ISECUO, 
     1  ICRO
9220  FORMAT("ERROR",I4," CREATING OUTPUT FILE ",3A2,":",I5,":",I5) 
      IF(ICONI.EQ.LP) WRITE(LUI,9222) NSEC
9222  FORMAT("ERROR",I4," CREATING NEW FILE FOR PACK")
      CALL CLOSE(IDCBI) 
223   IF(KFILE.NE.1) GO TO 100
C LOOP IF REPLACE FAILED BECAUSE OUTPUT FILE DID NOT EXIST
      IF(ICONR.EQ.LR.AND.NSEC.EQ.-6) GO TO 100
C IF READING FROM NAME FILE, CLOSE IT AND EXIT IF:
C PACK
C COPY OR MOVE AND ERROR NOT DUPLICATE NAME 
      IF(ICONI.EQ.LP) GO TO 480 
      IF((ICONI.EQ.LC.OR.ICONI.EQ.LM).AND.NSEC.NE.-2) GO TO 480 
C OTHERWISE START OVER
      GO TO 100 
299   CONTINUE
C COPY INPUT FILE TO OUTPUT FILE
300   CONTINUE
      NUM=NR+1
      CALL READF(IDCBI,IERR,IOBUF,IL,LEN,NUM) 
C IF END OF FILE DETECTED, SKIP OUT 
      IF(LEN.EQ.-1.OR.IERR.EQ.-12) GO TO 399
      NR=NR+1 
      IF(IERR.NE.0) WRITE(LUI,9301) IERR,NR 
9301  FORMAT("ERROR",I4," READING RECORD",I6) 
      IF(IERR.EQ.-5) GO TO 399
      IF(LEN.EQ.IL.AND.JTY.NE.1.AND.JTY.NE.2) WRITE(LUI,9302) NR,IL 
9302  FORMAT("RECORD",I6," EQUALS OR EXCEEDS BUFFER (",I4,
     1  " WORDS) AND MAY BE TRUNCATED") 
      CALL WRITF(IDCBO,IERR,IOBUF,LEN,NUM)
      IF(IERR.EQ.0) GO TO 308 
      IF(ICONI.NE.LP) WRITE(LUI,9303) IERR,NR,NAMEO 
      IF(ICONI.EQ.LP) WRITE(LUI,9303) IERR,NR,NAMEI 
9303  FORMAT("ERROR",I4," WRITING RECORD",I6," OF FILE ",3A2) 
C CHECK IF ERROR MEANS THAT THE DISK IS FULL
308   IF(IERR.EQ.-33) GO TO 310 
      GO TO 319 
310   CONTINUE
C OUTPUT DISK IS FULL - PURGE COPY AND CLOSE ORIGINAL FILE
      WRITE(LUI,9310) 
9310  FORMAT("OUTPUT DISK IS FULL") 
      CALL CLOSE(IBCBO) 
      IF(ICONI.EQ.LC.OR.ICONI.EQ.LM)
     1  CALL PURGE(IDCBO,IERR,NAMEO,ISECUO,ICRO)
      IF(ICONI.EQ.LP) CALL PURGE(IDCBO,IERR,NAMEX,ISECUI,-JLUI) 
      CALL CLOSE(IDCBI) 
      GO TO 100 
319   CONTINUE
      GO TO 300 
399   CONTINUE
      CALL LOCF(IDCBO,IERR,IREC,IRB,IOFF,JSEC,JLUO) 
C SKIP TRUNCATION OF OUTPUT IF S OR V AND REPLACING FILE
      IF((ICONT.EQ.LS.OR.ICONT.EQ.LV).AND.KR.EQ.LR) GO TO 407 
C RELEASE EXTRA SPACE IF TYPE 3 OR ABOVE
      IF(ITYP.GE.3) GO TO 402 
      GO TO 404 
402   ITRUN=JSEC/2-IRB-1
      NBL=NBLK-ITRUN
      CALL CLOSE(IDCBO,IERR,ITRUN)
404   CONTINUE
C CLOSE FILE WITH ORIGINAL SIZE IF TYPE 1, 2, OR 6
      IF(ITYP.EQ.1.OR.ITYP.EQ.2.OR.ITYP.EQ.6) GO TO 406 
      GO TO 408 
406   NBL=ISIZE(1)
407   CALL CLOSE(IDCBO) 
408   CONTINUE
C CLOSE INPUT FILE
      CALL CLOSE(IDCBI) 
C CLEAN UP AND MESSAGES 
      IF(KR.EQ.LR) GO TO 440
      IF(ICONI.EQ.LC) GO TO 410 
      IF(ICONI.EQ.LP) GO TO 420 
      IF(ICONI.EQ.LM) GO TO 430 
C FILE COPIED 
410   CONTINUE
      WRITE(LUI,9410) NAMEI,JLUI,NAMEO,JLUO,NR,NBL
9410  FORMAT("FILE ",3A2," ON DISK",I3," COPIED TO ",3A2," ON DISK",I3/ 
     1  "RECORDS",I6,", BLOCKS",I5) 
      GO TO 100 
C FILE PACKED 
420   CONTINUE
      CALL PURGE(IDCBI,IERR,NAMEI,ISECUI,-JLUI) 
C IF ERROR PURGING ORIGINAL FILE, ABORT WITH PROPER MESSAGE 
      IF(IERR.LT.0) GO TO 421 
      GO TO 422 
421   CONTINUE
C INPUT FILE SECURITY CODE REQUIRED 
      IF(IERR.EQ.-7) WRITE(LUI,9421)
9421  FORMAT("INPUT FILE SECURITY CODE REQUIRED - PACK ABORTED")
C OTHER ERROR 
      IF(IERR.NE.-7) WRITE(LUI,9422) IERR 
9422  FORMAT("ERROR",I4," PURGING ORIGINAL FILE - PACK ABORTED")
      CALL PURGE(IDCBO,IERR,NAMEX,ISECUI,-JLUI) 
      CALL CLOSE(IDCBI) 
      CALL EXEC(6)
422   CONTINUE
C RENAME SCRATCH FILE TO OLD FILE NAME
      CALL NAMF(IDCBO,IERR,NAMEX,NAMEI,ISECUI,-JLUI)
      WRITE(LUI,9420) NAMEI,JLUI,NR,NBL 
9420  FORMAT("FILE ",3A2," ON DISK",I3," PACKED - RECORDS",I6,
     1  ", BLOCKS",I5)
      GO TO 100 
C FILE MOVED
430   CONTINUE
      CALL PURGE(IDCBI,IERR,NAMEI,ISECUI,-JLUI) 
C IF ERROR PURGING OLD FILE, PRINT ERROR MESSAGE
      IF(IERR.LT.0) WRITE(LUI,9431) IERR
9431  FORMAT("ERROR",I4," PURGING ORIGINAL FILE") 
      WRITE(LUI,9430) NAMEI,JLUI,NAMEO,JLUO,NR,NBL
9430  FORMAT("FILE ",3A2," ON DISK",I3," MOVED TO ",3A2," ON DISK",I3/
     1  "RECORDS",I6,", BLOCKS",I5) 
      GO TO 100 
C FILE REPLACED 
440   CONTINUE
C PURGE ORIGINAL FILE IF MOVE/REPLACE 
      IF(ICONI.EQ.LM) CALL PURGE(IDCBI,IERR,NAMEI,ISECUI,-JLUI) 
C IF ERROR PURGING OLD FILE, PRINT ERROR MESSAGE
      IF(ICONI.EQ.LM.AND.IERR.LT.0) WRITE(LUI,9431) IERR
      WRITE(LUI,9440) NAMEI,JLUI,NAMEO,JLUO,NR
9440  FORMAT("FILE ",3A2," ON DISK",I3," REPLACED ",3A2," ON DISK",I3/
     1  "RECORDS",I6) 
      GO TO 100 
C END OF PROGRAM
C CLOSE NAME FILE IF ANY
480   CALL CLOSE(IDCBN) 
499   CONTINUE
      END 
      END$
