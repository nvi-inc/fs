FTN4,X
C@DSPLN 
C 
        FUNCTION DSPLN(IBUFF,IBFC,NRY,NSZ,NF1,NF2,NF3,NF4,NF5 
     .,NF6,NF7,NF8),C#870328:18:46    DISPLAY LINE V=1# 
C 
C     DSPLN 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C 1.1.   DSPLN
C               THIS ROUTINE DISPLAYS THE VECTOR NRY OF SIZE NSZ ACCORDING
C       TO THE FORMAT SPECIFIED IN NFx WHERE X=(1,2,3,4,5,6,7,8) OR UNTIL 
C       THE SIZE OF NRY HAS BEEN SPECIFIED.  SEE BELOW FOR FORMATING OPTIONS
C 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C 1.3.   REFERENCES - document cited
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: CALL DSPLN(NRY,NSZ,NF1,..,NF8) 
C 
C     INPUT VARIABLES:
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
        DIMENSION IBUFF(1),NRY(1) 
C       IBUFF   - BUFFER TO BE FILLED WITH INFORMATION
C 
C       IBFC    - FIRST CHARACTER TO INSERT IN BUFFER 
C 
C       NRY     - THE VECTOR TO BE DISPLAYED BY THIS ROUTINE
C 
C       NSZ     - THE NUMBER OF ENTRIES IN THE VECTOR TO BE DISPLAYED 
C 
C       NFx     - FOR 0<X<9 THIS IS THE FORMAT SPECIFICATION STATEMENT
C                 FOR THE ENTRY TAKEN IN SUCCESSION.  THE FORMAT OF EACH
C                 ENTRY IS A ONE WORD VARIABLE ASSUMED TO BE OF THE 
C                 FORM; 
C 
C               2Hnt
C 
C               WHERE n IS THE REPEAT FACTOR FOR THIS TYPE AND IS COUNTED 
C               IN THE FOLLOWING SEQUENCE 1 2 3 4 5 6 7 8 9 A B C D E F 
C               G H I J K L M N O P Q R S T U V W X Y Z (I. E. BASE 36) 
C 
C               WHERE t IS THE TYPE FIELD AND INVOKES THE FOLLOWING OPTIONS 
C 
C               t = A    ASCII WITH NO SEPERATORS BETWEEN REPEATED ENTRIES
C                        (I. E. 2H1A,2H1A WILL PUT A COMMA BETWEEN ENTRIES
C                        WHERE 2H2A WILL NOT HAVE AN INTERVEENING COMMA)
C 
C                   I    INTEGER CONVERSION WITH A COMMA BETWEEN ENTRIES
C                        WITH NO SPACES (6 DIGITS MAXIMUM ALLOWED OF COURSE)
C 
C                  U    IF THIS ENTRY =2Hlu IT WILL BE PRINTED AS THAT
C                       ELSE IT WILL BE TREATED AS AN I FORMAT AND PRINTED
C                       AS THOUGH I HAD BEEN SPECIFIED
C 
C     OUTPUT VARIABLES: 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C       DSPLN=IRGA,IRGB 
C 
C       IRGA    - LAST CHARACTER PUT IN BUFFER FROM THIS CALL 
C 
C               * NOTE * IRGA GIVES THE LAST CHARACTER IN THE BUFFER THAT 
C                       WAS REQUESTED FOR THIS CALL, BUT THE NEXT CHARACTER 
C                       WILL BE COMMA - SO IT THE USER WISHES TO RECALL THIS
C                       THIS ROUTINE FOR MORE INFORMATION ADD 2 TO IRGA 
C                       FOR THE RECALL START LOCATION 
C 
C 2.2.   COMMON BLOCKS USED 
C 
C 2.3.   DATA BASE ACCESSES 
C 
C 2.4.   EXTERNAL INPUT/OUTPUT
C 
C 2.5.   SUBROUTINE INTERFACE:
C 
C     CALLING SUBROUTINES: SUB1, SUB2, ... (not required for utilities) 
C 
C     CALLED SUBROUTINES: SUB1, SUB2, ... (includes segments scheduled) 
C 
C 3.  LOCAL VARIABLES 
C 
C       GLOBAL DEFS REFERENCED: "name'(local name if different)' ...
C 
C 
C       IRGA    - CONTENTS OF A REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
C       IRGB    - CONTENTS OF B-REG WHERE REG WAS RETURNED FROM FUNCTION
C                 CALL TO A ROUTINE 
C 
        DIMENSION IREG(2) 
C 
C       IREG    - DUMMY REGISTER RETREIVAL AID
C 
        EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 4.  CONSTANTS USED
C 
C 5.  INITIALIZED VARIABLES 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C     LAST MODIFIED:
C# LAST COMPC'ED  870328:18:46urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C               6.1  INITIALIZE VARIABLES 
C 
        NPS=IGNPS(NPS)
  
  
C 
C               SET POINTER 
C 
        ILOC=IBFC 
C 
C               SET FORMAT RECOVERY 
C 
        IFORM=3 
C 
C               SET INPUT WORD POINTER
C 
        IWORD=1 
C 
C               6.2     RECOVER FORMAT WORD 
C 
1000    CONTINUE
C 
        GO TO (1100,1200,1300,1400,1500,1600,1700,1800),IFORM-2 
C 
1100    NFWD=NF1
        GO TO 2000
1200    NFWD=NF2
        GO TO 2000
1300    NFWD=NF3
        GO TO 2000
1400    NFWD=NF4
        GO TO 2000
1500    NFWD=NF5
        GO TO 2000
1600    NFWD=NF6
        GO TO 2000
1700    NFWD=NF7
        GO TO 2000
1800    NFWD=NF8
        GO TO 2000
2000    CONTINUE
C 
C               GET FORMATTING INFORMATION
C 
        ICNT=ICHAR(NFWD,1)-60B
C 
C               IF A LETTER CORRECT TO BASE 36
C 
        IF(ICNT .GT. 9)ICNT=ICNT-7
C 
        ITYPE=ICHAR(NFWD,2) 
C 
5000    CONTINUE
C 
C               GET ITYPE FOR LOOP USE
C 
        LTYPE=ITYPE 
C 
C               CHECK FOR U FORMATING 
C 
        IF(LTYPE .NE. 125B)GO TO 10000
C 
C               CHANGE TYPE IN CASE lu NOT FOUND
C 
        LTYPE=111B
C 
C               CHECK FOR lu
C 
        IF(NRY(IWORD) .NE. 66165B)GO TO 10000 
C 
C               MOVE IN lu TO OUTPUT AND GO TO NEXT ENTRY 
C 
        ILOC=ICHMV(IBUFF,ILOC,2Hlu,1,2) 
C 
        GO TO 70000 
C 
10000   CONTINUE
C 
C               CHECK FOR C FORMAT SOUGHT 
C 
        IF(LTYPE .NE. 103B)GO TO 15000
C 
C               MOVE IN CNTL INFO 
C 
        ILOC=ICHMV(IBUFF,ILOC,5HCNTL-,1,5)
C 
C               NOW MOVE IN THE CHARACTER 
C 
        ILOC=ICHMV(IBUFF,ILOC,100B+NRY(IWORD),2,1)
C 
C               NOW GET NEXT ENTRY
C 
        GO TO 70000 
C 
15000   CONTINUE
C 
C               CHECK FOR E FORMAT SOUGHT 
C 
        IF(LTYPE .NE. 105B)GO TO 20000
C 
C               MOVE IN ESC INFO
C 
        ILOC=ICHMV(IBUFF,ILOC,4HESC ,1,4) 
C 
C               NOW MOVE IN THE CHARACTER 
C 
        ILOC=ICHMV(IBUFF,ILOC,NRY(IWORD),2,1) 
C 
C               NOW GET NEXT ENTRY
C 
        GO TO 70000 
C 
20000   CONTINUE
C 
C               ASCII FORMAT
C 
        IF(LTYPE .NE. 101B)GO TO 30000
C 
C               MOVE IN THE CHARACTERS SOUGHT 
C 
        ILOC=ICHMV(IBUFF,ILOC,NRY(IWORD),1,2*ICNT)
C 
C               MUST CORRECT ICNT FOR LARGER THAN ONE SIZE
C 
        IWORD=IWORD+ICNT-1
C 
C               RESET ICNT ALSO 
C 
        ICNT=1
C 
C               NOW NEXT ENTRY
C 
        GO TO 70000 
C 
30000   CONTINUE
C 
C               CHECK FOR I FORMAT
C 
        IF(LTYPE .NE. 111B)GO TO 40000
C 
C               CONVERT UP TO SIX DIGITS AND LEFT JUSTIFY 
C 
        ILOC=IB2AS(NRY(IWORD),IBUFF,ILOC,100006B)+ILOC
C 
C               GO TO NEXT ENTRY
C 
        GO TO 70000 
C 
40000   CONTINUE
C 
C               INVALID FORMATREQUESTED SENT ** TO ALERT USER 
C 
        ILOC=ICHMV(IBUFF,ILOC,2H**,1,2) 
C 
C               GO TO NEXT ENTRY
C 
        GO TO 70000 
C 
70000   CONTINUE
C 
C               INSERT SEPERATOR BETWEEN FIELDS 
C 
        ILOC=ICHMV(IBUFF,ILOC,2H, ,1,1) 
C 
C               STEP TO NEXT WORD IN INPUT
C 
        IWORD=IWORD+1 
C 
C               IF ALL WORDS USED EXIT NOW
C 
        IF(IWORD .GT. NSZ)GO TO 80000 
C 
C               REDUCE ICNT 
C 
        ICNT=ICNT-1 
C 
C               IF MORE THIS TYPE LOOP BACK FOR IT
C 
        IF(ICNT .GT. 0)GO TO 5000 
C 
C               STEP TO NEXT FORMAT TYPE
C 
        IFORM=IFORM+1 
C 
C               IF ENTRY PRESENT PROCESS IT NOW 
C 
        IF(IFORM .LE. NPS)GO TO 1000
C 
80000    CONTINUE 
C 
C               ALL FORMATTING REQUEST DONE NOW RETURN INFORMATION
C 
        IRGA=ILOC-2 
C 
        DSPLN=REG 
C 
99999   CONTINUE
C 
        RETURN
        END 
        END$
