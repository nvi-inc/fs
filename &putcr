FTN4,X
C@PUTCR 
C 
        FUNCTION PUTCR(IX,IY,ISDLU,IMAD),C#870115:05:50    #
C 
C       PUTCR 
C 
C 1.  NAME PROGRAM SPECIFICATION
C 
C  1.1  PUTCR           THIS ROUTINE LOCATES THE CURSOR ON THE SCREEN 
C               AT THE POSITION SPECIFIED BY IX AND IY.  THE MODE OF
C               IX AND IY IS DETERMINED BY IMAD THE METHOD OF ADDRESS 
C               PARAMETER.  THE VALUE OF PUTCR AT THE END OF THE CALL 
C               IS DETERMINED BY THE VALUE OF IMAD AS GIVEN IN THE FOLLOWING
C               TABLE.
C 
C       WHERE MAD=IAND(7,IMAD)
C 
C 
C               MAD=            IX,IY MODE              PUTCR RETURN
C 
C                 1             MEMORY ABSOLUTE         SCREEN ABSOLUTE 
C                 2             MEMORY RELATIVE         SCREEN ABSOLUTE 
C                 3             SCREEN RELATIVE         MEMORY ABSOLUTE 
C                 4             SCREEN ABSOLUTE         MEMORY ABSOLUTE 
C 
C 
C 1.2.   RESTRICTIONS - limits on use of routine
C 
C       1. MEMORY ADDRESSING MOVES THE CURSOR WITH MEMORY ADDRESSIN LIMITS. 
C       2. SCREEN ADDRESSING MOVES THE CURSOR WITH SCREEN ADDRESSING LIMITS.
C          (-1<IX<80, -1<IY<24) 
C       3. IF MEMORY LOCK IS ON THE MEMORY REFERENCE MODES(1 OR 2) WILL 
C          NOT MOVE THE CURSOR TO THE CORRECT LINE(USE EITHER 3 OR 4) 
C       4. THE SERVIVCES PROVIDED BY DVR05 ARE ASSUMED IN THIS ROUTINE
C 
C 1.3.   REFERENCES - document cited
C 
C       1. 2645 A DISPLAY STATION REFERENCE MANUAL #02645-90005 
C       2. RTE DRIVER DVR05 FOR HP 264X TERMINALS  #92001-90015 
C       3. 2644 DESCRIPTION AND USERS GUIDE(NO NUMBER COULD BE FOUND) 
C 
C 2.  NAME INTERFACE
C 
C 2.1.   CALLING SEQUENCE: REG=PUTCR(IX,IY,ISDLU) 
C 
C     INPUT VARIABLES:
C 
C       IX      - THE X COORDINATE OF THE POSITION OF THE CURSOR AS DEFINED 
C                 DEFINED BY THE VALUE OF MAD 
C 
C       IY      - THE Y COORDINATE AS DEFINED BY THE VALUE OF MAD 
C 
C       IMAD    - THE METHOD OF ADDRESSING TO BE USED WITH IX AND IY. 
C                 AND CONTROL FOR RETURNING THE OPPISITE POSITTION OF 
C                 WHERE THE CURSOR ENDED(NOTE RELATIVE AND ABSOLUTE ARE 
C                 OPPISITES IN THIS CONTEXT)
C                 THE FOLLOWING METHODS ARE PERMITTED.
C 
C               = 1  IX AND IY IN MEMORY ABSOLUTE COORDINATES 
C               = 2  IX AND IY IN MEMORY RELATIVE COORDINATES 
C               = 3  IX AND IY IN SCREEN RELATIVE COORDINATES 
C               = 4  IX AND IY IN SCREEN ABSOLUTE COORDINATES 
C 
C       ** NOTE 1 **  MEMORY ADDRESSING IN IX IS LIMITED BY 0 AND 79
C                     IY WILL ALWAYS BE GREASTER THAN 0 ITS UPPER BOUND 
C                     DEPENDS ON THE AMOUNT OF INFORMATION PRESENT
C 
C       ** NOTE 2 **  SCREEN ADDRESSING IS LIMITED AS FOLLOWS 
C                       -1<IX<80   -1<IY<24 
C 
C 
C               ANY OTHER VALUE OF MAD WILL BE ABORTED AND PUTCR WILL 
C               RETURN A -1,-1 VALUE FOR THE COORDINATES
C 
C                                                       1978.320:14:50
C       ISDLU   - THE CONTROL WORD FOR THE DISPLAY DEVICE BEING REFERENCED
C                 THIS WORD DESCRIBES THE STATE OF THE DEVICE TO ALLOW
C                 THE USER TO PROPERLY AND KNOWLEDGEABLY REFERENCE THE
C                 DISPLAY DEVICE ON THE LU INCLUDED IN THIS DEFINITIOPN 
C                 THE PARAMETER HAS THE FOLLOWING STRUCTURE 
C 
C               ISDLU=IMOD*10000B+ISTT*100B+LU
C 
C               THE FOLLOWING IS THE DESCRIPTION OF THE MEANING OF THE
C               SUBFIELDS.
C 
C               LU      - THE LOGICAL UNIT ADDRESS OF THE DEVICE
C 
C               ISTT    - THE STATE OF THE DEVICE FOR THE CURRENT REFERENCE 
C                         THE DETAILS OF ISTT ARE THE FOLLOWING USE OF
C                         THE INDIVIDUAL BITS 
C 
C                       ISTT=  BCFKMX 
C 
C                       A ONE IN THE SPECIFIED POSITION INDICATES THIS
C                       STATE HAS BEEN SET FOR THE DEVICE 
C 
C                       B(40B)  - BLOCK MODE
C 
C                       C(20B)  - CURSORE POSITION SHOULD BE PRESERVED
C 
C                       F(10B)  - FORMS MODE IS ON (SOME FUNCTIONS RESPOND
C                                 DIFFERENTLY IN THIS MODE) 
C 
C                       K(4B)   - KEY BOARD IS LOCKED TO KEEP USER OUT
C 
C                       M(2B)   - MEMORY LOCK IS ON 
C 
C                       X(1B)   - NOT DEFINED AS OF ABOVE DATE
C 
C               IMOD    - THE MODEL NUMBER OF THE DEVICE ON THIS LU 
C 
C                       0       - 2640
C 
C                       1       - 2644
C 
C                       2       - 2645
C 
C                       3       - 2647
C 
C                       4       - 2648
C 
C                       5       - 2649
C 
C 
C     OUTPUT VARIABLES: 
C 
C       PUTCR   - THE IPX,IPY OF THE POSITION OF THE CURSOR AFTER PUTTING 
C                 THE CURSOR AT THE LOCATION SPECIFIED BY IX, IY
C                 IF LU IS POSITIVE IPX AND IPY WILL BE THE RELATIVE
C                 LOCATION OF THE CURSOR ON THE SCREEN.  IF LU WAS NEGATIVE 
C                 IPX, IPY WILL BE THE ABSOLUTE LOCATION OF WHERE THE 
C                 CURSOR ENDED AFTER THE ROUTINE WAS CALLED 
C 
C 3.  LOCAL VARIABLES 
C 
C       IRGA    - A REG FROM FUNCTION CALLS 
C 
C       IRGB    - B REG FROM FUNCTION CALLS 
C 
C       ISC     - CONVERTION CONTROL FOR PRECEEDING SIGNS 
C 
C       LU      - THE LOGICAL UNIT ADDRESS OF THE DISPLAY UNIT
C 
C       MC      - CURSOR POSITIONING MODE CONTROL CHARACTER 
C 
C       REG     - RETURN VALUES FROM FUNCTION CALLS 
C 
      DIMENSION IPCC(8),IREG(2) 
C 
C       IPCC    - INPUT CONTROL CHARACTERS TO SCREEN FOR CURSOR MOVEMENT
C 
C       IREG    - DUMMY VARIABLE USED TO GET A&B REGS FROM FUNCTION CALLS 
C 
C               - description of variable (array) NNN including units 
C 
      EQUIVALENCE (REG,IREG(1),IRGA),(IREG(2),IRGB) 
C 
C 4.  CONSTANTS USED
C 
      DIMENSION IMC(4),ICCB(4),ICNTL(2) 
C 
        DATA ICCB/0B,0B,100000B,0B/ 
C 
C       ICCB    - CONVERSION CONTROL BITS TO GIVE LEADING SIGNS FOR 
C                 RELATIVE ADDRESSING.  A ZERO GIVES ONLY MINUS SIGNS 
C                 IN CONVERSION ROUTINE 
C 
        DATA ICNTL/15446B,60537B/ 
C 
C       ICNTL   - INITIAL AND FINAL CONTROL CHARACTERS FOR POSITIONING
C                 OF THE CURSOR (SEE REF. 1 PG 3-2 CURSOR POSITIONING 
C                 ALSO REF. 2. PG 2-4 FOR TRAILING _ )
C                 CHARACTER PRESENT ARE AS FOLLOWS
C 
C                       ESC & a _ 
C 
        DATA IMC/71162B,74571B,41400B/
C 
C       IMC     - THIS IS THE CURSOR ADDRESSING CONTROL XCHARACTERS 
C                 THEY ARE DOCUMENTED IN REFERENCE 3. AND HAVE THE
C                 FOLLOWING REPRESENTATION. 
C 
C                       162B  =  r   ROW REFERENCE OF STORAGE MEMORY
C                     71000B         (THIS MODE DOES NOT OPERATE IF MEMORY
C                                     LOCK IS ON) 
C 
C                       171B  =  y   SCREEN REFERENCE(DISPLAY AREA) 
C                     74400B
C 
C                       103B  =  C   COLUMN REFERENCE AND FINAL CHARACTER 
C                     41400B
C 
C               NOTE ** IF (+/-) PRECEEDS NUMBERS THEY ARE TAKEN RELATIVE 
C                       TO THE REFERENCE SHOWN ABOVE. 
C 
C 6.  PROGRAMMER: LEE N. FOSTER 
C                 DOUG ROBERTSON - THE SETCR ROUTINE WAS USED AS A MODEL
C                                  FOR THE DESIGN OF THIS ROUTINE 
C     LAST MODIFIED:
C# LAST COMPC'ED  870115:05:50urrent date) #
C 
C     PROGRAM STRUCTURE 
C 
C       6.1     CHECK VALIDITY OF MAD AND DECIDE MODE 
C 
C 
C               GET LU FROM ISDLU 
C 
        LU=IAND(ISDLU,77B)
C 
C               GET MAD FROM IMAD 
C 
        MAD=IAND(IMAD,7)
C 
        IF(MAD .LT. 1 .OR. 4 .LT. MAD) GO TO 910
C 
        ISC=ICCB(MAD) 
C 
C       6.2     MOVE IN CONTROL CHARACTERS AND CONVERTED LOCATIONS
C 
        CALL ICHMV(IPCC,1,ICNTL,1,3)
C 
C               KEEP INDEX ON CHARACTER POSITON TO NEXT FILL
C 
        INXFC=4 
C 
C               SKIP ROW DESIGNATION IF IY=0 AND MODE IS RELATIVE 
C 
        IF(IAND(MAD,2) .NE. 0 .AND. IY .EQ. 0) GO TO 200
C 
C               INSERT ROW DESIGNATION AND CONTROL CHARACTER
C 
        INXFC=INXFC+IB2AS(IY,IPCC,INXFC+ISC,100004B)
C 
C               INSERT CONTROL CHARACTER
C 
        INXFC=ICHMV(IPCC,INXFC,IMC,MAD,1) 
C 
200     CONTINUE
C 
C               ALWAYS DO COLUMN POSITION 
C 
        INXFC=INXFC+IB2AS(IX,IPCC,INXFC+ISC,100004B)
C 
C               INSERT COLUMN CONTROL CHARACTER AND GET CHARACTER COUNT 
C 
        INXFC=ICHMV(IPCC,INXFC,IMC,5,1) 
C 
C               INSERT CR SUPRESSOR AT THE END
C 
        CALL ICHMV(IPCC,INXFC,ICNTL,4,1)
C 
C       6.2     MOVE CORSOR TO DESIRED POSITION 
C 
        CALL EXEC(2,LU,IPCC,-INXFC) 
C 
C       6.3     FIND WHERE CURSOR IS TO TELL USER IF USER REQUESTS IT 
C 
C               CHECK TO SEE IF RETURN IS ASKED FOR 
C 
        IF(IAND(IMAD,177770B) .EQ. 0)GO TO 999
C 
        REG=GETCR(LX,LY,ISDLU)
C 
C       6.5     DECIDE WHICH POSITION TO RETURN TO CALLER AND RETURN
C 
        IF(MAD .LE. 2) GO TO 999
C 
C               MEMORY COORDINATES MUST BE RETURNED SET UP HERE 
C 
        IRGA=LX 
        IRGB=LY 
C 
        GO TO 999 
C 
910     CONTINUE
C 
C               MAD PARAMETER NOT VALID SET RETURN IX,IY TO ALL BITS ON 
C 
        IRGA=-1 
        IRGB=-1 
C 
999     CONTINUE
C 
C               RETURN COORDINATES TO USER
C 
        PUTCR=REG 
C 
      RETURN
      END 
